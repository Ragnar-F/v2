<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Error-Objekt | AutoHotkey v2</title>
<meta name="description" content="Error-Objekte, die bei Misserfolg vom internen Code ausgelöst werden." />
<meta name="ahk:equiv-v1" content="AutoHotkey.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Error-Objekt</h1>

<p>Error-Objekte werden von internem Code <a href="../commands/Throw.htm">ausgelöst</a>, wenn ein Laufzeitfehler auftritt, aber sie können auch explizit vom Skript ausgelöst werden.</p>

<p id="Message"><strong>Message:</strong> Eine Fehlermeldung.</p>
<p id="What"><strong>What:</strong> Was die Ausnahme ausgelöst hat. Enthält normalerweise den Namen einer Funktion, aber ist leer bei Ausnahmen, die aufgrund eines Fehlers in einem Ausdruck ausgelöst werden (z. B. wenn ein mathematischer Operator für einen nicht-numerischen Wert verwendet wird).</p>
<p id="Extra"><strong>Extra:</strong> Ein Zeichenkettenwert, der sich auf den Fehler bezieht, falls vorhanden. Wenn dieser Wert in eine nicht-leere Zeichenkette umgewandelt werden kann, wird im Standard-Fehlerdialogfenster eine Zeile mit "Specifically:" gefolgt von dieser Zeichenkette angezeigt.</p>
<p id="File"><strong>File:</strong> Der vollständige Pfad der Skriptdatei, die die Zeile enthält, in der der Fehler aufgetreten ist bzw. in der das Error-Objekt konstruiert wurde.</p>
<p id="Line"><strong>Line:</strong> Die Nummer der Zeile, in der der Fehler aufgetreten ist bzw. in der das Error-Objekt konstruiert wurde.</p>

<p>Das Standard-Fehlerdialogfenster benötigt diese als Werteigenschaften, die nicht von einem Base-Objekt geerbt wurden.</p>

<h2 id="new">Error.New() / Exception()</h2>
<p>Erstellt ein <a href="../objects/Error.htm">Error</a>-Objekt.</p>
<pre class="Syntax">NewError := <span class="func"><i>Error</i>.New</span>(Message <span class="optional">, What, Extra</span>)
NewError := <span class="func">Exception</span>(Message <span class="optional">, What, Extra</span>)</pre>
<p><em><strong>Error</strong></em> kann mit einer der unter <a href="#error-types">Error-Typen</a> aufgeführten Unterklassen ersetzt werden.</p>
<p>Die Parameter entsprechen direkt den oben beschriebenen Eigenschaften, können aber bei Error-Unterklassen, die die Methode __New überschreiben, abweichen.</p>
<p>Lässt man <em>What</em> weg, wird standardmäßig der Name der aktuellen Funktion verwendet. Ansonsten kann eine Zeichenkette oder ein negativer Offset vom Anfang der Aufrufliste angegeben werden. Zum Beispiel bewirkt ein Wert von -1, dass <code>NewError.What</code> auf die aktuelle Funktion gesetzt wird, und dass <code>NewError.Line</code> und <code>NewError.File</code> auf die Zeile und Datei gesetzt wird, die sie aufgerufen hat. Wenn das Skript jedoch <a href="../Scripts.htm#ahk2exe">kompiliert</a> oder der Offset ungültig ist, wird <em>What</em> einfach in eine Zeichenkette umgewandelt.</p>
<p>Wenn eine Ausnahme automatisch aufgrund eines Skriptfehlers (und nicht durch eine benannte interne Funktion) ausgelöst wird, ist <em>What</em> in der Regel leer.</p>
<p><em>Message</em> und <em>Extra</em> werden in Zeichenketten umgewandelt. Diese werden in einem Fehlerdialogfenster angezeigt, wenn die Ausnahme ausgelöst aber nicht abgefangen wurde.</p>
<pre>try
    IrgendeineFunktion()
catch e
    MsgBox(Type(e) "in " e.What ", das auf Zeile " e.Line " aufgerufen wurde.")

IrgendeineFunktion() {
    throw Error.new("Fehlschlag", -1)
}</pre>

<h2 id="error-types">Error-Typen</h2>

<p>Die folgenden Unterklassen von <strong>Error</strong> sind vordefiniert:</p>
<ul>
  <li id="IndexError"><strong>IndexError</strong>: Es wurde versucht, mit der <a href="../Objects.htm#__Item">__Item-Eigenschaft</a> des Objekts ein Element auf einem ungültigen Index zuzuweisen oder abzurufen, auf das normalerweise mit dem <a href="../Variables.htm#square-brackets">Elementzugriffsoperator</a> zugegriffen wird (auch bekannt als Indexierungsoperator).<ul>
    <li id="KeyError"><strong>KeyError</strong>: Unterklasse von IndexError, die von Map verwendet wird.</li>
  </ul></li>
  <li id="MemberError"><strong>MemberError</strong>: Es wurde versucht, auf eine undefinierte Eigenschaft oder Methode zuzugreifen. <strong>Message</strong> gibt an, welche Art von Wert aufgerufen wird, und den Namen der Eigenschaft oder Methode. Dieser Error-Typ wird nicht direkt verwendet; stattdessen wird eine der folgenden Unterklassen verwendet.<ul>
    <li id="PropertyError"><strong>PropertyError</strong></li>
    <li id="MethodError"><strong>MethodError</strong></li>
  </ul></li>
  <li id="MemoryError"><strong>MemoryError</strong>: Eine Speicherreservierung ist fehlgeschlagen.</li>
  <li id="OSError"><strong>OSError</strong>: Ein codeinterner Funktionsaufruf an eine Win32-Funktion ist fehlgeschlagen. <strong>Message</strong> enthält einen Fehlercode und eine Beschreibung, die beide vom Betriebssystem generiert wurden.</li>
  <li id="TargetError"><strong>TargetError</strong>: Eine Funktion ist fehlgeschlagen, weil ihr Ziel nicht gefunden werden konnte. <strong>Message</strong> gibt an, um welche Art von Ziel es sich handelt, z. B. um ein Fenster, ein Steuerelement, ein Menü oder eine Statusleiste.</li>
  <li id="TimeoutError"><strong>TimeoutError</strong>: <a href="../commands/SendMessage.htm">SendMessage</a> hat das Zeitlimit überschritten.</li>
  <li id="TypeError"><strong>TypeError</strong>: Ein unerwarteter Typ wurde für einen Eingabewert einer Funktion, einer Eigenschaftszuweisung oder einer anderen Operation verwendet. <strong>Message</strong> gibt in der Regel an, welcher Typ erwartet wird und welcher Typ tatsächlich vorliegt, und <strong>Extra</strong> enthält eine Zeichenkette, die den betroffenen Wert widerspiegelt.</li>
  <li id="ValueError"><strong>ValueError</strong>: Ein unerwarteter Wert wurde für einen Eingabewert einer Funktion, einer Eigenschaftszuweisung oder einer anderen Operation verwendet. <strong>Message</strong> gibt in der Regel an, welche Erwartung gebrochen wurde, und <strong>Extra</strong> enthält eine Zeichenkette, die den betroffenen Wert widerspiegelt.</li>
  <li id="ZeroDivisionError"><strong>ZeroDivisionError</strong>: Es wurde versucht, in einem Ausdruck oder mit der Mod-Funktion durch Null zu dividieren.</li>
</ul>
<p>Fehler werden auch über die Base-Error-Klasse ausgelöst.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../commands/Throw.htm">Throw</a>, <a href="../commands/Try.htm">Try</a>, <a href="../commands/Catch.htm">Catch</a>, <a href="../commands/Finally.htm">Finally</a>, <a href="../commands/OnError.htm">OnError</a></p>

</body>
</html>