<!DOCTYPE HTML>
<html>
<head>
<title>OnCommand</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>OnCommand</h1>
<p>Registriert eine Funktion oder Methode, die aufgerufen werden soll, wenn das Steuerelement eine Nachricht via <a href="https://msdn.microsoft.com/library/ms647591">WM_COMMAND</a> empfängt.</p>
<pre class="Syntax">
GuiControl.OnCommand(NachrichtCode, Callback [, HinzufügenEntfernen := 1])
</pre>

<h3>Parameter</h2>
<dl>
  <dt>GuiControl</dt>
  <dd><p>Das <a href="GuiControl.htm">GuiControl</a>-Objekt eines Steuerelements, das überwacht werden soll.</p></dd>
  
  <dt>NachrichtCode</dt>
  <dd><p>Ein steuerelement-definierter Nachrichtencode, der überwacht werden soll.</p></dd>
  
  <dt>Callback</dt>
  <dd>
    <p>Eine Funktion, Methode oder ein Objekt, das aufgerufen werden soll, wenn das Ereignis ausgelöst wird.</p>
    <p>Wenn dieser Parameter eine Zeichenkette ist, dann ist dessen Bedeutung abhängig davon, ob das GUI ein <a href="../commands/GuiCreate.htm#EventObj">Event-Sink</a> hat (das heißt, ob <a href="../commands/GuiCreate.htm">GuiCreate</a>'s <em>EreignisObj</em>-Parameter angegeben wurde). Wenn das GUI ein Event-Sink hat, muss die Zeichenkette der Name einer Methode sein, die zu einem Event-Sink gehört; ansonsten muss sie der Name einer Funktion sein.</p>
    <p>Wenn man in diesem Fall trotzdem eine Funktion registrieren möchte, muss ein <a href="Func.htm">Funktionsverweis</a> übergeben werden.</p>
  </dd>
  
  <dt>HinzufügenEntfernen</dt>
  <dd>
    <p>Eines der folgenden Werte:<br>
    <strong>1</strong> (Standard): Ruft die Callback-Funktion bei mehreren registrierten Callback-Funktionen als Letzte auf.<br>
    <strong>-1</strong>: Ruft die Callback-Funktion bei mehreren registrierten Callback-Funktionen als Erste auf.<br>
    <strong>0</strong>: Ruft die Callback-Funktion überhaupt nicht auf.</p>
  </dd>
</dl>

<h2 id="WM_COMMAND">WM_COMMAND</h2>
<p>Bestimmte Typen von Steuerelementen senden eine <a href="https://msdn.microsoft.com/library/ms647591">WM_COMMAND</a>-Nachricht, wann immer ein interessantes Ereignis auftritt. Das sind in der Regel die Standardsteuerelemente von Windows, die schon sehr lange im Einsatz sind; neuere Steuerelemente benutzen die WM_NOTIFY-Nachricht (siehe <a href="GuiOnNotify.htm">OnNotify</a>). Häufig benutzte Nachrichtencodes wurden in Ereignisse umgewandelt, die ein Skript mit <a href="GuiOnEvent.htm">OnEvent</a> überwachen kann.</p>
<p>Die Parameter der Nachricht enthalten die Steuerelement-ID, das HWND und den Nachrichtencode, die AutoHotkey benutzt, um die Nachricht an die entsprechende Callback-Funktion zu senden. Es gibt keine zusätzlichen Parameter.</p>
<p>Welche Nachrichten es genau gibt (falls vorhanden), findest du in der Dokumentation des Steuerelements. <a href="https://msdn.microsoft.com/library/bb773169">Control Library (MSDN)</a> enthält Links zu typischen Windows-Steuerelementen (allerdings benutzen nur ein Paar von denen WM_COMMAND). Die Nachrichtencodes (Nummern) sind in der Windows SDK zu finden, oder via Suchmaschine.</p>

<h2 id="Callback_Parameters">Callback-Parameter</h2>
<p>Die <a href="GuiOnEvent.htm#Callback_Parameters">OnEvent-Hinweise</a> bezüglich <code>this</code> und Bound-Funktionen gelten auch für OnCommand.</p>
<p>Die Callback-Funktion akzeptiert einen Parameter:</p>
<pre class="Syntax">Callback(GuiControl)</pre>

<h2 id="Callback_Return_Value">Callback-Rückgabewert</h2>
<p>Wenn mehrere Callback-Funktionen für ein Ereignis registriert sind, kann eine Callback-Funktion einen nicht-leeren Wert zurückgeben, um zu verhindern, dass die restlichen Callback-Funktionen aufgerufen werden.</p>
<p>Das Steuerelement ignoriert diesen Rückgabewert.</p>

<h2 id="Related">Siehe auch</h2>
<p>Folgende <a href="GuiOnEvent.htm">OnEvent</a>-Hinweise gelten auch für OnCommand: <a href="GuiOnEvent.htm#Threads">Threads</a>, <a href="GuiOnEvent.htm#Destroying_the_GUI">GUI zerstören</a>.</p>
<p>Mit <a href="GuiOnNotify.htm">OnNotify</a> kann eine WM_NOTIFY-Nachricht überwacht werden.</p>

</body>
</html>