<!DOCTYPE HTML>
<html>
<head>
<title>Label</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Label</h1>
<p>Ein Label identifiziert eine Codezeile. Es dient als Ziel von <a href="../commands/Goto.htm">Goto</a> oder formt eine <a href="../commands/Gosub.htm">Subroutine</a>.</p>
<pre class="Syntax">Labelname:</pre>
<p>Um ein Label zu erstellen, muss ein Labelname und Doppelpunkt angegeben werden, wie oben gezeigt. Neben Leerraum und Kommentare darf sich kein anderer Code auf derselben Zeile befinden.</p>
<p><strong>Namen</strong>: Labelnamen sind nicht von der Groß- und Kleinschreibung abhängig und bestehen aus beliebigen Zeichen, außer Leerzeichen, Tabulator, Komma und <a href="EscapeChar.htm">Escapezeichen</a> (`). Allerdings sollten die Namen aufgrund von Gestaltungsrichtlinien nur aus Buchstaben, Zahlen und Unterstriche bestehen (zum Beispiel: <em>MeineListView</em>, <em>Menü_Datei_Öffnen</em> und <em>outer_loop</em>).</p>
<p><strong>Gültigkeitsbereich</strong>: Jede Funktion hat ihre eigene Liste mit lokalen Label. Wenn ein lokales und globales Label den gleichen Namen haben, hat das lokale Label Vorrang (und das globale Label nicht zugreifbar). Es gelten einige Einschränkungen, wenn <a href="../Functions.htm#gosub">Subroutinen innerhalb einer Funktion verwendet werden</a>.</p>
<p><strong>Ziel</strong>: Das Ziel eines Labels ist die nächste Zeile mit ausführbarem Code. Ausführbarer Code beinhaltet Funktionen, Zuweisungen, <a href="../Variables.htm#Expressions">Ausdrücke</a> und <a href="../commands/Block.htm">Blöcke</a>, aber nicht Direktiven, Label, Hotkeys oder Hotstrings. Im folgenden Beispiel verweisen <code>run_notepad</code> und <code>#n</code> auf dieselbe <code>Run</code>-Zeile:</p>
<pre>run_notepad:
#n::
    Run "notepad"
    return
</pre>
<p><strong>Ausführung</strong>: Labels haben wie Direktiven keine Wirkung, wenn sie während einer normalen Ausführung erreicht werden. Im folgenden Beispiel wird eine MsgBox zweimal angezeigt - einmal beim Ausführen der Subroutine durch <a href="../commands/Gosub.htm">Gosub</a> und nochmals, nachdem die Subroutine ihr Return erreicht hat:</p>
<pre>Gosub Label1

Label1:
MsgBox <a href="../Variables.htm#ThisLabel">A_ThisLabel</a>
return</pre>

<h2>Subroutinen</h2>
<p>Eine Subroutine ist ein Teil des Codes, der <em>aufgerufen</em> werden kann, um eine bestimmte Aufgabe durchzuführen. Die Ausführung einer Subroutine beginnt beim Ziel eines Labels und endet, wenn ein <a href="../commands/Return.htm">Return</a> oder <a href="../commands/Exit.htm">Exit</a> erreicht wird. Da das Ende einer Subroutine abhängig von der Ablaufsteuerung ist, kann jedes Label als Goto-Ziel und als Beginn einer Subroutine fungieren.</p>

<h2>Dynamische Label</h2>
<p>Viele interne Funktionen, die einen Labelnamen akzeptieren, akzeptieren auch eine <a href="../Variables.htm">Variable</a> - in diesem Fall wird der Name, der in der Variable enthalten ist, als Ziel verwendet. Allerdings ist dadurch die Performance ein wenig beeinträchtigt, weil das Ziellabel nicht nur einmal (beim Starten des Skripts), sondern jedesmal neu eingelesen werden muss.</p>

<h2>Hotkeys und Hotstrings</h2>
<p><a href="../Hotkeys.htm">Hotkey</a>- und <a href="../Hotstrings.htm#label">Hotstring</a>-Label sind auch gültige Ziele für <a href="../commands/Goto.htm">Goto</a>, <a href="../commands/Gosub.htm">Gosub</a> und andere interne Funktionen. Wenn ein Hotkey oder Hotstring jedoch mehrere <a href="../commands/_If.htm#variant">Varianten</a> hat, dann wird die oberste Variante im Skript verwendet. Alle Modifikatoren des Hotkeys oder Optionen des Hotstrings gehören auch zum Labelnamen, aber die zwei Doppelpunkte (::) werden weggelassen.</p>

<h2>Benannte Schleifen</h2>
<p>Ein Label kann auch dazu verwendet werden, eine Schleife für die Anweisungen <a href="../commands/Continue.htm">Continue</a> und <a href="../commands/Break.htm">Break</a> zu identifizieren. Auf diese Weise kann das Skript einfach eine beliebige Anzahl an verschachtelten Schleifen fortsetzen oder unterbrechen.</p>

<h2 id="Functions">Funktionen</h2>
<p><a href="../Functions.htm">Funktionen</a> können anstelle von Labels in einigen Fällen verwendet werden, dazu zählen:</p>
<ul>
  <li><a href="../commands/Hotkey.htm">Hotkey</a></li>
  <li><a href="../objects/Menu.htm#Add">Menu.Add</a></li>
  <li><a href="../commands/SetTimer.htm">SetTimer</a></li>
</ul>
<p></p>
<p>Die Vorteile von Funktionen sind, dass sie lokale Variablen verwenden können und dass sie in einigen Fällen (wie z. B. Gui-Steuerelement-Ereignisse) auch Parameter mit nützlichen Informationen akzeptieren.</p>

<h2>Siehe auch</h2>
<p><a href="../commands/IsLabel.htm">IsLabel</a>, <a href="../Variables.htm#ThisLabel">A_ThisLabel</a>, <a href="../commands/Gosub.htm">Gosub</a>, <a href="../commands/Goto.htm">Goto</a>, <a href="../commands/SetTimer.htm">SetTimer</a>, <a href="../commands/Hotkey.htm">Hotkey</a></p>

</body>
</html>
