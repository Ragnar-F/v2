<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Label - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Label identifizieren eine Codezeile und können verwendet werden, um ein Ziel von Goto zu sein oder um eine Subroutine zu formen." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Label</h1>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
  <li><a href="#syntax-and-usage">Syntax und Verwendung</a></li>
  <li><a href="#look-alikes">Label-ähnliche Schreibweisen</a></li>
  <li><a href="#subroutines">Subroutinen</a></li>
  <li><a href="#dynamic-labels">Dynamische Label</a></li>
  <li><a href="#named-loops">Benannte Schleifen</a></li>
  <li><a href="#related">Siehe auch</a></li>
</ul>

<h2 id="syntax-and-usage">Syntax und Verwendung</h2>
<p>Ein Label identifiziert eine Codezeile. Es kann verwendet werden, um für <a href="../commands/Goto.htm">Goto</a> ein Ziel zu bestimmen, eine <a href="#subroutines">Subroutine</a> zu formen, oder <a href="#named-loops">eine Schleife zu spezifizieren</a>, um aus dieser auszubrechen oder bei ihr fortzufahren. Ein Label besteht aus einem <a href="Concepts.htm#names">Namen</a>, gefolgt von einem Doppelpunkt:</p>
<pre>das_ist_ein_Label:
</pre>
<p>Abgesehen von Leerraumzeichen und Kommentaren darf kein anderer Code auf der Zeile eines Labels stehen.</p>
<p><strong>Namen:</strong> Labelnamen sind nicht Groß-/Kleinschreibung-sensitiv (in Bezug auf ASCII-Buchstaben), und können aus Buchstaben, Zahlen, Unterstrichen und ASCII-fremden Zeichen bestehen. Zum Beispiel: <em>MeineListView</em>, <em>Menü_Datei_Öffnen</em> und <em>outer_loop</em>.</p>
<p><strong>Gültigkeitsbereich</strong>: Jede Funktion hat ihre eigene Liste mit lokalen Labels, die nur innerhalb der Funktion verwendet werden können. Wenn ein lokales und globales Label den gleichen Namen haben, hat das lokale Label Vorrang (und das globale Label nicht zugreifbar).</p>
<p><strong>Ziel</strong>: Das Ziel eines Labels ist die nächste Zeile mit ausführbarem Code. Ausführbarer Code beinhaltet Funktionen, Zuweisungen, <a href="../Variables.htm#Expressions">Ausdrücke</a> und <a href="../commands/Block.htm">Blöcke</a>, aber nicht Direktiven, Label, Hotkeys oder Hotstrings. Im folgenden Beispiel verweisen <code>run_notepad_1</code> und <code>run_notepad_2</code> auf dieselbe <code>Run</code>-Zeile:</p>
<pre>run_notepad_1:
run_notepad_2:
    Run "notepad"
    return
</pre>
<p><strong>Ausführung</strong>: Labels haben wie Direktiven keine Wirkung, wenn sie während einer normalen Ausführung erreicht werden. Im folgenden Beispiel wird eine MsgBox zweimal angezeigt - einmal beim Ausführen der Subroutine durch <a href="../commands/Gosub.htm">Gosub</a> und nochmals, nachdem die Subroutine ihr Return erreicht hat:</p>
<pre>Gosub Label1

Label1:
MsgBox <a href="../Variables.htm#ThisLabel">A_ThisLabel</a>
return</pre>

<h2 id="look-alikes">Label-ähnliche Schreibweisen</h2>
<p>Hotkey- und Hotstring-Definitionen sehen fast genauso aus wie Labels, sind sie aber nicht.</p>
<p><a href="../Hotkeys.htm">Hotkeys</a> bestehen aus einem Hotkey, gefolgt von zwei Doppelpunkten.</p>
<pre>^a::</pre>
<p><a href="../Hotstrings.htm">Hotstrings</a> bestehen aus einem Doppelpunkt, null oder mehr <a href="../Hotstrings.htm#Options">Optionen</a>, einem weiteren Doppelpunkt, einer Abkürzung und zwei Doppelpunkten.</p>
<pre>:*:bzw::</pre>

<h2 id="subroutines">Subroutinen</h2>
<p>Eine Subroutine ist ein Teil des Codes, der <em>aufgerufen</em> werden kann, um eine bestimmte Aufgabe durchzuführen. Die Ausführung einer Subroutine beginnt beim Ziel eines Labels und endet, wenn ein <a href="../commands/Return.htm">Return</a> oder <a href="../commands/Exit.htm">Exit</a> erreicht wird. Da das Ende einer Subroutine abhängig von der Ablaufsteuerung ist, kann jedes Label als Goto-Ziel und als Beginn einer Subroutine fungieren.</p>
<p class="warning"><strong>Hinweis:</strong> Da die Ausführung durch Labels fällt, kann das falsche Platzieren einer Subroutine und ihres abschließenden <code>return</code> den Ablauf des Skripts unterbrechen. Grundsätzlich empfiehlt es sich, stattdessen <a href="../Functions.htm">Funktionen</a> zu verwenden.</p>

<h2 id="dynamic-labels">Dynamische Label</h2>
<p>In einigen Fällen kann eine <a href="../Variables.htm">Variable</a> anstelle eines Labelnamens verwendet werden. In solchen Fällen wird der in der Variable gespeicherte Name zum Lokalisieren des Ziellabels verwendet. Allerdings geschieht das auf Kosten der Leistung, weil das Ziellabel jedes Mal neu gesucht werden muss und nicht wie sonst nur beim Starten des Skripts.</p>

<h2 id="named-loops">Benannte Schleifen</h2>
<p>Ein Label kann auch dazu verwendet werden, eine Schleife für die Anweisungen <a href="../commands/Continue.htm">Continue</a> und <a href="../commands/Break.htm">Break</a> zu identifizieren. Dies ermöglicht dem Skript, von einer inneren Schleife heraus den aktuellen Durchlauf einer äußeren Schleife zu überspringen oder die äußere Schleife zu unterbrechen.</p>

<h2 id="related">Siehe auch</h2>
<p><a href="../Functions.htm">Funktionen</a>, <a href="../commands/IsLabel.htm">IsLabel</a>, <a href="../Variables.htm#ThisLabel">A_ThisLabel</a>, <a href="../commands/Gosub.htm">Gosub</a>, <a href="../commands/Goto.htm">Goto</a>, <a href="../commands/SetTimer.htm">SetTimer</a>, <a href="../commands/Hotkey.htm">Hotkey</a></p>

</body>
</html>
