<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Threads - Verhalten &amp; Priorität | AutoHotkey v2</title>
<meta name="description" content='Der "aktuelle Thread" ist definiert als der Ausführungsablauf, der vom jüngsten Ereignis ausgelöst wurde; dazu zählen Hotkeys, SetTimer-Subroutinen, benutzerdefinierte Menüpunkte und GUI-Ereignisse.' />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>

<body>
<h1>Threads</h1>

<p>Der <em>aktuelle Thread</em> ist definiert als der Ausführungsablauf, der vom jüngsten Ereignis ausgelöst wurde; dazu zählen <a href="../Hotkeys.htm">Hotkeys</a>, <a href="../commands/SetTimer.htm">SetTimer-Subroutinen</a>, <a href="../objects/Menu.htm">benutzerdefinierte Menüpunkte</a> und <a href="../objects/Gui.htm#Events">GUI-Ereignisse</a>. Der <em>aktuelle Thread</em> kann Funktionen innerhalb seiner eigenen Subroutine ausführen, oder innerhalb von anderen Subroutinen, die durch diese Subroutine aufgerufen wurden.</p>
<p>AutoHotkey ist eigentlich nicht in der Lage, mehrere Threads gleichzeitig auszuführen. Trotzdem kann es dieses Verhalten teilweise nachahmen: Beim Starten eines zweiten Threads -- z. B. durch Drücken eines weiteren Hotkeys, während der vorherige Hotkey noch läuft -- wird der <em>aktuelle Thread</em> unterbrochen (vorübergehend angehalten), so dass der neue Thread zum <em>aktuellen Thread</em> werden kann. Beim Starten eines dritten Threads, während der zweite Thread noch läuft, werden sowohl der zweite als auch der erste Thread in den Ruhezustand versetzt, und so weiter.</p>
<p>Sobald der <em>aktuelle Thread</em> endet, wird der vor kurzem unterbrochene Thread fortgesetzt, und so weiter, bis alle Threads letztendlich fertig sind. Wenn ein Thread fortgesetzt wird, werden seine Einstellungen wie <a href="ErrorLevel.htm">ErrorLevel</a> und <a href="../commands/SendMode.htm">SendMode</a> automatisch wieder in den Zustand gesetzt, der kurz vor der Unterbrechung galt; das heißt, dass sich nichts ändern wird, nachdem ein Thread unterbrochen wurde (außer bei einer möglichen Änderung im <a href="../commands/WinActivate.htm">aktiven Fenster</a>).</p>
<p class="note"><strong>Hinweis</strong>: Die Funktion bzw. Menüpunkt <a href="../commands/KeyHistory.htm">KeyHistory</a> zeigt an, wie viele Threads im unterbrochenen Zustand sind. Die Funktion bzw. Menüpunkt <a href="../commands/ListHotkeys.htm">ListHotkeys</a> zeigt an, welche Hotkeys Threads haben.</p>
<p>Ein einzelnes Skript kann mehrere Dialogfenster wie <a href="../commands/MsgBox.htm">MsgBox</a>, <a href="../commands/InputBox.htm">InputBox</a>, <a href="../commands/FileSelect.htm">FileSelect</a> und <a href="../commands/DirSelect.htm">DirSelect</a> gleichzeitig haben. Dies kann durch Starten eines neuen Threads erreicht werden (via <a href="../Hotkeys.htm">Hotkey</a>, <a href="../commands/SetTimer.htm">zeitgesteuerte Subroutine</a>, <a href="../objects/Menu.htm">benutzerdefinierter Menüpunkt</a> und so weiter), während ein vorheriger Thread bereits ein Dialogfenster anzeigt.</p>
<p>Standardmäßig kann eine bereits laufende <a href="../Hotkeys.htm">Hotkey</a>- oder <a href="../Hotstrings.htm">Hotstring</a>-Subroutine nicht zum zweiten Mal ausgeführt werden. Mit <a href="../commands/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> kann dieses Verhalten geändert werden.</p>
<h2>Thread-Priorität</h2>
<p>Jeder Thread (<a href="../Hotkeys.htm">Hotkey</a>, <a href="../commands/SetTimer.htm">zeitgesteuerte Subroutine</a>, <a href="../objects/Menu.htm">benutzerdefinierter Menüpunkt</a> und so weiter), dessen Priorität niedriger ist als die Priorität des <em>aktuellen Threads</em>, kann ihn nicht unterbrechen. Während dieser Zeit werden solche Timer nicht laufen. Jeder Versuch des Benutzers, einen Thread zu erstellen (z. B. durch Drücken eines <a href="../Hotkeys.htm">Hotkeys</a> oder <a href="../commands/GuiControls.htm#Button">GUI-Buttons</a>), hat weder eine Wirkung noch wird er zwischengespeichert. Aus diesem Grund ist es für gewöhnlich am besten, hoch-priorisierte Threads so aufzubauen, dass sie schnell zum Ende kommen, oder setze sie mit <a href="../commands/Critical.htm">Critical</a> auf hoher Priorität.</p>
<p>Die Standard-Priorität ist 0. Alle Threads verwenden die Standard-Priorität, sofern sie nicht durch eine der folgenden Methoden geändert wurde:<br>
  1) Eine zeitgesteuerte Subroutine kann von <a href="../commands/SetTimer.htm">SetTimer</a> eine bestimmte Priorität erhalten.<br>
  2) Ein Hotkey kann von der <a href="../commands/Hotkey.htm">Hotkey</a>-Funktion eine bestimmte Priorität erhalten.<br>
  3) Ein <a href="../Hotstrings.htm">Hotstring</a> kann beim Definieren oder von der <a href="../commands/_Hotstring.htm">#Hotstring</a>-Direktive eine bestimmte Priorität erhalten. <br>
  4) Ein benutzerdefinierter Menüpunkt kann von der <a href="../objects/Menu.htm#Add">Menu.Add</a>-Methode eine bestimmte Priorität erhalten.<br>
  5) Der <em>aktuelle Thread</em> kann seine eigene Priorität über die <a href="../commands/Thread.htm">Thread</a>-Funktion setzen.</p>
<p>Die <a href="../commands/OnExit.htm">OnExit</a>-Callback-Funktion (falls vorhanden) wird bei Aufruf immer laufen, egal welche Priorität der <em>aktuelle Thread</em> hat.</p>
</body>
</html>
