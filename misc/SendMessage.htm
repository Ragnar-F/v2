<!DOCTYPE HTML>
<html>
<head>
<title>PostMessage/SendMessage Tutorial</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>

<body>
<h1>Senden von Meldungen an ein Fenster oder Steuerelement<br>
<span class="small80">von Rajat</span></h1>

<p>Diese Seite beschreibt die Befehle <a href="../commands/PostMessage.htm">PostMessage</a> und <a href="../commands/PostMessage.htm">SendMessage</a> und beantwortet einige Fragen wie:</p>
<p>"Wie kann ich bei einem minimierten Fenster einen Button drücken?" <br>
"Wie kann ich einen Menüpunkt auswählen, falls <a href="../commands/MenuSelect.htm">MenuSelect</a> nicht funktioniert?!"<br>
"Dies ist ein Fenster mit anpassbarem Look ... wie sende ich einen Befehl, der immer funktioniert?"<br>
"und was ist mit <strong>versteckten</strong> Fenstern?!"<br>
<br>
<br>
Anforderungen: Winspector Spy (<a href="http://www.softpedia.com/get/Security/Security-Related/Winspector.shtml">http://www.softpedia.com/get/Security/Security-Related/Winspector.shtml</a>)</p>
<p>Gehen wir das erste Beispiel an: <a href="../commands/MenuSelect.htm">MenuSelect</a> funktioniert nicht mit der Menüleiste innerhalb des Outlook-Fensters "Neue Nachricht". Das heißt, dass dieser Code nicht funktionieren wird:</p>
<pre> MenuSelect, Neue Nachricht,, E&amp;infügen, &amp;Bild...</pre>
<p>&nbsp;</p>
<p>Aber <a href="../commands/PostMessage.htm">PostMessage</a> könnte diese Aufgabe erledigen:</p>
<pre>PostMessage, 0x111, 40239, 0, , Neue Nachricht</pre>
<p>Das klappt hervorragend! Aber was zum Teufel ist das? 0x111 ist der hexadezimale Code für die Meldung <a href="SendMessageList.htm">WM_COMMAND</a>. 40239 ist der Code, den dieses bestimmte Fenster als Menüpunkt 'Einfügen Bild' versteht. Nun lass mich dir sagen, wie so ein Wert gefunden werden kann:</p>
<ol>
  <li>Öffne 'Winspector Spy' und das Fenster "Neue Nachricht".</li>
  <li>Ziehe das Fadenkreuz aus dem Fenster 'Winspector Spy' auf die Titelleiste des Fensters 'Neue Nachricht'.</li>
  <li>Klicke mit der rechten Maustaste auf das ausgewählte Fenster in der linken Liste und wähle 'Messages' aus.</li>
  <li>Klicke mit der rechten Maustaste auf das leere Fenster und wähle 'Edit message filter' aus.</li>
  <li>Drücke den Button 'filter all' und klicke zweimal auf 'WM_COMMAND' in der linken Liste. Auf diese Weise wirst du nur diese Meldung überwachen.</li>
  <li>Gehe nun zu das Fenster 'Neue Nachricht' und wähle den folgenden Menüpunkt aus: Einfügen -&gt; Bild.</li>
  <li>Kehre zum 'Winspector Spy' zurück und drücke die Ampel, um die Überwachung zu pausieren.</li>
  <li>Klappe die angesammelten WM_COMMAND-Meldungen auf (alle anderen ignorieren, falls vorhanden).</li>
  <li>Das, was du (üblicherweise) suchen solltest, ist eine Code-0-Meldung. Manchmal gibt es WM_COMMAND-Meldungen wie 'win activated' oder 'win destroyed', die du getrost ignorieren kannst. Irgendwo findest du eine Meldung, die 'Control ID: 40239' enthält ... Das war's!</li>
  <li>Füge es nun in den obigen Befehl ein. So einfach ist das! Es ist der wParam-Wert.</li>
</ol>
<p>Für das nächste Beispiel habe ich Paint genommen, weil das wahrscheinlich jeder haben wird. Nehmen wir mal an, dass du in dieser Anwendung ein Tool aus der Toolbar per AutoHotkey auswählen musst, wie z. B. die Farbauswahl.</p>
<p>Was wirst du tun? Höchstwahrscheinlich per Mausklick auf den Toolbar-Button, richtig? Aber Toolbars können verschoben und versteckt werden! Das trifft auch auf Paint zu. Wenn der Zielbenutzer so etwas getan hat, wird dein Skript an dieser Stelle fehlschlagen. Der folgende Befehl würde weiterhin funktionieren:</p>
<pre>PostMessage, 0x111, 639,,, Unbenannt - Paint</pre>
<p>Ein weiterer Vorteil von <a href="../commands/PostMessage.htm">PostMessage</a> ist, dass das Fenster im Hintergrund sein kann; dagegen müsste beim Senden von Mausklicks das Fenster aktiv sein.</p>
<p>Hier ein paar weitere Beispiele. Hinweis: Ich verwende WinXP Pro (SP1) ... Falls sich dein Betriebssystem von meinem unterscheidet, könnten deine Parameter anders sein (gilt nur für Windows-Anwendungen wie Wordpad und Editor, bei anderen Anwendungen sollten die Parameter nicht abweichen):</p>
<pre><em>; Macht die Schreibfarbe in Wordpad türkis</em>
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 32788, 0, , Dokument - WordPad</pre>
<pre><em>; Öffnet das Info-Fenster im Texteditor</em>
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 65, 0, , Unbenannt - Editor</pre>
<pre><em>; Aktiviert/Deaktiviert Zeilenumbruch im Texteditor</em>
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 32, 0, , Unbenannt - Editor</pre>
<pre><em>; Wiedergabe/Anhalten im Windows Media Player</em>
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 32808, 0, , Windows Media Player</pre>
<pre><em>; Sperrt die Hotkeys eines laufenden AHK-Skripts</em>
DetectHiddenWindows, on
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 65305,,, MeinSkript.ahk - AutoHotkey <em>; Verwende 65306 für Pause anstelle von Suspend.</em></pre>
<p>Das oben war für PostMessage. <a href="../commands/PostMessage.htm">SendMessage</a> funktioniert genauso und wartet zusätzlich auf einen Rückgabewert, mit dem beispielsweise der aktuelle Track von Winamp abgerufen werden kann (siehe <a href="Winamp.htm">Winamp automatisieren</a> als Beispiel).</p>
<p>Hier ein paar weitere Hinweise:</p>
<ul>
  <li>Der oben genannte Hinweis in Bezug auf Windows XP und das Ändern der Meldungswerte dient nur als reine Vorsichtsmaßnahme. Findest du eine Meldung, die auf deinem Betriebssystem funktioniert, kannst du dir sicher sein, dass diese Meldung auch auf anderen Betriebssystemen funktionieren wird, sofern die Software-Versionen identisch sind. Die meisten Anwendungen behalten ihre Meldungswerte auch über verschiedene Versionen hinweg (z. B. Windows Media Player und Winamp).</li>
  <li>Falls du den Filter im 'Winspector Spy' so eingestellt hast, dass er nur WM_COMMAND anzeigen soll, aber weiterhin mit Meldungen überflutet wirst, dann klicke mit der rechten Maustaste auf diese Meldung und wähle hide (msg name) aus. Du möchtest bestimmt nicht eine Meldung sehen, die ohne dein Zutun mit der Zielsoftware interagiert.</li>
  <li>Der nach rechts gerichtete Pfeil im Winspector Spy zeigt die Meldungswerte und der verschwommene nach links gerichtete Pfeil die Rückgabewerte. Standardmäßig kann ein 0-Wert als 'kein Fehler' angesehen werden (bei SendMessage wird der Rückgabewert in <a href="ErrorLevel.htm">ErrorLevel</a> sein).</li>
  <li>Um eine Meldung an ein verstecktes Fenster zu senden, ist die folgende Zeile notwendig: <br>
    <code>DetectHiddenWindows, On</code></li>
</ul>
<p>Hinweis: Es gibt Anwendungen, bei denen diese Technik nicht funktioniert. Ich hatte gemischtes Glück bei VB- und Delphi-Anwendungen. Diese Technik sollte am besten bei Anwendungen benutzt werden, die mit C oder C++ programmiert wurden. Bei VB-Anwendungen wird der "LParam" vom gleichnamigen Befehl daran gehindert, von einer Ausführung zur nächsten zu wechseln. Bei einigen Delphi-Anwendungen verwendet ein GUI nicht einmal WM_COMMAND. Es verwendet wahrscheinlich Positionen und Klicks der Maus.</p>
<p>Geht und erkundet .... und teilt eure Erfahrungen mit der Community von AutoHotkey. Feedbacks sind erwünscht!</p>
<p>Diese Einführung ist nicht für totale Anfänger gedacht (nichts für ungut), da diese Befehle als erweiterte Features betrachtet werden. Also, wenn du daraus nicht schlau wirst, vergiss es.</p>
<p>-Rajat</p>
</body>
</html>
