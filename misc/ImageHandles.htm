<!DOCTYPE HTML>
<html>
<head>
<title>Bild-Handles</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>

<body>
<h1>Bild-Handles</h1>

<p>Mit der folgenden Syntax kannst du ein Symbol- oder Bitmap-Handle anstelle eines Bild-Dateinamens verwenden:</p>
<pre class="Syntax">HBITMAP:<i>Bitmap-Handle</i>
HICON:<i>Symbol-Handle</i></pre>
<p>Ersetze <em>Bitmap-Handle</em> oder <em>Symbol-Handle</em> mit dem eigentlichen Handle-Wert. Zum Beispiel <code>"hicon:" handle</code>, wo <em>handle</em> eine Variable ist, die ein Symbol-Handle enthält.</p>
<p>Die folgenden Dinge unterstützen diese Syntax:</p>
<ul>
  <li><a href="../commands/GuiControls.htm#Picture">Gui.AddPicture</a> (und <a href="../objects/GuiControl.htm#Value">GuiCtrl.Value</a> zum Setzen des Inhalts eines Picture-Steuerelements).</li>
  <li><a href="../commands/ListView.htm#IL_Add">IL_Add</a></li>
  <li><a href="../commands/LoadPicture.htm">LoadPicture</a></li>
  <li><a href="../commands/GuiControls.htm#SB_SetIcon">SB.SetIcon</a></li>
  <li><a href="../commands/ImageSearch.htm">ImageSearch</a></li>
  <li><a href="../commands/Menu.htm#Icon">Menu "Tray", "Icon"</a> oder <a href="../commands/Menu.htm#MenuIcon">Menu <em>Menüname</em>, "Icon"</a></li>
</ul>
<p>Ein Bitmap- oder Symbol-Handle ist ein numerischer Wert, der eine Bitmap oder ein Symbol im Arbeitsspeicher kennzeichnet. Die Mehrheit der Skripte müssen nie auf Handles zurückgreifen, weil AutoHotkey sich in den meisten Fällen darum kümmert, das Bild aus einer Datei zu laden und es wieder freizugeben, wenn es nicht länger benötigt wird. Die oben gezeigte Syntax sollte man nur einsetzen, wenn das Skript ein Symbol- oder Bitmap-Handle aus einer anderen Quelle bezieht, z. B. durch Senden der WM_GETICON-Meldung an ein Fenster. Man kann sie auch in Kombination mit <a href="../commands/LoadPicture.htm">LoadPicture</a> verwenden, um ein mehrfaches Laden eines Bildes aus einer Datei zu vermeiden.</p>
<p>Standardmäßig behandelt AutoHotkey das Handle, als ob das Bild aus einer Datei geladen wurde - zum Beispiel wird eine Bitmap auf einem Picture-Steuerelement gelöscht, wenn das GUI zerstört wird, und ein Bild wird in der Regel sofort gelöscht, wenn dessen Größe geändert werden muss. Um das zu verhindern, kannst du ein Sternchen zwischen dem Doppelpunkt und dem Handle einfügen. Zum Beispiel: <code>"hbitmap:*" handle</code>. Diese Methode zwingt die Funktion, außer ImageSearch, eine Kopie des Bildes anzulegen.</p>

<h3 id="Examples">Beispiele</h3>
<pre class="NoIndent"><em>; Zeigt ein Menü der ersten n Dateien an, die dem Muster entsprechen, und ihre Symbole.</em>
Muster := A_ScriptDir "\*"
n := 15

<em>; Stellt Speicher für eine SHFILEINFOW-Struktur bereit.</em>
VarSetCapacity(Dateiinfo, Dateigröße := A_PtrSize + 688)

Loop Files, Muster, "FD"
{
    <em>; Fügt ein Menüpunkt für jede Datei ein.</em>
    Menu "F", "Add", A_LoopFileName, "nix"

    <em>; Ruft das Symbol der Datei ab.</em>
    if DllCall("shell32\SHGetFileInfoW", WStr, A_LoopFileFullPath
        , UInt, 0, Ptr, &amp;Dateiinfo, UInt, Dateigröße, UInt, 0x100)
    {
        hicon := NumGet(Dateiinfo, 0, "Ptr")
        <em>; Setzt das Symbol des Menüpunktes.</em>
        Menu "F", "Icon", A_Index "&amp;", "HICON:" hicon
        <em>; Da wir hier ":" anstelle von ":*" verwenden, wird das Symbol automatisch
        ; freigegeben, wenn das Programm beendet oder wenn das Menü oder der Menüpunkte gelöscht wird.</em>
    }
}
until A_Index = n
Menu "F", "Show"
nix:
return
</pre>
<p>Siehe auch: <a href="../commands/LoadPicture.htm">LoadPicture</a>.</p>
&nbsp;

</body>
</html>
