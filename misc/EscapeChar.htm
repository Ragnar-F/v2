<!DOCTYPE HTML>
<html>
<head>
<title>Escapesequenzen</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Escapesequenzen</h1>

<p>Mit dem Escapezeichen ` (umgekehrtes Häkchen oder Gravis-Akzent) wird kenntlich gemacht, dass das nachfolgende Zeichen anders als normal interpretiert werden soll.</p>

<table class="info">
  <tr>
    <th style="width:15%">Schreibe das</th>
    <th>um das zu erhalten</th>
  </tr>
  <tr>
    <td>`,</td>
    <td>, (literales Komma). <strong>Hinweis:</strong> Kommas, die im letzten Parameter eines Befehls vorkommen, müssen nicht mit einem Escapezeichen versehen werden, weil das Programm diese Zeichen automatisch als literal ansieht. Das Gleiche gilt auch für alle Parameter der <a href="../commands/MsgBox.htm">MsgBox</a>, weil es eine intelligente Komma-Handhabung hat.</td>
  </tr>
  <tr>
    <td>`%</td>
    <td>% (literales Prozentzeichen)</td>
  </tr>
  <tr>
    <td>``</td>
    <td>` (literales umgekehrtes Häkchen; d. h. zwei aufeinanderfolgende Escapezeichen ergeben ein einzelnes literales Zeichen)</td>
  </tr>
  <tr>
    <td>`;</td>
    <td>&nbsp;; (literales Semikolon). <strong>Hinweis:</strong> Das ist <u>nur</u> notwendig, wenn auf der linken Seite des Semikolons ein Leer- oder Tabulatorzeichen vorkommt. Ist dies nicht der Fall, wird das Semikolon auch ohne versehenem Escapezeichen richtig erkannt.</td>
  </tr>
  <tr>
    <td>`n</td>
    <td>Neuzeile (Zeilenvorschub/LF)</td>
  </tr>
  <tr>
    <td>`r</td>
    <td>Zeilenumschaltung (CR)</td>
  </tr>
  <tr>
    <td>`b</td>
    <td>Rücktaste</td>
  </tr>
  <tr>
    <td>`t</td>
    <td>Tabulatorzeichen (die häufig verwendete horizontale Variante)</td>
  </tr>
  <tr>
    <td>`v</td>
    <td>Vertikales Tabulatorzeichen -- entspricht dem ASCII-Wert 11. Kann auch bei einigen Anwendungen mit STRG+K erzeugt werden.</td>
  </tr>
  <tr>
    <td>`a</td>
    <td>Alarm (Glocke) -- entspricht dem ASCII-Wert 7. Kann auch bei einigen Anwendungen mit STRG+G erzeugt werden.</td>
  </tr>
  <tr>
    <td>`f</td>
    <td>Seitenvorschub -- entspricht dem ASCII-Wert 12. Kann auch bei einigen Anwendungen mit STRG+L erzeugt werden.</td>
  </tr>
  <tr>
    <td>Send</td>
    <td>Wenn <a href="../commands/Send.htm">Send-Befehle</a> oder <a href="../Hotstrings.htm">Hotstrings</a> in ihrem normalen (nicht-raw) Modus verwendet werden, haben Zeichen wie {}^!+# eine besondere Bedeutung. Wenn diese Zeichen daher literal sein sollen, müssen sie in Klammern gesetzt werden.  Zum Beispiel: <code>Send {<strong>^</strong>}{<strong>!</strong>}{<strong>{</strong>}</code>.</td>
  </tr>
  <tr>
    <td>`" oder `&amp;apos;</td>
    <td>Einfache Anführungszeichen (') und doppelte Anführungszeichen (") sind funktionsgemäß identisch, außer dass eine Zeichenkette, die von einfachen Anführungszeichen umschlossen ist, literale doppelte Anführungszeichen enthalten kann, und umgekehrt. Um ein tatsächliches Anführungszeichen innerhalb eines literalen Strings einzufügen, muss das Anführungszeichen entweder mit einem Escapezeichen versehen werden oder der String von gegenteiligen Anführungszeichen umschlossen werden. Zum Beispiel: <code>Var := "Die Farbe `"Rot`" wurde gefunden."</code> oder <code>Var := 'Die Farbe "Rot" wurde gefunden.'</code>.</td>
  </tr>
</table>

<h3>Beispiel</h3>
<pre>MsgBox Zeile 1<strong>`n</strong>Zeile 2</pre>

</body>
</html>
