<!DOCTYPE HTML>
<html>
<head>
<title>Lautstärke-Bildschirmanzeige</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Lautstärke-Bildschirmanzeige <span class="headnote">Basierend auf dem v1-Skript von Rajat</span></h1>

<p>Dieses Skript ermöglicht beliebige Hotkeys, die Gesamt- und/oder Wave-Lautstärke zu erhöhen oder zu verringern. Beide Lautstärken werden als Balkendiagramme mit unterschiedlichen Farben angezeigt.
</p>
<p><a href="VolumeOSD.ahk">Dieses Skript herunterladen</a>  |  <a href="index.htm">Andere Beispiel-Skripte</a>  |  <a href="../AutoHotkey.htm">Home</a></p>

<pre class="NoIndent"><em>; --- Benutzereinstellungen ---

; Der Prozentsatz, um wie viel die Lautstärke jedes Mal erhöht oder verringert werden soll:</em>
config := {Step: 4}

<em>; Wie lange die Balkendiagramme der Lautstärken angezeigt werden sollen:</em>
config.DisplayTime := 2000

<em>; Balkenfarbe der Gesamtlautstärke (siehe Hilfe für präzisere Farbtöne):</em>
config.CBM := "Red"

<em>; Balkenfarbe der Wave-Lautstärke</em>
config.CBW := "Blue"

<em>; Hintergrundfarbe:</em>
config.CW := "Silver"

<em>; Balkenposition auf dem Bildschirm. Mit "center" kann der Balken jeweils zentriert werden:</em>
config.PosX := "center"
config.PosY := "center"
config.Width := 150  <em>; Balkenbreite</em>
config.Thick := 12   <em>; Balkendicke</em>

<em>; Wenn du Multimedia-Tasten zum Einstellen der Lautstärke hast,
; dann kannst du die Tasten unten mit Volume_Up,
; ^Volume_Up, Volume_Down, und ^Volume_Down ersetzen:</em>
config.MasterUp := "#Up"      <em>; Win+Pfeil nach oben</em>
config.MasterDown := "#Down"
config.WaveUp := "+#Up"       <em>; Umschalt+Win+Pfeil nach oben</em>
config.WaveDown := "+#Down"

<em>; --- Auto-Ausführungsbereich ---

; HIER BITTE NICHTS ÄNDERN (es sei denn, du weißt, was du tust).</em>

#SingleInstance

<em>; Balkenfenster erstellen:</em>
G := GuiCreate("+ToolWindow -Caption -Border +Disabled")
G.MarginX := 0, G.MarginY := 0
opt := "w" config.Width " h" config.Thick " background" config.CW
G.Add("Progress", opt " vMaster c" config.CBM)
G.Add("Progress", opt " vWave c" config.CBW)

<em>; Funktionsverweise für die Hotkeys erstellen:</em>
vol_MasterUp := Func("ChangeVolume").bind(config, G, "+")
vol_MasterDown := Func("ChangeVolume").bind(config, G, "-")
vol_WaveUp := Func("ChangeVolume").bind(config, G, "+", "Wave")
vol_WaveDown := Func("ChangeVolume").bind(config, G, "-", "Wave")

<em>; Hotkeys registrieren:</em>
Hotkey(config.MasterUp, vol_MasterUp)
Hotkey(config.MasterDown, vol_MasterDown)
Hotkey(config.WaveUp, vol_WaveUp)
Hotkey(config.WaveDown, vol_WaveDown)

<em>; --- Funktionsdefinitionen ---</em>

ChangeVolume(config, G, Prefix, ComponentType := "Master")
{
  SoundSet(Prefix config.Step, ComponentType)
  G.Control["Master"].Value := Round(SoundGet("Master"))
  G.Control["Wave"].Value := Round(SoundGet("Wave"))
  G.Show("x" config.PosX " y" config.PosY)
  HideWindow := Func("HideWindow").bind(G)
  SetTimer(HideWindow, -config.DisplayTime)
}

HideWindow(G)
{
  G.Hide
}</pre>
</body>
</html>
