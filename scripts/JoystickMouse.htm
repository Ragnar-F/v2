<!DOCTYPE HTML>
<html>
<head>
<title>Joystick als Maus verwenden</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Joystick als Maus verwenden</h1>

<p>Dieses Skript wandelt einen Joystick in eine Maus mit drei Tasten um. Dadurch verhält sich jede Joystick-Taste wie eine Maustaste und verbraucht kaum CPU-Zeit. Außerdem ist die Zeigergeschwindigkeit abhängig davon, wie weit der Joystick vom Zentrum gedrückt wird. Verschiedene Einstellungen können auch im oberen Bereich des Skripts angepasst werden.
</p>
<p><a href="JoystickMouse.ahk">Dieses Skript herunterladen</a>  |  <a href="index.htm">Andere Beispiel-Skripte</a>  |  <a href="../AutoHotkey.htm">Home</a></p>

<pre class="NoIndent"><em>; Den folgenden Wert erhöhen, damit der Mauszeiger sich schneller bewegt:</em>
JoyMultiplier := 0.30

<em>; Den folgenden Wert verringern, damit weniger Weg vom Zentrum benötigt wird,
; um den Mauszeiger zu bewegen.  Allerdings muss möglicherweise erst der aktuelle Joystick kalibriert werden,
; damit er richtig zentriert ist, um einen Drift des Mauszeigers zu verhindern. Ein absolut straffer
; und zentrierter Joystick kann eine 1 verwenden:</em>
JoyThreshold := 3

<em>; Für die Invertierung der Y-Achsen kann die folgende Variable auf True gesetzt werden, wodurch
; die sich der Mauszeiger vertikal in die entgegengesetzte Richtung des Sticks bewegt:</em>
InvertYAxis := false

<em>; Diese Werte können geändert werden, um beliebige Joystick-Tastennummern für
; die linke, rechte und mittlere Maustaste zu verwenden.  Zahlen von 1 bis 32 sind verfügbar.
; Verwendet das Joystick-Test-Skript, um die aktuellen Joystick-Nummern einfach herauszufinden.</em>
ButtonLeft := 1
ButtonRight := 2
ButtonMiddle := 3

<em>; Falls der aktuelle Joystick einen Rundblickschalter (POV) hat, dann kann dieser als Mausrad verwendet werden.  Der
; folgende Wert ist die Anzahl der Millisekunden zwischen den Drehungen des Rades.
; Wird der Wert verringert, dreht sich das Rad schneller:</em>
WheelDelay := 250

<em>; Falls mehr als ein Joystick vorhanden ist, erhöht diesen Wert, um einen beliebigen Joystick
; zu verwenden:</em>
JoystickNumber := 1

<em>; ENDE DES KONFIGURATIONSBEREICHS -- Hier danach keine Änderungen durchführen,
; es sei denn, die allgemeine Funktionalität des Skripts soll geändert werden.</em>

#SingleInstance

JoystickPrefix := JoystickNumber "Joy"
Hotkey JoystickPrefix . ButtonLeft, "ButtonLeft"
Hotkey JoystickPrefix . ButtonRight, "ButtonRight"
Hotkey JoystickPrefix . ButtonMiddle, "ButtonMiddle"

<em>; Benötigte Achsenabstände berechnen, um den Mauszeiger bewegen zu können:</em>
JoyThresholdUpper := 50 + JoyThreshold
JoyThresholdLower := 50 - JoyThreshold
if InvertYAxis
    YAxisMultiplier := -1
else
    YAxisMultiplier := 1

SetTimer "WatchJoystick", 10  <em>; Joystick-Bewegung überwachen.</em>

JoyInfo := GetKeyState(JoystickNumber "JoyInfo")
if InStr(JoyInfo, "P")  <em>; Joystick hat einen Rundblickschalter (POV), also als Mausrad verwenden.</em>
    SetTimer "MouseWheel", WheelDelay

<em>; Die unteren Funktionen verwenden nicht KeyWait, weil ansonsten der
; WatchJoystick-Quasi-Thread unter dem Warten-auf-Tastendruck-Thread eingefangen wird,
; wodurch das Ziehen des Mauszeigers mit dem Joystick unterdrückt wird.</em>

ButtonLeft()
{
    SetMouseDelay -1  <em>; Flüssigerer Bewegungsablauf.</em>
    MouseClick "Left",,, 1, 0, "D"  <em>; Hält die linke Maustaste gedrückt.</em>
    SetTimer "WaitForLeftButtonUp", 10
    
    WaitForLeftButtonUp()
    {
        if GetKeyState(A_ThisHotkey)
            return  <em>; Die Taste ist noch unten, also weiter warten.
        ; Ansonsten wurde die Taste losgelassen.</em>
        SetTimer , "Off"
        SetMouseDelay -1  <em>; Flüssigerer Bewegungsablauf.</em>
        MouseClick "Left",,, 1, 0, "U"  <em>; Lässt die Maustaste los.</em>
    }
}

ButtonRight()
{
    SetMouseDelay -1  <em>; Flüssigerer Bewegungsablauf.</em>
    MouseClick "Right",,, 1, 0, "D"  <em>; Hält die rechte Maustaste gedrückt.</em>
    SetTimer "WaitForRightButtonUp", 10
    
    WaitForRightButtonUp()
    {
        if GetKeyState(A_ThisHotkey)
            return  <em>; Die Taste ist noch unten, also weiter warten.
        ; Ansonsten wurde die Taste losgelassen.</em>
        SetTimer , "Off"
        MouseClick "Right",,, 1, 0, "U"  <em>; Lässt die Maustaste los.</em>
    }
}

ButtonMiddle()
{
    SetMouseDelay -1  <em>; Flüssigerer Bewegungsablauf.</em>
    MouseClick "Middle",,, 1, 0, "D"  <em>; Hält die mittlere Maustaste gedrückt.</em>
    SetTimer "WaitForMiddleButtonUp", 10
    
    WaitForMiddleButtonUp()
    {
        if GetKeyState(A_ThisHotkey)
            return  <em>; Die Taste ist noch unten, also weiter warten.
        ; Ansonsten wurde die Taste losgelassen.</em>
        SetTimer , "Off"
        MouseClick "Middle",,, 1, 0, "U"  <em>; Lässt die Maustaste los.</em>
    }

}

WatchJoystick()
{
    global
    MouseNeedsToBeMoved := false  <em>; Standardwert setzen.</em>
    joyx := GetKeyState(JoystickNumber "JoyX")
    joyy := GetKeyState(JoystickNumber "JoyY")
    if joyx &gt; JoyThresholdUpper
    {
        MouseNeedsToBeMoved := true
        DeltaX := Round(joyx - JoyThresholdUpper)
    }
    else if joyx &lt; JoyThresholdLower
    {
        MouseNeedsToBeMoved := true
        DeltaX := Round(joyx - JoyThresholdLower)
    }
    else
        DeltaX := 0
    if joyy &gt; JoyThresholdUpper
    {
        MouseNeedsToBeMoved := true
        DeltaY := Round(joyy - JoyThresholdUpper)
    }
    else if joyy &lt; JoyThresholdLower
    {
        MouseNeedsToBeMoved := true
        DeltaY := Round(joyy - JoyThresholdLower)
    }
    else
        DeltaY := 0
    if MouseNeedsToBeMoved
    {
        SetMouseDelay -1  <em>; Flüssigerer Bewegungsablauf.</em>
        MouseMove DeltaX * JoyMultiplier, DeltaY * JoyMultiplier * YAxisMultiplier, 0, "R"
    }
}

MouseWheel()
{
    global
    JoyPOV := GetKeyState(JoystickNumber "JoyPOV")
    if JoyPOV = -1  <em>; Kein Winkel.</em>
        return
    if (JoyPOV &gt; 31500 or JoyPOV &lt; 4500)  <em>; Nach vorne</em>
        Send "{WheelUp}"
    else if JoyPOV &gt;= 13500 and JoyPOV &lt;= 22500  <em>; Nach hinten</em>
        Send "{WheelDown}"
}
</pre>
</body>
</html>
