<!DOCTYPE HTML>
<html>
<head>
<title>Window Shading (ein Fenster bis zur Titelleiste zusammenrollen) -- von Rajat</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Window Shading (ein Fenster bis zur Titelleiste zusammenrollen) -- von Rajat</h1>

<p>Dieses Skript verkleinert ein Fenster auf dessen Titelleiste und beim Drücken eines Hotkeys wieder auf seine ursprüngliche Größe. Eine beliebige Anzahl an Fenstern kann auf diese Weise verkleinert werden (das Skript merkt sich diese). Wenn das Skript aus irgendeinem Grund beendet wird, dann werden die originalen Höhen aller "zusammengerollten" Fenstern automatisch wiederhergestellt.
</p>
<p><a href="WindowShading.ahk">Dieses Skript herunterladen</a>  |  <a href="index.htm">Andere Beispiel-Skripte</a>  |  <a href="../AutoHotkey.htm">Home</a></p>

<pre class="NoIndent"><em>; Höhe eines zusammengerollten Fensters hier angeben.  Durch das Betriebssystem
; kann die Titelleiste wahrscheinlich gar nicht versteckt werden,
; egal wie klein die Zahl ist:</em>
ws_MinHeight := 25

<em>; Diese Zeile wird alle Fenster wieder aufrollen, falls das Skript
; aus irgendeinem Grund beendet wird:</em>
OnExit("ExitSub")
return  <em>; Ende des automatischen Ausführungsbereichs</em>

#z::  <em>; Ändert diese Zeile, um einen anderen Hotkey zu verwenden.
; Danach sollten keine Änderungen durchgeführt werden, es sei denn,
; die allgemeine Funktionalität des Skripts soll geändert werden.
; Hebt die Kommentierung der nächsten Zeile auf, falls diese Subroutine
; in einen benutzerdefinierten Menüpunkt anstelle eines Hotkeys verwandelt wird.  Die Verzögerung erlaubt es,
; das aktive Fenster, welches vom angezeigten Menü deaktiviert wurde,
; wieder aktiv zu machen:
;Sleep 200</em>
ws_ID := WinGetID("A")
Loop Parse, ws_IDList, "|"
{
    if A_LoopField = ws_ID
    {
        <em>; Übereinstimmung gefunden, daher sollte das Fenster wiederhergestellt werden (aufrollen):</em>
        ws_Height := ws_Window%ws_ID%
        WinMove ,,, ws_Height, "ahk_id " ws_ID
        ws_IDList := StrReplace(ws_IDList, "|" ws_ID)
        return
    }
}
WinGetPos ,,, ws_Height, "A"
ws_Window%ws_ID% := ws_Height
WinMove ,,, ws_MinHeight, "ahk_id " ws_ID
ws_IDList .= "|" ws_ID
return

ExitSub()
{
    Loop Parse, ws_IDList, "|"
    {
        if A_LoopField = ""  <em>; Das erste Feld in der Liste ist normalerweise leer.</em>
            continue         <em>; Also überspringen.</em>
        ws_Height := ws_Window%A_LoopField%
        WinMove ,,, ws_Height, "ahk_id " A_LoopField
    }
    ExitApp  <em>; Muss für die OnExit-Subroutine durchgeführt werden, um das Skript tatsächlich zu beenden.</em>
}
</pre>
</body>
</html>
