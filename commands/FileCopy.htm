<!DOCTYPE HTML>
<html lang="de">
<head>
<title>FileCopy - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die FileCopy-Funktion kopiert eine oder mehrere Dateien." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>FileCopy</h1>

<p>Kopiert eine oder mehrere Dateien.</p>

<pre class="Syntax"><span class="func">FileCopy</span> Quellmuster, Zielmuster <span class="optional">, Überschreiben</span></pre>
<h2>Parameter</h2>
<dl>

  <dt>Quellmuster</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Name einer Datei oder eines Ordners, oder ein Platzhaltermuster wie C:\Temp\*.tmp. Wenn kein absoluter Pfad angegeben ist, wird <em>Quellmuster</em> im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet.</p>
  </dd>

  <dt>Zielmuster</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Name oder Muster des Ziels. Wenn kein absoluter Pfad angegeben ist, wird das Ziel im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Das Zielverzeichnis muss bereits vorhanden sein. Die folgenden funktional identischen Beispiele zeigen, wie man eine einfache Kopie durchführen kann (unter Beibehaltung der vorhandenen Dateinamen), indem man nur den Ordnernamen angibt:</p>
      <pre>FileCopy "C:\*.txt", "C:\Mein Ordner"</pre>
      <pre>FileCopy "C:\*.txt", "C:\Mein Ordner\*.*"</pre>
  </dd>

  <dt>Überschreiben</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#boolean">Integer (boolescher Wert)</a></p>
    <p>Dieser Parameter bestimmt, ob bereits vorhandene Dateien überschrieben werden dürfen. Wenn dieser Parameter 1 (true) ist, wird die Funktion vorhandene Dateien überschreiben. Wenn dieser Parameter weggelassen wird oder 0 (false) ist, wird die Funktion vorhandene Dateien nicht überschreiben.</p>
  </dd>

</dl>

<h2>Fehlerbehandlung</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf die Anzahl der Dateien gesetzt, die nicht kopiert werden konnten, und bei Erfolg auf 0.</p>
<p>In jedem Fall wird ErrorLevel auf 0 gesetzt, falls die Quelldatei eine einzelne Datei ist (ohne Platzhalter) und nicht existiert. Um diesen Zustand zu erkennen, wendet man <a href="FileExist.htm">FileExist</a> auf die Quelldatei an, bevor man sie kopiert.</p>
<p>Im Gegensatz zu <a href="FileMove.htm">FileMove</a> wird das Kopieren einer Datei auf sich selbst immer als Fehler gewertet, auch dann, wenn der Überschreibmodus aktiv ist.</p>
<p>Wenn Dateien gefunden wurden, wird <a href="../Variables.htm#LastError">A_LastError</a> entweder auf Null (0) oder unmittelbar nach dem letzten Fehler auf das Ergebnis der Systemfunktion GetLastError() gesetzt. Ansonsten enthält A_LastError einen Fehlercode, der eventuell kenntlich macht, warum keine Dateien gefunden wurden.</p>

<h2>Bemerkungen</h2>
<p>FileCopy kopiert nur Dateien. Wenn Sie stattdessen den kompletten Inhalt eines Ordners (also alle Dateien und Unterordner) kopieren wollen, können Sie das Beispiel ganz unten verwenden. Um einen einzelnen Ordner (einschließlich Unterordner) zu kopieren, verwendet man <a href="DirCopy.htm">DirCopy</a>.</p>
<p>Die Operation wird auch dann fortgesetzt, wenn Fehler auftreten.</p>
<h2>Siehe auch</h2>
<p><a href="FileMove.htm">FileMove</a>, <a href="DirCopy.htm">DirCopy</a>, <a href="DirMove.htm">DirMove</a>, <a href="FileDelete.htm">FileDelete</a></p>
<h2>Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>FileCopy "C:\Meine Dokumente\Liste1.txt", "D:\Backup\"  <em>; Macht eine Kopie, aber behält den originalen Namen.</em>
FileCopy "C:\Meine Datei.txt", "C:\Meine neue Datei.txt"  <em>; Kopiert eine Datei mit neuem Namen in den gleichen Ordner.</em>
FileCopy "C:\Ordner1\*.txt", "D:\Neuer Ordner\*.bkp"  <em>; Kopiert eine Datei mit neuer Dateiendung in einen anderen Ordner.</em></pre>
</div>

<div class="ex" id="ExCopyAll">
<p><a href="#ExCopyAll">#2</a>: Das folgende Beispiel kopiert alle Dateien und Unterordner in einen anderen Ordner:</p>
<pre>Fehleranzahl := KopiereDateienUndOrdner("C:\Mein Ordner\*.*", "D:\Zielordner für Dateien &amp; Ordner")
if Fehleranzahl != 0
    MsgBox Fehleranzahl " Dateien/Ordner konnten nicht kopiert werden."

KopiereDateienUndOrdner(Quellmuster, Zielordner, Überschreiben := false)
<em>; Kopiert alle Dateien und Ordner von Quellmuster in einen Ordner mit den Namen Zielordner und
; gibt die Anzahl an Dateien/Ordnern zurück, die nicht kopiert werden konnten.</em>
{
    <em>; Zuerst alle Dateien kopieren (aber nicht die Ordner):</em>
    FileCopy Quellmuster, Zielordner, Überschreiben
    Fehleranzahl := ErrorLevel
    <em>; Jetzt alle Ordner kopieren:</em>
    Loop Files, Quellmuster, "D"  <em>; D bedeutet "nur Ordner".</em>
    {
        DirCopy A_LoopFilePath, Zielordner "\" A_LoopFileName, Überschreiben
        Fehleranzahl += ErrorLevel
        if ErrorLevel  <em>; Jeden Problemordner mit Namen anzeigen.</em>
            MsgBox A_LoopFilePath " kann nicht nach " Zielordner " kopiert werden."
    }
    return Fehleranzahl
}</pre>
</div>

</body>
</html>
