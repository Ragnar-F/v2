<!DOCTYPE HTML>
<html lang="de">
<head>
<title>FileMove - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die FileMove-Funktion verschiebt eine oder mehrere Dateien, oder benennt sie um." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>FileMove</h1>

<p>Verschiebt eine oder mehrere Dateien, oder benennt sie um.</p>

<pre class="Syntax"><span class="func">FileMove</span> Quellmuster, Zielmuster <span class="optional">, Überschreiben</span></pre>
<h2>Parameter</h2>
<dl>

  <dt>Quellmuster</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Name einer Datei oder ein Platzhaltermuster wie C:\Temp\*.tmp. Wenn kein absoluter Pfad angegeben ist, wird <em>Quellmuster</em> im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet.</p>
  </dd>

  <dt>Zielmuster</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Name oder Muster des Ziels. Wenn kein absoluter Pfad angegeben ist, wird das Ziel im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Die folgenden funktional identischen Beispiele zeigen, wie man eine einfache Verschiebung durchführen kann (unter Beibehaltung der vorhandenen Dateinamen), indem man nur den Ordnernamen angibt:</p>
<pre>FileMove "C:\*.txt", "C:\Mein Ordner"</pre>
<pre>FileMove "C:\*.txt", "C:\Mein Ordner\*.*"</pre>
  </dd>

  <dt>Überschreiben</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#boolean">Integer (boolescher Wert)</a></p>
    <p>Dieser Parameter bestimmt, ob bereits vorhandene Dateien überschrieben werden dürfen. Wenn dieser Parameter 1 (true) ist, wird die Funktion vorhandene Dateien überschreiben. Wenn dieser Parameter fehlt oder 0 (false) ist, wird die Funktion vorhandene Dateien nicht überschreiben.</p>
  </dd>

</dl>

<h2>ErrorLevel</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf die Anzahl der Dateien gesetzt, die nicht verschoben werden konnten, und bei Erfolg auf 0. Wenn die Quelldatei eine einzelne nicht vorhandene Datei (ohne Platzhalter) ist, wird ErrorLevel auch auf 0 gesetzt. Um diesen Zustand zu erkennen, wendet man <a href="FileExist.htm">FileExist</a> auf die Quelldatei an, bevor man sie verschiebt.</p>
<p>Im Gegensatz zu <a href="FileCopy.htm">FileCopy</a> wird das Verschieben einer Datei auf sich selbst immer als Erfolg angesehen, selbst wenn der Überschreibmodus nicht aktiv ist.</p>
<p>Wenn Dateien gefunden wurden, wird <a href="../Variables.htm#LastError">A_LastError</a> entweder auf Null (0) oder unmittelbar nach dem letzten Fehler auf das Ergebnis der Systemfunktion GetLastError() gesetzt. Ansonsten enthält A_LastError einen Fehlercode, der eventuell kenntlich macht, warum keine Dateien gefunden wurden.</p>

<h2>Bemerkungen</h2>
<p>FileMove verschiebt nur Dateien. Wenn Sie stattdessen den kompletten Inhalt eines Ordners (also alle Dateien und Unterordner) verschieben wollen, können Sie das Beispiel ganz unten verwenden. Mit <a href="DirMove.htm">DirMove</a> kann ein einzelner Ordner verschoben oder umbenannt werden.</p>
<p>Die Operation wird auch dann fortgesetzt, wenn Fehler auftreten.</p>
<p>Diese Funktion ist zwar in der Lage, Dateien auf einen anderen Datenträger zu verschieben, aber die Operation dauert wesentlich länger als das Verschieben von Dateien auf denselben Datenträger. Das liegt daran, dass das Verschieben von Dateien auf denselben Datenträger quasi dem Umbenennen von Dateien entspricht, was bedeutend schneller ist.</p>
<h2>Siehe auch</h2>
<p><a href="FileCopy.htm">FileCopy</a>, <a href="DirCopy.htm">DirCopy</a>, <a href="DirMove.htm">DirMove</a>, <a href="FileDelete.htm">FileDelete</a></p>
<h2>Beispiele</h2>
<pre class="NoIndent">FileMove "C:\Meine Dokumente\Liste1.txt", "D:\Backup\"  <em>; Verschiebt die Datei, ohne sie umzubenennen.</em>
FileMove "C:\Datei vorher.txt", "C:\Datei nachher.txt"  <em>; Benennt eine Datei um.</em>
FileMove "C:\Ordner1\*.txt, "D:\Neuer Ordner\*.bkp"  <em>; Verschiebt und ändert die Dateiendungen.</em></pre>
<pre class="NoIndent"><em>; Das folgende Beispiel verschiebt alle Dateien und Unterordner in einen anderen Ordner:</em>
Fehleranzahl := VerschiebeDateienUndOrdner("C:\Mein Ordner\*.*", "D:\Zielordner für Dateien &amp; Ordner")
if Fehleranzahl != 0
    MsgBox Fehleranzahl " Dateien/Ordner konnten nicht verschoben werden."

VerschiebeDateienUndOrdner(Quellmuster, Zielordner, Überschreiben := false)
<em>; Verschiebt alle Dateien und Ordner vom Quellmuster in dem Zielordner und
; gibt die Anzahl an Dateien/Ordnern zurück, die nicht verschoben werden konnten.</em>
{
    if Überschreiben = 1
        Überschreiben := 2  <em>; Siehe <a href="DirMove.htm">DirMove</a> zum Thema Modus 1 vs 2.</em>
    <em>; Zuerst alle Dateien verschieben (aber nicht die Ordner):</em>
    FileMove Quellmuster, Zielordner, Überschreiben
    Fehleranzahl := ErrorLevel
    <em>; Jetzt alle Ordner verschieben:</em>
    Loop Files, Quellmuster, "D"  <em>; D bedeutet "nur Ordner".</em>
    {
        DirMove A_LoopFilePath, Zielordner "\" A_LoopFileName, Überschreiben
        Fehleranzahl += ErrorLevel
        if ErrorLevel  <em>; Jeden Problemordner mit Namen anzeigen.</em>
            MsgBox A_LoopFilePath " kann nicht nach " Zielordner " verschoben werden."
    }
    return Fehleranzahl
}</pre>

</body>
</html>
