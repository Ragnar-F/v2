<!DOCTYPE HTML>
<html lang="de">
<head>
<title>ComObjConnect - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die ComObjConnect-Funktion verbindet die Ereignisquellen des Objekts mit Funktionen, die ein bestimmtes Präfix haben." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>ComObjConnect</h1>
<p>Verbindet die Ereignisquellen des Objekts mit Funktionen, die ein bestimmtes Präfix haben.</p>
<pre class="Syntax"><span class="func">ComObjConnect</span> ComObject <span class="optional">, Präfix</span></pre>

<h2>Parameter</h2>
<dl>

  <dt>ComObject</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#objects">Objekt</a></p>
    <p>Ein Objekt, das Ereignisse auslöst.</p>
    <p>Wenn das Objekt das IConnectionPointContainer-Interface nicht unterstützt oder wenn die Typinformationen zur Klasse des Objekts nicht abgerufen werden kann, wird eine Fehlermeldung angezeigt. Mit <a href="ComObjError.htm">ComObjError</a> oder <a href="Try.htm">Try</a>/<a href="Catch.htm">Catch</a> kann dies unterdrückt oder kontrolliert werden.</p>
    <p>Das IProvideClassInfo-Interface wird genutzt, um die Typinformationen zur Klasse des Objekts abzurufen, sofern es vom Objekt unterstützt wird. Ansonsten versucht ComObjConnect, die Typinformationen via IDispatch-Interface des Objekts abzurufen, was unzuverlässig sein kann.</p>
  </dd>

  <dt>Präfix</dt>
  <dd>
      <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
      <p>Eine Zeichenkette, die dem Ereignisnamen vorangestellt wird, um zu bestimmen, welche Funktion aufgerufen werden soll, wenn ein Ereignis eintritt.</p>
      <p>Lässt man diesen Parameter weg, wird die Verbindung zu diesem Objekt getrennt; das heißt, dass das Skript nicht länger Benachrichtigungen von seinen Ereignissen erhält.</p>
      <p>Dieser Parameter kann ein via Skript definiertes Objekt sein. Wenn ein Ereignis ausgelöst wird, wird die entsprechende Methode aufgerufen. Der erste Parameter, der üblicherweise der versteckte <code>this</code>-Parameter ist, verweist auf das via Skript definierte Objekt, nicht auf das COM-Objekt. Mit einer <a href="../Objects.htm#Meta_Functions">__Call-Meta-Funktion</a> können alle Ereignisse abgefangen werden, ohne dass für jedes Ereignis eine Methode definiert werden muss.</p>
    </dd>

</dl>

<h2 id="Usage">Verwendung</h2>
<p>Um ComObjConnect effektiv zu nutzen, müssen Sie zunächst Funktionen in das Skript schreiben, die die entsprechenden Ereignisse behandeln können. Solche Funktionen, auch "Eventhandler" genannt, haben die folgende Struktur:</p>
<pre class="Syntax Short NoIndent"><i>Präfix</i><b>Ereignisname</b>([<i>Params...</i>, ComObject])
{
    <i class="dull">... ereignisbehandelnder Code ...</i>
    return <i>Rückgabewert</i>
}</pre>
<p>Für <i>Präfix</i> kann ein beliebiges Präfix angegeben werden, während der <b>Ereignisname</b> der Name des Ereignisses ist, das von der Funktion behandelt werden soll.</p>
<p><i>Params</i> entspricht den Parametern, die das Ereignis hat. Wenn das Ereignis keine Parameter hat, sollte <i>Params</i> ganz weggelassen werden. <i>ComObject</i> ist optional und kann nur genutzt werden, wenn die korrekte Anzahl von <i>Params</i> definiert ist; es enthält eine Referenz zum originalen Wrapper-Objekt, das an ComObjConnect übergeben wurde. "ComObject" sollte mit einem Namen ersetzt werden, der eher dem Kontext Ihres Skripts entspricht.</p>
<p>Beachten Sie, dass Eventhandler Rückgabewerte haben können. Mit <a href="ComObject.htm">ComObject(Typ, Wert)</a> kann ein COM-spezifischer Wertetyp zurückgegeben werden. <code>return ComObject(0,0)</code> beispielsweise gibt eine Variante des Typs VT_EMPTY zurück, was das gleiche ist wie, als würde eine JavaScript-Funktion <code>undefined</code> (oder überhaupt nichts) zurückgeben.</p>
<p>Mit <code>ComObjConnect(MeinObjekt, "<i>Präfix</i>")</code> kann die Ereignisbehandlung aktiviert werden.</p>
<p>Mit <code>ComObjConnect(MeinObjekt)</code> kann die Verbindung zum Objekt getrennt werden (um die Ereignisbehandlung zu stoppen).</p>
<p>Ist die Anzahl der Parameter unbekannt, kann eine <a href="../Functions.htm#Variadic">variadische Funktion</a> verwendet werden.</p>

<h2>Bemerkungen</h2>
<p>Bei Misserfolg wird die Funktion je nach aktueller <a href="ComObjError.htm">ComObjError</a>-Einstellung und <a href="ComObjError.htm#factors">anderen Faktoren</a> eventuell eine Ausnahme auslösen, das Skript beenden oder einfach ihren Wert zurückgeben.</p>

<h2>Siehe auch</h2>
<p><a href="ComObjCreate.htm">ComObjCreate</a>, <a href="ComObjGet.htm">ComObjGet</a>, <a href="ComObjActive.htm">ComObjActive</a>, <a href="ComObjError.htm">ComObjError</a>, <a href="https://msdn.microsoft.com/de-de/library/ccxe1xe6.aspx">WScript.ConnectObject (MSDN)</a></p>

<h2 id="Examples">Beispiele</h2>
<pre class="NoIndent">
ie := ComObjCreate("<a href="https://msdn.microsoft.com/de-de/library/aa752084.aspx">InternetExplorer.Application</a>")

<em>; Verbindet Ereignisse mit entsprechenden Skript-Funktionen, die den Präfix "IE_" haben.</em>
<b>ComObjConnect</b>(ie, "IE_")

ie.Visible := true  <em>; Funktioniert nicht korrekt unter IE7.</em>
ie.Navigate("https://autohotkey.com/")
#Persistent

<b>IE_<a href="https://msdn.microsoft.com/de-de/library/aa768329.aspx">DocumentComplete</a></b>(ieEventParam, url, ieFinalParam) {
    global ie
    if (ie != ieEventParam)
        s .= "Erster Parameter ist ein neues Wrapper-Objekt.`n"
    if (ie == ieFinalParam)
        s .= "Letzter Parameter ist das originale Wrapper-Objekt.`n"
    if (<a href="ComObjValue.htm">ComObjValue</a>(ieEventParam) == ComObjValue(ieFinalParam))
        s .= "Beide Wrapper-Objekte verweisen auf die gleiche IDispatch-Instanz.`n"
    MsgBox s . "Das Laden von " ie.Document.title " @ " url " wurde abgeschlossen."
    ie.Quit()
    ExitApp
}
</pre>

</body>
</html>
