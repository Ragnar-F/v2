<!DOCTYPE HTML>
<html>
<head>
<title>GetKeyState</title>
<meta name="description" content="Verwenden Sie GetKeyState in diesem freien Makro-Programm, um auf einfache Weise zu überprüfen, ob eine Taste oben oder unten ist.">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>GetKeyState</h1>

<p>Überprüft, ob eine Taste oben oder unten ist. Kann auch den Status eines Joysticks abrufen.</p>

<pre class="Syntax">AusgabeVar := <span class="func">GetKeyState</span>(Tastenname <span class="optional">, Modus</span>)</pre>
<h3>Parameter</h3>
<dl>

  <dt>Tastenname</dt>
  <dd><p>Nahezu jedes Zeichen, das mit der Tastatur erzeugt werden kann, oder einer der Tastennamen aus der <a href="../KeyList.htm">Tastenliste</a>, darunter auch Maus- und Joystick-Tasten. Beispiele: B, 5, LWin, RControl, Alt, Enter, Escape, LButton, MButton, Joy1.</p>
      <p>Alternativ kann ein eindeutiger virtueller Tastencode wie vkFF angegeben werden. Virtuelle Tastencodes sind nützlich, um auf Tasten zu verweisen, die keine Namen haben (was aber selten vorkommt). Schauen Sie sich die Instruktion am unteren Ende der <a href="../KeyList.htm#SpecialKeys">Tastenliste</a> an, um zu erfahren, wie der virtuelle Tastencode einer solchen Taste ermittelt werden kann.</p> 
      <p><b>Bekannte Einschränkung</b>: Diese Funktion kann nicht zwischen zwei Tasten unterscheiden, die den gleichen virtuellen Tastencode haben, wie z. B. Left und NumpadLeft.</p></dd>

  <dt>Modus</dt>
  <dd><p>Dieser Parameter wird ignoriert, wenn der Status des Joysticks abgerufen wird.</p>
      <p>Wenn dieser Parameter fehlt, wird standardmäßig der logische Zustand der Taste ermittelt. Das ist der Zustand, den das Betriebssystem oder aktive Fenster für diese Taste vermutet, aber nicht unbedingt dem physischen Zustand entsprechen muss.</p>
	  <p>Ansonsten können Sie einen der folgenden Buchstaben angeben:</p>
      <p><strong>P</strong>: Ruft den physischen Zustand ab (z. B. ob der Benutzer eine Taste physisch gedrückt hält). In der Regel stimmt der physische Zustand einer Taste oder Maustaste mit dem logischen Zustand überein. Sobald aber der Tastatur- und/oder Maus-Hook installiert ist, spiegelt der physische Zustand genau wider, ob der Benutzer eine Taste physisch gedrückt hält oder nicht (sofern der Benutzer die Taste nach unten drückte, während das Skript lief). Mit der <a href="KeyHistory.htm">KeyHistory</a>-Funktion oder dem dazugehörigen Menüpunkt können Sie überprüfen, ob Ihr Skript ein Hook benutzt. Fügen Sie die Direktiven <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a> und/oder <a href="_InstallMouseHook.htm">#InstallMouseHook</a> in Ihr Skript ein, um die Installation eines Hooks zu erzwingen.</p>
      <p><strong>T</strong>: Ruft den Umschaltzustand ab (nur für umschaltbare Tasten wie <kbd>Feststell</kbd>, <kbd>Num</kbd>, <kbd>Rollen</kbd> und <kbd>Einfg</kbd> von Bedeutung). D bedeutet, dass die Taste "An" ist, und U bedeutet, dass sie "Aus" ist (aber die GetKeyState-Funktion übergibt True (1) für "An" und False (0) für "Aus").</p>
    </dd>

</dl>

<h3>Rückgabewert</h3>
<p>Handelt es sich um eine Tastatur- oder Maustaste, ist der Rückgabewert eine 1, wenn die Taste unten ist (oder eingeschaltet ist), oder eine 0, wenn sie oben ist (oder ausgeschaltet ist).</p>
<p>Die nächsten 2 Methoden gelten nur für Joysticks:</p>
<p>1) Bei einer Joystick-Achse wie JoyX wird <em>AusgabeVar</em> auf eine Gleitkommazahl zwischen 0 und 100 gesetzt, um die Position des Joysticks als Prozentwert vom Bewegungsbereich der Achse darzustellen. Mit dem <a href="../scripts/JoystickTest.htm">Test-Skript</a> können Sie einen oder mehrere Joysticks analysieren.</p>
<p>2) Wenn <em>Tastenname</em> JoyPOV ist, wird der abgerufene Wert zwischen 0 und 35900 sein. Die folgenden ungefähren POV-Werte werden von den meisten Joysticks verwendet:<br>
-1: keinen Winkel erkannt<br>
0: nach vorne gerichtet<br>
9000 (90 Grad): nach rechts gerichtet <br>
27000 (270 Grad): nach links gerichtet<br>
18000 (180 Grad): nach hinten gerichtet</p>    

<h3>Bemerkungen</h3>
<p>Wenn es darum geht, auf eine Änderung des Tastenzustands zu warten, ist <a href="KeyWait.htm">KeyWait</a> besser geeignet als eine GetKeyState-Schleife.</p>
<p>Es kann vorkommen, dass Betriebssysteme mit ungewöhnlichen Tastaturtreibern den Zustand ihrer Tasten, insbesondere der Umschaltzustand von Tasten wie <kbd>Feststell</kbd>, nur langsam aktualisieren. Wenn Sie also vorhaben, direkt danach den Zustand von so einer Taste zu überprüfen, wäre es ratsam, ein <a href="Sleep.htm">Sleep</a> davorzusetzen, um dem Betriebssystem genug Zeit zum Aktualisieren des Tastenzustands zu verschaffen.</p>
<p>Beispiele zur Verwendung von GetKeyState mit einem Joystick finden Sie unter <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a> und <a href="../scripts/JoystickMouse.htm">Joystick-Zu-Maus-Skript</a>.</p>
<h3>Siehe auch</h3>
<p><a href="KeyWait.htm">KeyWait</a>, <a href="../KeyList.htm">Tastenliste</a>, <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a>, <a href="KeyHistory.htm">KeyHistory</a>, <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_InstallMouseHook.htm">#InstallMouseHook</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Einfache Beispiele:</em>
Status := GetKeyState("RButton")  <em>; Rechte Maustaste.</em>
Status := GetKeyState("Joy2")  <em>; Die zweite Taste des ersten Joysticks.</em>

if GetKeyState("Shift")
    MsgBox "Mindestens eine UMSCHALT-Taste ist unten."
else
    MsgBox "Keine UMSCHALT-Taste unten."

Status := GetKeyState("CapsLock", "T")  <em>; True, wenn FESTSTELL-Taste AN ist, ansonsten False.</em>

<em>; Neubelegungsbeispiel (dient nur zur Veranschaulichung,
; weil das <a href="../misc/Remap.htm">interne Neubelegungs-Feature</a> leichter zu handhaben wäre):
; Im folgenden Hotkey wird die Maustaste gedrückt gehalten, während NumpadAdd
; unten ist, das NumpadAdd effektiv in eine Maustaste transformiert). Diese Methode
; kann zum Wiederholen einer Aktion benutzt werden, während der Benutzer eine Taste gedrückt hält:</em>
*NumpadAdd::
MouseClick "left",,, 1, 0, "D"  <em>; Hält die linke Maustaste gedrückt.</em>
Loop
{
    Sleep 10
    if !GetKeyState("NumpadAdd", "P")  <em>; Die Taste wurde losgelassen, also Schleife verlassen.</em>
        break
    <em>; ... fügen Sie hier beliebig andere Aktionen ein, die wiederholt werden sollen.</em>
}
MouseClick "left",,, 1, 0, "U"  <em>; Lässt die Maustaste los.</em>
return

<em>; Beispiel: Macht das Verhalten einer Joystick-Taste abhängig von der Achsenposition des Joysticks.</em>
joy2:: 
joyx := GetKeyState("JoyX") 
if joyx &gt; 75 
    MsgBox "Aktion #1 (Taste gedrückt, während Joystick nach rechts bewegt wurde)."
else if joyx &lt; 25 
    MsgBox "Aktion #2 (Taste gedrückt, während Joystick nach links bewegt wurde)."
else
    MsgBox "Aktion #3 (Taste gedrückt, während Joystick horizontal zentriert wurde)."
return

<em>; Siehe <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a> und <a href="../scripts/JoystickMouse.htm">Joystick-Zu-Maus-Skript</a> für weitere Beispiele.</em></pre>

</body>
</html>
