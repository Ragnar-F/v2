<!DOCTYPE HTML>
<html lang="de">
<head>
<title>PixelGetColor - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die PixelGetColor-Funktion ermittelt die Farbe des Pixels auf bestimmte X/Y-Koordinaten." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>PixelGetColor</h1>

<p>Ermittelt die Farbe des Pixels auf bestimmte X/Y-Koordinaten.</p>

<pre class="Syntax">Farbe := <span class="func">PixelGetColor</span>(X, Y <span class="optional">, Modus</span>)</pre>
<h2>Parameter</h2>
<dl>

  <dt>X, Y</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die X/Y-Koordinaten des Pixels. Koordinaten sind relativ zum aktiven Fenster, sofern das nicht mit <a href="CoordMode.htm">CoordMode</a> geändert wurde.</p>
  </dd>

  <dt>Modus</dt>
  <dd>
      <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
      <p>Dieser Parameter kann null oder mehrere der folgenden Wörter enthalten. Sind mehrere Wörter vorhanden, müssen sie mit einem Leerzeichen voneinander getrennt werden (z. B. <code>"Alt Slow"</code>).</p>
      <p><strong>Alt</strong>: Eine alternative Methode zum Abrufen der Farbe - sie sollte verwendet werden, wenn die normale Methode ungültige oder ungenaue Farben bei bestimmten Fenstern erzeugt. Diese Methode ist ca. 10% langsamer als die normale Methode.</p>
      <p><strong>Slow</strong>: Eine aufwendigere Methode zum Abrufen der Farbe - sie könnte in bestimmten Vollbild-Anwendungen funktionieren, wo andere versagen. Diese Methode ist ca. dreimal langsamer als die normale Methode. Hinweis: <em>Slow</em> hat Vorrang vor <em>Alt</em>, also muss <em>Alt</em> in diesem Fall nicht angegeben werden.</p>
    </dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
<p>Diese Funktion gibt eine hexadezimale numerische Zeichenkette zurück, die die RGB-Farbe (Rot-Grün-Blau) des Pixels repräsentiert. Die Farbe Lila beispielsweise ist als 0x800080 definiert, weil sie eine Blau- und Rot-Intensität von 0x80 (128) und eine Grün-Intensität von 0x00 (0) hat.</p>

<h2>Fehlerbehandlung</h2>
<p>Es wird eine Ausnahme ausgelöst, wenn es ein Problem beim Abrufen der Farbe des Pixels gab.</p>

<h2>Bemerkungen</h2>
<p>Der Pixel muss sichtbar sein; das heißt, dass es nicht möglich ist, die Pixelfarbe eines Fensters zu ermitteln, das sich hinter einem anderen Fenster befindet. Pixel, die unterhalb des Mauszeigers sind, werden in der Regel erkannt. Videospielmauszeiger hingegen behindern die Sicht auf darunterliegende Pixel in den meisten Fällen.</p>
<p>Mit "Window Spy" (über das Tray-Menü aufrufbar) oder dem Beispiel weiter unten können die aktuellen Farben auf dem Bildschirm ermittelt werden.</p>
<p>Bekannte Einschränkungen:</p>
<ul>
  <li>Ein Fenster, das <a href="WinSetTransparent.htm">teilweise transparent</a> ist oder eine als unsichtbar markierte Farbe enthält (<a href="WinSetTransColor.htm">WinSetTransColor</a>), gibt nicht die eigenen Farben, sondern die des dahinterliegenden Fensters zurück.</li>
  <li>Es kann sein, dass PixelGetColor ungenaue Ergebnisse bei bestimmten Anwendungen erzeugt. In diesem Fall kann man das Wort <em>Alt</em> oder <em>Slow</em> im letzten Parameter ausprobieren.</li>
</ul>
<h2>Siehe auch</h2>
<p><a href="PixelSearch.htm">PixelSearch</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h2>Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>^!z::  <em>; Hotkey STRG+ALT+Z.</em>
{
    MouseGetPos MausX, MausY
    MsgBox "Die Farbe auf der aktuellen Mausposition ist " PixelGetColor(MausX, MausY)
}</pre>
</div>

</body>
</html>
