<!DOCTYPE HTML>
<html>
<head>
<title>PixelGetColor</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>PixelGetColor</h1>

<p>Ermittelt die Farbe des Pixels auf den angegebenen X/Y-Koordinaten.</p>

<pre class="Syntax">AusgabeVar := <span class="func">PixelGetColor</span>(X, Y <span class="optional">, "Alt|Slow"</span>)</pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Variable, in der die Farbkennung im hexadezimalen RGB-Format (Rot-Grün-Blau) gespeichert werden soll. Zum Beispiel wäre die Farbe Lila 0x800080, weil sie eine Blau- und Rot-Intensität von 80 und eine Grün-Intensität von 00 hat.</p></dd>

  <dt>X, Y</dt>
  <dd><p>Die X/Y-Koordinaten des Pixels. Koordinaten sind relativ zum aktiven Fenster, sofern das nicht mit <a href="CoordMode.htm">CoordMode</a> geändert wurde.</p></dd>

  <dt>Alt|Slow</dt>
  <dd><p>Dieser Parameter kann null oder mehrere der folgenden Wörter enthalten. Sind mehrere Wörter vorhanden, müssen sie mit einem Leerzeichen voneinander getrennt werden (z. B. <code>Alt Slow</code>).</p>
      <p><strong>Alt</strong>: Eine alternative Methode zum Abrufen der Farbe - sie sollte verwendet werden, wenn die normale Methode ungültige oder ungenaue Farben bei bestimmten Fenstern erzeugt. Diese Methode ist ca. 10% langsamer als die normale Methode.</p>
      <p><strong>Slow</strong>: Eine aufwendigere Methode zum Abrufen der Farbe - sie könnte in bestimmten Vollbild-Anwendungen funktionieren, wo andere versagen. Diese Methode ist ca. dreimal langsamer als die normale Methode. Hinweis: <em>Slow</em> hat Vorrang vor <em>Alt</em>, also muss <em>Alt</em> in diesem Fall nicht angegeben werden.</p>
    </dd>

</dl>

<h3>ErrorLevel</h3>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h3>Bemerkungen</h3>
<p>Der Pixel muss sichtbar sein; das heißt, dass es nicht möglich ist, die Pixelfarbe eines Fensters zu ermitteln, das sich hinter einem anderen Fenster befindet. Pixel, die unterhalb des Mauszeigers sind, werden in der Regel erkannt. Spiele-Mauszeiger hingegen behindern die Sicht auf darunterliegende Pixel in den meisten Fällen.</p>
<p>Mit "Window Spy" (über das Infobereichsmenü aufrufbar) oder dem Beispiel weiter unten können die aktuellen Farben auf dem Bildschirm ermittelt werden.</p>
<p>Bekannte Einschränkungen:</p>
<ul>
  <li>Ein Fenster, das <a href="WinSet.htm#Transparent">teilweise transparent</a> ist oder eine als unsichtbar markierte Farbe enthält (<a href="WinSet.htm#TransColor">WinSetTransColor</a>), meldet die Farben des dahinterliegenden Fensters, anstatt seine eigenen.</li>
  <li>Es kann sein, dass PixelGetColor ungenaue Ergebnisse bei bestimmten Anwendungen erzeugt. In diesem Fall kann man das Wort <em>Alt</em> oder <em>Slow</em> im letzten Parameter ausprobieren.</li>
</ul>
<h3>Siehe auch</h3>
<p><a href="PixelSearch.htm">PixelSearch</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">^!z::  <em>; Hotkey STRG+ALT+Z.</em>
MouseGetPos, MausX, MausY
PixelGetColor, Farbe, %MausX%, %MausY%
MsgBox Die Farbe auf der aktuellen Mausposition ist %Farbe%.
return</pre>

</body>
</html>
