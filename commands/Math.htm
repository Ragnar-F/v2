<!DOCTYPE HTML>
<html>
<head>
<title>Mathematische Funktionen</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Mathematische Funktionen</h1>

<h4>Kurzübersicht:</h4>
<ul>
  <li><a href="#General">Allgemeine Mathematik</a>:
    <ul>
      <li><a href="#Abs">Abs - Absolutwert</a></li>
      <li><a href="#Ceil">Ceil - Aufrunden</a></li>
      <li><a href="#Exp">Exp - Exponential</a></li>
      <li><a href="#Floor">Floor - Abrunden</a></li>
      <li><a href="#Log">Log - Dezimaler Logarithmus</a></li>
      <li><a href="#Ln">Ln - Natürlicher Logarithmus</a></li>
      <li><a href="#Max">Max - Höchster Wert</a></li>
      <li><a href="#Min">Min - Niedrigster Wert</a></li>
      <li><a href="#Mod">Mod - Division mit Rest (Modulo)</a></li>
      <li><a href="#Round">Round - Runden</a></li>
      <li><a href="#Sqrt">Sqrt - Quadratwurzel</a></li>
    </ul>
  </li>
  <li><a href="#Trigonometry">Trigonometrie</a>:
    <ul>
      <li><a href="#Sin">Sin - Sinus</a></li>
      <li><a href="#Cos">Cos - Kosinus</a></li>
      <li><a href="#Tan">Tan - Tangens</a></li>
      <li><a href="#ASin">ASin - Arkussinus</a></li>
      <li><a href="#ACos">ACos - Arkuskosinus</a></li>
      <li><a href="#ATan">ATan - Arkustangens</a></li>
    </ul>
  </li>
  <li><a href="#Errors">Fehlerbehandlung</a></li>
</ul>

<h2 id="General">Allgemeine Mathematik</h2>

<div class="methodShort" id="Abs">
<h2>Abs <span class="headnote">Absolutwert</span></h2>
<pre class="Syntax">Wert := <span class="func">Abs</span>(Zahl)</pre>
<p>Gibt den absoluten Wert von <em>Zahl</em> zurück.</p>
<p>Der Rückgabewert hat den gleichen Typ wie <em>Zahl</em> (Integer oder Gleitkommazahl).</p>
<pre class="NoIndent">MsgBox Abs(-1.2) <em>; Gibt 1.2 zurück</em></pre>
</div>

<div class="methodShort" id="Ceil">
<h2>Ceil <span class="headnote">Aufrunden</span></h2>
<pre class="Syntax">Wert := <span class="func">Ceil</span>(Zahl)</pre>
<p>Gibt <em>Zahl</em> zurück, welche auf den nächsten Integer aufgerundet ist (ohne .00-Suffix).</p>
<pre class="NoIndent">MsgBox Ceil(1.2)  <em>; Gibt 2 zurück</em>
MsgBox Ceil(-1.2) <em>; Gibt -1 zurück</em></pre>
</div>

<div class="methodShort" id="Exp">
<h2>Exp <span class="headnote">Exponential</span></h2>
<pre class="Syntax">Wert := <span class="func">Exp</span>(N)</pre>
<p>Gibt <em>e</em> zurück (ungefähr 2.71828182845905), potenziert mit <em>N</em>.</p>
<p>Der Parameter <em>N</em> kann negativ sein und einen Dezimalpunkt enthalten. Um neben <em>e</em> noch andere Zahlen zu potenzieren, verwendet man den <a href="../Variables.htm#pow">**-Operator</a>.</p>
<pre class="NoIndent">MsgBox Exp(1.2) <em>; Gibt 3.320117 zurück</em></pre>
</div>

<div class="methodShort" id="Floor">
<h2>Floor <span class="headnote">Abrunden</span></h2>
<pre class="Syntax">Wert := <span class="func">Floor</span>(Zahl)</pre>
<p>Gibt <em>Zahl</em> zurück, welche auf den nächsten Integer abgerundet ist (ohne .00-Suffix).</p>
<pre class="NoIndent">MsgBox Floor(1.2)  <em>; Gibt 1 zurück</em>
MsgBox Floor(-1.2) <em>; Gibt -2 zurück</em></pre>
</div>

<div class="methodShort" id="Log">
<h2>Log <span class="headnote">Dezimaler Logarithmus</span></h2>
<pre class="Syntax">Wert := <span class="func">Log</span>(Zahl)</pre>
<p>Gibt den Logarithmus (Basis 10) von <em>Zahl</em> zurück.</p>
<p>Das Ergebnis ist eine Gleitkommazahl. Wenn <em>Zahl</em> negativ ist, wird eine Ausnahme ausgelöst.</p>
<pre class="NoIndent">MsgBox Log(1.2) <em>; Gibt 0.079181 zurück</em></pre>
</div>

<div class="methodShort" id="Ln">
<h2>Ln <span class="headnote">Natürlicher Logarithmus</span></h2>
<pre class="Syntax">Wert := <span class="func">Ln</span>(Zahl)</pre>
<p>Gibt den Logarithmus (Basis e) von <em>Zahl</em> zurück.</p>
<p>Das Ergebnis ist eine Gleitkommazahl. Wenn <em>Zahl</em> negativ ist, wird eine Ausnahme ausgelöst.</p>
<pre class="NoIndent">MsgBox Ln(1.2) <em>; Gibt 0.182322 zurück</em></pre>
</div>

<div class="methodShort" id="Max">
<h2>Max <span class="headnote">Höchster Wert</span></h2>
<pre class="Syntax">Wert := Max(Zahl1 [, Zahl2, ...])</pre>
<p>Gibt den höchsten Wert von einer oder mehreren Zahlen zurück.</p>
<pre class="NoIndent">MsgBox Max(2.11, -2, 0) <em>; Gibt 2.11 zurück</em></pre>
<p>Sie können auch einen <a href="../Functions.htm#Variadic">variadischen Parameter</a> angeben, um mehrere Werte innerhalb eines Arrays zu vergleichen. Zum Beispiel:</p>
<pre class="NoIndent">array := [1, 2, 3, 4]
MsgBox Max(array*) <em>; Gibt 4 zurück</em>
</pre>
</div>

<div class="methodShort" id="Min">
<h2>Min <span class="headnote">Niedrigster Wert</span></h2>
<pre class="Syntax">Wert := Min(Zahl1 [, Zahl2, ...])</pre>
<p>Gibt den niedrigsten Wert von einer oder mehreren Zahlen zurück.</p>
<pre class="NoIndent">MsgBox Min(2.11, -2, 0) <em>; Gibt -2 zurück</em></pre>
<p>Sie können auch einen <a href="../Functions.htm#Variadic">variadischen Parameter</a> angeben, um mehrere Werte innerhalb eines Arrays zu vergleichen. Zum Beispiel:</p>
<pre class="NoIndent">array := [1, 2, 3, 4]
MsgBox Min(array*) <em>; Gibt 1 zurück</em></pre>
</div>

<div class="methodShort" id="Mod">
<h2>Mod <span class="headnote">Division mit Rest (Modulo)</span></h2>
<pre class="Syntax">Wert := <span class="func">Mod</span>(Dividend, Divisor)</pre>
<p>Gibt den Rest zurück, wenn <em>Dividend</em> durch <em>Divisor</em> geteilt wird.</p>
<p>Das Vorzeichen des Ergebnisses entspricht dem Vorzeichen des ersten Parameters. Wenn einer der beiden Parameter eine Gleitkommazahl ist, wird das Ergebnis ebenfalls eine Gleitkommazahl sein. Wenn der zweite Parameter eine Null ist, wird eine Ausnahme ausgelöst.</p>
<pre class="NoIndent">MsgBox Mod(7.5, 2) <em>; Gibt 1.5 zurück (2 x 3 + 1.5)</em></pre>
</div>

<div class="methodShort" id="Round">
<h2>Round <span class="headnote">Runden</span></h2>
<pre class="Syntax">Wert := <span class="func">Round</span>(Zahl <span class="optional">, N</span>)</pre>
<p>Gibt <em>Zahl</em> zurück, welche auf <em>N</em> Dezimalstellen gerundet ist.</p>
<p>Ist <em>N</em> nicht vorhanden oder eine 0, wird <em>Zahl</em> auf den nächsten Integer gerundet:</p>
<pre class="NoIndent">MsgBox Round(3.14)    <em>; Gibt 3 zurück</em></pre>
<p>Ist <em>N</em> eine positive Zahl, wird <em>Zahl</em> auf <em>N</em> Dezimalstellen gerundet:</p>
<pre class="NoIndent">MsgBox Round(3.14, 1) <em>; Gibt 3.1 zurück</em></pre>
<p>Ist <em>N</em> negativ, wird <em>Zahl</em> auf <em>N</em> Stellen nach links gerundet:</p>
<pre class="NoIndent">MsgBox Round(345, -1) <em>; Gibt 350 zurück</em>
MsgBox Round(345, -2) <em>; Gibt 300 zurück</em></pre>
<p>Das Ergebnis ist ein Integer, wenn <em>N</em> weggelassen wird oder kleiner als 1 ist.  Ansonsten ist das Ergebnis eine numerische Zeichenkette mit genau <em>N</em> Dezimalstellen. Wenn eine reine Zahl benötigt wird, kann man einfach eine weitere mathematische Operation beim Rückgabewert von Round durchführen; zum Beispiel: <code>Round(3.333, 1)+0</code>.</p>
</div>

<div class="methodShort" id="Sqrt">
<h2>Sqrt <span class="headnote">Quadratwurzel</span></h2>
<pre class="Syntax">Wert := <span class="func">Sqrt</span>(Zahl)</pre>
<p>Gibt die Quadratwurzel von <em>Zahl</em> zurück.</p>
<p>Das Ergebnis ist eine Gleitkommazahl. Wenn <em>Zahl</em> negativ ist, wird eine Ausnahme ausgelöst.</p>
<pre class="NoIndent">MsgBox Sqrt(16) <em>; Gibt 4 zurück</em></pre>
</div>

<h2 id="Trigonometry">Trigonometrie</h2>

<p class="note"><strong>Hinweis</strong>: Um einen Bogenmaßwert in Grad umzuwandeln, multipliziert man ihn mit 180/pi (ungefähr 57.29578). Um einen Gradwert in Bogenmaß umzuwandeln, multipliziert man ihn mit pi/180 (ungefähr 0.01745329252). Der Wert von pi (ungefähr 3.141592653589793) ist das 4-fache von Arkustangens 1.</p>

<div class="methodShort" id="Sin">
<h2>Sin <span class="headnote">Sinus</span></h2>
<pre class="Syntax">Wert := <span class="func">Sin</span>(Zahl)</pre>
<p>Gibt den trigonometrischen Sinus von <em>Zahl</em> zurück.</p>
<p><em>Zahl</em> muss als Bogenmaß angegeben werden.</p>
<pre class="NoIndent">MsgBox Sin(1.2) <em>; Gibt 0.932039 zurück</em></pre>
</div>

<div class="methodShort" id="Cos">
<h2>Cos <span class="headnote">Kosinus</span></h2>
<pre class="Syntax">Wert := <span class="func">Cos</span>(Zahl)</pre>
<p>Gibt den trigonometrischen Kosinus von <em>Zahl</em> zurück.</p>
<p><em>Zahl</em> muss als Bogenmaß angegeben werden.</p>
<pre class="NoIndent">MsgBox Cos(1.2) <em>; Gibt 0.362358 zurück</em></pre>
</div>

<div class="methodShort" id="Tan">
<h2>Tan <span class="headnote">Tangens</span></h2>
<pre class="Syntax">Wert := <span class="func">Tan</span>(Zahl)</pre>
<p>Gibt den trigonometrischen Tangens von <em>Zahl</em> zurück.</p>
<p><em>Zahl</em> muss als Bogenmaß angegeben werden.</p>
<pre class="NoIndent">MsgBox Tan(1.2) <em>; Gibt 2.572152 zurück</em></pre>
</div>

<div class="methodShort" id="ASin">
<h2>ASin <span class="headnote">Arkussinus</span></h2>
<pre class="Syntax">Wert := <span class="func">ASin</span>(Zahl)</pre>
<p>Gibt den Arkussinus (die Zahl, deren Sinus <em>Zahl</em> ist) als Bogenmaß zurück.</p>
<p>Wenn <em>Zahl</em> kleiner als -1 oder größer als 1 ist, wird eine Ausnahme ausgelöst.</p>
<pre class="NoIndent">MsgBox ASin(0.2) <em>; Gibt 0.201358 zurück</em></pre>
</div>

<div class="methodShort" id="ACos">
<h2>ACos <span class="headnote">Arkuskosinus</span></h2>
<pre class="Syntax">Wert := <span class="func">ACos</span>(Zahl)</pre>
<p>Gibt den Arkuskosinus (die Zahl, deren Kosinus <em>Zahl</em> ist) als Bogenmaß zurück.</p>
<p>Wenn <em>Zahl</em> kleiner als -1 oder größer als 1 ist, wird eine Ausnahme ausgelöst.</p>
<pre class="NoIndent">MsgBox ACos(0.2) <em>; Gibt 1.369438 zurück</em></pre>
</div>

<div class="methodShort" id="ATan">
<h2>ATan <span class="headnote">Arkustangens</span></h2>
<pre class="Syntax">Wert := <span class="func">ATan</span>(Zahl)</pre>
<p>Gibt den Arkustangens (die Zahl, deren Tangens <em>Zahl</em> ist) als Bogenmaß zurück.</p>
<pre class="NoIndent">MsgBox ATan(1.2) <em>; Gibt 0.876058 zurück</em></pre>
</div>

<h2 id="Errors">Fehlerbehandlung</h2>
<p>Diese Funktionen lösen eine Ausnahme aus, falls einer der eingehenden Parameter nicht-numerisch ist oder der Versuch einer ungültigen Operation unternommen wird (z. B. eine Division durch 0).</p>

</body>
</html>
