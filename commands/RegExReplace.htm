<!DOCTYPE HTML>
<html lang="de">
<head>
<title>RegExReplace - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die RegExReplace-Funktion ersetzt Vorkommen eines Musters (regulärer Ausdruck) innerhalb einer Zeichenkette." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>RegExReplace</h1>

<p>Ersetzt Vorkommen eines Musters (regulärer Ausdruck) innerhalb einer Zeichenkette.</p>

<pre class="Syntax">NeueZkette := <span class="func">RegExReplace</span>(Heuhaufen, NadelRegEx <span class="optional">, Ersatz := "", AusgabeVarAnzahl := "", Limit := -1, Startposition := 1</span>)</pre>
<h2>Parameter</h2>
<dl>

  <dt>Heuhaufen</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Eine Zeichenkette, deren Inhalt durchsucht und ersetzt werden soll. Sie kann eine binäre Null enthalten.</p>
  </dd>

  <dt>NadelRegEx</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Ein Muster im PCRE-Format (Perl-kompatibler regulärer Ausdruck), das gesucht werden soll. Die <a href="../misc/RegEx-QuickRef.htm#Options">Optionen</a> des Musters (falls vorhanden) müssen am Anfang der Zeichenkette eingefügt werden, gefolgt von einer runden Endklammer. Zum Beispiel würde das Muster "<span class="red">i)</span>abc.*123" die nicht-Groß-/Kleinschreibung-sensitive Option einschalten und nach einer Zeichenkette suchen, die sich zusammensetzt aus "abc", null oder mehr Vorkommen eines beliebigen Zeichens und "123". Wenn es keine Optionen gibt, ist das ")" optional; zum Beispiel wäre ")abc" das gleiche wie "abc".</p>
    <p><em>NadelRegEx</em> kann keine binären Nullen enthalten, allerdings kann man <code>\x00</code> als Platzhalter für eine binäre Null innerhalb von <em>Heuhaufen</em> verwenden.</p>
  </dd>

  <dt>Ersatz</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p id="BackRef">Eine reine Zeichenkette (also kein regulärer Ausdruck), die jede gefundene Übereinstimmung ersetzen soll. Sie kann Rückreferenzen wie z. B. $1 enthalten; $1 würde die Teilzeichenkette aus dem <em>Heuhaufen</em> einbringen, die zum ersten <a href="../misc/RegEx-QuickRef.htm#subpat">Teilmuster</a> passt. $0 bis $9 sind die einfachsten Rückreferenzen - $0 ist die Teilzeichenkette des gesamten Musters, $1 ist die Teilzeichenkette des ersten Teilmusters, $2 ist die zweite, und so weiter. Bei Rückreferenzen über 9 (und optional auch solche unter 9) müssen die Nummern in geschweiften Klammern gesetzt werden, zum Beispiel: ${10}, ${11}, und so weiter. Bei <a href="RegExMatch.htm#NamedSubPat">benannten Teilmustern</a> müssen die Namen in geschweiften Klammern gesetzt werden; z. B. ${Teilmustername}. Um ein direkt geschriebenes $ anzugeben, schreibt man $$ (dieses Zeichen ist das einzige, das so eine Sonderbehandlung benötigt; alle anderen Zeichen müssen nicht mit einem Escapezeichen versehen werden).</p>
    <p>Um die Groß-/Kleinschreibung eines Teilmusters zu ändern, muss nach $ eines der folgenden Zeichen erfolgen: U oder u (Großschreibung), L oder l (Kleinschreibung), T oder t (Titelschreibung; das heißt, dass bei jedem Wort das erste Zeichen großgeschrieben und die restlichen Zeichen kleingeschrieben sind). Zum Beispiel würden sowohl $U1 als auch $U{1} das erste Teilmuster in eine großgeschriebene Version umwandeln.</p>
    <p>Rückreferenzen, die nicht existieren, und solche, die mit nichts im <em>Heuhaufen</em> übereinstimmen - z. B. eines der Teilmuster in "(abc)|(xyz)" - werden in leere Zeichenketten umgewandelt.</p>
  </dd>

  <dt>AusgabeVarAnzahl</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variables">Variable</a></p>
    <p>Geben Sie eine Variable an, in der die Anzahl gespeichert werden soll, wie oft der Heuhaufen ersetzt wurde (0, wenn keine).</p>
  </dd>

  <dt>Limit</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Lässt man <em>Limit</em> weg, wird standardmäßig -1 verwendet. Dieser Wert bewirkt, dass <strong>alle</strong> gefundenen Vorkommen des Musters in <em>Heuhaufen</em> ersetzt werden. Ansonsten kann man angeben, wie oft der Heuhaufen ersetzt werden soll. Der <em>Heuhaufen</em>-Bereich rechts neben der letzten Ersetzung bleibt unverändert.</p>
  </dd>

  <dt>Startposition</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Lässt man <em>Startposition</em> weg, wird standardmäßig 1 verwendet (das erste Zeichen von <em>Heuhaufen</em>). Ansonsten kann eine 2 angegeben werden, um beim zweiten Zeichen zu beginnen, eine 3, um beim dritten Zeichen zu beginnen, und so weiter. Wenn <em>Startposition</em> die Länge von <em>Heuhaufen</em> überschreitet, beginnt die Suche bei einer leeren Zeichenkette am <em>Heuhaufen</em>-Ende (wodurch nichts ersetzt werden kann).</p>
    <p>Geben Sie eine negative <em>Startposition</em> an, um die Suche auf dieser Position von rechts aus gezählt zu beginnen. Zum Beispiel würde -1 beim letzten Zeichen und -2 beim vorletzten Zeichen beginnen. Wenn <em>Startposition</em> das linke <em>Heuhaufen</em>-Ende überschreitet, wird der gesamte <em>Heuhaufen</em> durchsucht.</p>
    <p>Egal welchen Wert man als <em>Startposition</em> verwendet - der Rückgabewert ist immer eine komplette Kopie von <em>Heuhaufen</em>; der einzige Unterschied könnte sein, dass mehr von seiner linken Seite unverändert bleibt, verglichen zu den Auswirkungen, wenn die <em>Startposition</em> eine 1 wäre.</p>
  </dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
<p>Diese Funktion gibt eine Version von <em>Heuhaufen</em> zurück, deren Inhalte von der Operation ersetzt wurden. Wenn nichts ersetzt werden konnte, wird <em>Heuhaufen</em> unverändert zurückgegeben.</p>

<h2 id="Errors">Fehler</h2>
<p>Eine <a href="Throw.htm#Exception">Ausnahme</a> wird ausgelöst, wenn:</p>
<ul>
  <li>das Suchmuster einen Syntaxfehler enthält; oder</li>
  <li>ein Fehler während der <em>Ausführung</em> des regulären Ausdrucks auftrat.</li>
</ul>
<p>Siehe <a href="RegExMatch.htm#Errors">RegExMatch</a>, um mehr darüber zu erfahren.</p>

<h2>Optionen</h2>
<p>Unter den <a href="../misc/RegEx-QuickRef.htm#Options">Optionen</a> finden Sie Modifikatoren wie z. B. "<span class="red">i)</span>abc", der die Groß-/Kleinschreibung-Sensitivität im Muster "abc" ausschalten würde.</p>
<h2>Performance</h2>
<p>Um einfache Teilzeichenketten zu ersetzen, nutzt man <a href="StrReplace.htm">StrReplace</a>, weil es schneller als RegExReplace ist.</p>
<p>Wenn Ihnen die maximale Anzahl an Ersetzungen bekannt ist, können Sie die Performance durch Einfügen dieses Wertes in den <em>Limit</em>-Parameter verbessern, weil die Suche früh stoppen kann (dies könnte auch die Speicherauslastung auf dem System während der Operation reduzieren). Wenn Sie beispielsweise wissen, dass nur eine Übereinstimmung am Anfang einer langen Zeichenkette sein kann, könnten Sie ein Limit von 1 angeben.</p>
<p>Um die Performance zu verbessern, werden die 100 zuletzt verwendeten regulären Ausdrücke zwischengespeichert (in kompilierter Form).</p>
<p>Die <a href="../misc/RegEx-QuickRef.htm#Study">S-Option</a> kann manchmal die Performance eines regulären Ausdrucks verbessern, der häufig verwendet wird (z. B. in einer Schleife).</p>
<h2>Bemerkungen</h2>
<p>Die meisten Zeichen wie abc123 können direkt in einem regulären Ausdruck verwendet werden. Bei den Zeichen <strong>\.*?+[{|()^$</strong> muss man allerdings einen umgekehrten Schrägstrich davorsetzen, um sie als direkt geschriebenen Text zu behandeln. Zum Beispiel wäre <strong>\.</strong> ein direkt geschriebener Punkt und <strong>\\</strong> ein direkt geschriebener umgekehrter Schrägstrich. Mithilfe von \Q...\E kann eine komplette Zeichenkette angegeben werden, ohne darin ein Zeichen mit einem umgekehrten Schrägstrich versehen zu müssen. Zum Beispiel: <code>\QDirekt geschriebener Text\E</code>.</p>
<p>Innerhalb eines regulären Ausdrucks kann bei bestimmten Sonderzeichen wie Tab und Newline das verwendete Escapezeichen sowohl ein umgekehrtes Häkchen (`) als auch ein umgekehrter Schrägstrich (\) sein. Zum Beispiel ist `t das gleiche wie \t.</p>
<p>Um die Grundlagen von regulären Ausdrücken kennenzulernen (oder das Gedächtnis ein wenig aufzufrischen), siehe <a href="../misc/RegEx-QuickRef.htm">RegEx-Kurzübersicht</a>.</p>
<h2>Siehe auch</h2>
<p><a href="RegExMatch.htm">RegExMatch</a>, <a href="../misc/RegEx-QuickRef.htm">RegEx-Kurzübersicht</a>, <a href="../misc/RegExCallout.htm">Callouts in regulären Ausdrücken</a>, <a href="StrReplace.htm">StrReplace</a>, <a href="InStr.htm">InStr</a></p>
<p>Häufige Quellen von Textdaten: <a href="FileRead.htm">FileRead</a>, <a href="Download.htm">Download</a>, <a href="../misc/Clipboard.htm">Clipboard</a>, <a href="GuiControls.htm#Edit">GUI-Eingabefelder</a></p>
<h2>Beispiele</h2>
<p>Allgemeine RegEx-Beispiele finden Sie unter <a href="../misc/RegEx-QuickRef.htm">RegEx-Kurzübersicht</a>.</p>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>MsgBox RegExReplace("abc123123", "123$", "xyz")  <em>; Zeigt "abc123xyz" an, weil durch $ eine Übereinstimmung nur am Ende vorkommen darf.</em>
MsgBox RegExReplace("abc123", "i)^ABC")  <em>; Zeigt "123" an, weil eine Übereinstimmung aufgrund der nicht-Groß-/Kleinschreibung-sensitiven Option möglich gemacht wurde.</em>
MsgBox RegExReplace("abcXYZ123", "abc<span class="red">(.*)</span>123", "aaa<span class="red">$1</span>zzz")  <em>; Zeigt "aaaXYZzzz" mithilfe der <a href="#BackRef">Rückreferenz</a> <span class="red">$1</span> an.</em>
MsgBox RegExReplace("abc123abc456", "abc\d+", "", AnzahlErsetzungen)  <em>; Zeigt eine leere Zeichenkette an und speichert eine 2 in AnzahlErsetzungen.</em></pre>
</div>

</body>
</html>
