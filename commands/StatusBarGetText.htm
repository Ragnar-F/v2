<!DOCTYPE HTML>
<html lang="de">
<head>
<title>StatusbarGetText - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die StatusbarGetText-Funktion ermittelt den Text einer Standard-Statusleiste." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>StatusBarGetText</h1>

<p>Ermittelt den Text einer Standard-Statusleiste.</p>

<pre class="Syntax">Text := <span class="func">StatusBarGetText</span>(<span class="optional">Bereichsnummer, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme</span>)</pre>
<h2>Parameter</h2>
<dl>

  <dt>Bereichsnummer</dt>
  <dd><p>Die Nummer des Leistenbereichs, dessen Text abgerufen werden soll. Fehlt dieser Parameter oder ist er leer, gilt standardmäßig 1, das der meist interessanteste Bereich ist.</p></dd>

  <dt>Fenstertitel</dt>
  <dd><p>Der Titel oder andere Möglichkeiten zum Identifizieren des Zielfensters. Weitere Informationen finden Sie auf der Seite <a href="../misc/WinTitle.htm">Fenstertitel-Parameter &amp; Zuletzt Gefundenes Fenster</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>Eine Zeichenkette, die in einem der Textelemente des Zielfensters enthalten ist (eventuell vorhandene Textelemente können mit dem mitgelieferten Windows Spy Tool aufgedeckt werden). Versteckte Textelemente werden nur erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet ist.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
<p>Diese Funktion gibt den Text der Statusleiste zurück. Wenn der Text leer ist oder nicht abgerufen werden kann, wird eine leere Zeichenkette zurückgegeben und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt.</p>

<h2>ErrorLevel</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h2>Bemerkungen</h2>
<p>Diese Funktion versucht, die erste <em>Standard-Statusleiste</em> eines Fensters zu lesen (typisches Steuerelement von Microsoft: msctls_statusbar32). Einige Programme verwenden ihre eigenen Statusleisten oder spezielle Versionen des Microsoft-Steuerelements - in diesem Fall kann der Text nicht abgerufen werden.</p>
<p>Anstatt diese Funktion in einer Schleife zu verwenden, ist es besser, <a href="StatusBarWait.htm">StatusBarWait</a> zu verwenden, weil es Optimierungen beinhaltet, die einen Overhead durch mehrfaches Aufrufen von StatusBarGetText verhindern.</p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>

<h2>Siehe auch</h2>
<p><a href="StatusBarWait.htm">StatusBarWait</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a></p>
<h2>Beispiel</h2>
<pre class="NoIndent">AbgerufenerText := StatusBarGetText(1, "Suchergebnisse")
if InStr(AbgerufenerText, "Gefunden")
    MsgBox "Suchergebnisse wurden gefunden."</pre>

</body>
</html>
