<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Throw - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Throw-Anweisung signalisiert das Vorkommen eines Fehlers. Dieses Signal kann mit einer Try-Catch-Anweisung abgefangen werden." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Throw</h1>

<p>Signalisiert das Vorkommen eines Fehlers. Dieses Signal kann mit einer <a href="Try.htm">Try</a>-<a href="Catch.htm">Catch</a>-Anweisung abgefangen werden.</p>

<pre class="Syntax"><span class="func">Throw</span> <span class="optional">Wert</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Wert</dt>
  <dd><p>Ein Wert, der ausgelöst werden soll; typischerweise ein <a href="../objects/Error.htm">Error</a>-Objekt. Zum Beispiel:</p>
<pre>throw ValueError("Parameter #1 ungültig", -1, derSchlechteParam)</pre>
      <p>Da dieser Parameter ein <a href="../Variables.htm#Expressions">Ausdruck</a> ist, sind alle folgenden Zeilen ebenfalls gültig:</p>
<pre>throw 3
throw "direkt geschriebene Zeichenkette"
throw MeineVar
throw i + 1
throw { what: "Benutzerdefinierter Fehler", file: A_LineFile, line: A_LineNumber } <em>; Übergibt ein <a href="../objects/Object.htm">Objekt</a></em></pre>
<p>Lässt man diesen Parameter weg, wird ein <a href="../objects/Error.htm">Error</a> mit einer Standardmeldung ausgelöst.</p>
</dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Das Leer- oder Tabulatorzeichen nach <code>throw</code> ist optional, wenn der Ausdruck in runden Klammern gesetzt ist, wie z. B. <code>throw(Error())</code>.</p>
<p>Wenn <a href="Try.htm">Try</a>/<a href="Catch.htm">Catch</a> verwendet wird, wird <em>Wert</em> dem AusgabeVar von <a href="Catch.htm">Catch</a> zugewiesen.</p>
<p>Wenn <a href="Try.htm">Try</a> nicht verwendet wird (oder mit <a href="Finally.htm">Finally</a>, aber ohne <a href="Catch.htm">Catch</a> verwendet wird), geschieht Folgendes:</p>
<ol>
  <li>Alle aktiven <a href="OnError.htm">OnError</a>-Callbacks werden aufgerufen. Jedes Callback kann <em>Wert</em> inspizieren und weitere Callbacks und Standardbehandlungen entweder unterdrücken oder erlauben.</li>
  <li>Standardmäßig wird eine Fehlermeldung angezeigt, welche sich danach richtet, was ausgelöst wurde. Wenn <em>Wert</em> ein <a href="../objects/Object.htm">Object</a> ist und eine Werteigenschaft namens <em>Message</em> besitzt, wird deren Wert als Meldung verwendet. Wenn <em>Wert</em> eine nicht-numerische Zeichenkette ist, wird diese als Meldung verwendet. In allen anderen Fällen wird eine Standardmeldung verwendet. Wenn <em>Wert</em> numerisch ist, wird es unterhalb der Standardmeldung angezeigt.</li>
</ol>

<h2 id="Related">Siehe auch</h2>
<p><a href="../objects/Error.htm">Error-Objekt</a>, <a href="Try.htm">Try</a>, <a href="Catch.htm">Catch</a>, <a href="Finally.htm">Finally</a>, <a href="OnError.htm">OnError</a></p>

<h2 id="Examples">Beispiele</h2>
<p>Siehe <a href="Try.htm#Examples">Try</a>.</p>

</body>
</html>
