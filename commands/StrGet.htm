<!DOCTYPE HTML>
<html lang="de">
<head>
<title>StrGet - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die StrGet-Funktion kopiert eine Zeichenkette von einer Speicheradresse unter Beachtung des angegebenen Zeichensatzes." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>StrGet</h1>

<p>Kopiert eine Zeichenkette aus einem Speicherbereich unter Beachtung eines bestimmten Zeichensatzes.</p>

<pre class="Syntax">Zeichenkette := <span class="func">StrGet</span>(Adresse <span class="optional">, Länge</span> <span class="optional">, Codierung := <i>Keine</i></span>)</pre>
<h2>Parameter</h2>
<dl>

  <dt>Zeichenkette</dt>
  <dd><p>Eine beliebige Zeichenkette. Zahlen werden auch akzeptiert.</p></dd>

  <dt>Adresse</dt>
  <dd><p>Die Adresse, wo die Zeichenkette gelesen werden soll.</p></dd>

  <dt>Länge</dt>
  <dd><p>Die maximale Anzahl der zu lesenden Zeichen, einschließlich des Null-Terminators, falls notwendig.</p>
  <p>Standardmäßig extrahiert StrGet eine Zeichenkette nur bis zu einer binären Null. Wenn der Wert in <em>Länge</em> negativ ist, wird sein absoluter Wert die genaue Anzahl der Zeichen bestimmen, die umgewandelt werden sollen, einschließlich aller binären Nullen, die die Zeichenkette enthalten könnte - das heißt, dass das Ergebnis immer eine Zeichenkette mit exakt dieser Länge sein wird.</p></dd>

  <dt>Codierung</dt>
  <dd><p>Die Quellcodierung; zum Beispiel: <code>"UTF-8"</code>, <code>"UTF-16"</code> oder <code>"CP936"</code>. Sind <em>Adresse</em> und <em>Länge</em> nicht angegeben, müssen numerische Identifikatoren mit "CP" vorangestellt werden. Geben Sie eine leere Zeichenkette oder <code>"CP0"</code> an, um den Standard-ANSI-Zeichensatz des Systems zu nutzen.</p></dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
<p>Diese Funktion gibt die Zeichenkette auf der angegebenen Adresse zurück, nach Durchführen notwendiger Umwandlungen.</p>

<h2>Bemerkungen</h2>
<p>Beachten Sie, dass der Rückgabewert immer in der <a href="../Compat.htm#Format">nativen Codierung</a> von der aktuell verwendeten Version von AutoHotkey ist, wohingegen <i>Codierung</i> die Codierung der Zeichenkette spezifiziert, die von der angegebenen <i>Adresse</i> gelesen wird. Wenn keine <em>Codierung</em> angegeben ist, wird die Zeichenkette gemessen oder kopiert, ohne dass eine Umwandlung stattfindet.</p>
<p>Wenn eine Umwandlung zwischen den Zeichensätzen notwendig ist, könnte die erforderliche Puffergröße von der Größe der Quellzeichenkette abweichen.</p>
<p>Es ist möglich, <em>Länge</em> oder <em>Codierung</em> direkt nach <em>Adresse</em> anzugeben, aber in diesem Fall darf <em>Codierung</em> nicht numerisch sein:</p>
<pre>Zkette := StrGet(Adresse, "cp0")     <em>; OK</em>
Zkette := StrGet(Adresse, Länge, 0) <em>; OK</em>
Zkette := StrGet(Adresse, 0)         <em>; Fehler</em></pre>

<h2>Siehe auch</h2>
<p><a href="StrPut.htm">StrPut</a>, <a href="../Compat.htm">Skript-Kompatibilität</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="VarSetCapacity.htm">VarSetCapacity</a></p>

</body>
</html>
