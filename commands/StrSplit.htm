<!DOCTYPE HTML>
<html>
<head>
<title>StrSplit</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>StrSplit</h1>

<p>Teilt eine Zeichenkette in mehreren Teilzeichenketten auf, basierend auf die angegebenen Trennzeichen, und speichert sie in ein <a href="../Objects.htm#Usage_Simple_Arrays">Array</a>.</p>

<pre class="Syntax">Array := StrSplit(Zeichenkette [, Trennzeichen, ZuEntfernendeZeichen])</pre>
<h3>Parameter</h3>
<dl>

  <dt>Zeichenkette</dt>
  <dd><p>Eine Zeichenkette, die aufgeteilt werden soll.</p></dd>

  <dt>Trennzeichen</dt>
  <dd><p>Fehlt dieser Parameter oder ist er leer, wird jedes Zeichen der eingehenden Zeichenkette als einzelne Teilzeichenkette behandelt.</p>
      <p>Ansonsten kann <em>Trennzeichen</em> entweder eine einzelne Zeichenkette oder ein Array mit Zeichenketten sein, um zu bestimmen, wo die Abgrenzungen zwischen den Teilzeichenketten erfolgen sollen. Da die Trennzeichen nicht zu den Teilzeichenketten gehören, sind sie nie im Rückgabewert enthalten. Befindet sich außerdem nichts zwischen einem Paar von Trennzeichen innerhalb der eingehenden Zeichenkette, wird das entsprechende Array-Element leer sein.</p>      
      <p>Zum Beispiel: <code>"`,"</code> würde die Zeichenkette jeweils bei einem Komma teilen. Ebenso würde <code>[A_Tab, A_Space]</code> jedesmal ein neues Array-Element erstellen, wenn ein Leer- oder Tabulatorzeichen in der eingehenden Zeichenkette vorkommt.</p>
      </dd>

  <dt>ZuEntfernendeZeichen</dt>
  <dd><p>Eine optionale Liste von Zeichen (Unterscheidung zwischen Groß- und Kleinschreibung), die jeweils am Anfang und Ende eines Array-Elements weggelassen werden sollen. Wenn <em>ZuEntfernendeZeichen</em> zum Beispiel <code>" `t"</code> ist, werden Leer- oder Tabulatorzeichen jeweils am Anfang und Ende (aber nicht in der Mitte) eines Elements entfernt.</p>
    <p>Falls <em>Trennzeichen</em> leer ist, kennzeichnet <em>ZuEntfernendeZeichen</em>, welche Zeichen im Array weggelassen werden sollen.</p>
    </dd>

</dl>

<h3>Bemerkungen</h3>
<p>Leerraumzeichen wie Leer- und Tabulatorzeichen werden beibehalten, sofern sie selbst keine <em>Trennzeichen</em> sind oder in <em>ZuEntfernendeZeichen</em> vorkommen. Tabulator- und Leerzeichen können mithilfe von <a href="Trim.htm">Trim</a> an beiden Enden jeder Variable entfernt werden. Zum Beispiel: var := Trim(var)</p>
<p>Um eine Zeichenkette mit kommagetrennten Werten (CSV-Format) aufzuteilen, ist es sinnvoll, stattdessen eine <a href="LoopParse.htm">Parsende Schleife</a> zu verwenden, da sie über eine vordefinierte CSV-Handhabung verfügt.</p>
<p>Bevor die Felder aufgeteilt werden, können sie mit dem <a href="Sort.htm">Sort</a>-Befehl neu angeordnet werden.</p>
<p>Wenn die Teilzeichenketten nicht dauerhaft im Arbeitsspeicher vorhanden sein müssen, solltest du in Betracht ziehen, eine <a href="LoopParse.htm">Parsende Schleife</a> zu verwenden. Du könntest dadurch viel Speicherplatz sparen, vor allem, wenn die Zeichenkette sehr lang ist. Zum Beispiel:</p>
<pre>Farben := "rot,grün,blau"
Loop, parse, %Farben%, `,
    MsgBox Farbnummer %A_Index% ist %A_LoopField%.</pre>
<h3>Siehe auch</h3>
<p><a href="LoopParse.htm">Parsende Schleife</a>, <a href="../misc/Arrays.htm">Arrays</a>, <a href="Sort.htm">Sort</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="InStr.htm">InStr</a>, <a href="../Functions.htm#SubStr">SubStr</a>, <a href="../Functions.htm#StrLen">StrLen</a>, <a href="StrLower.htm">StrLower</a>, <a href="StrLower.htm">StrUpper</a>, <a href="StrReplace.htm">StrReplace</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">TestZeichenkette := "Das ist ein Test."
wort_array := StrSplit(TestZeichenkette, A_Space, ".")  <em>; Punkte weglassen.</em>
MsgBox("Das vierte Wort ist " wort_array[4])

Farben := "rot,grün,blau"
FarbArray := StrSplit(Farben, ",")
Loop FarbArray.Length
{
    diese_Farbe := FarbArray[a_index]
    MsgBox, Farbnummer %a_index% ist %diese_Farbe%.
}</pre>

</body>
</html>
