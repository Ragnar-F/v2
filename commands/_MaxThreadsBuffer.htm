<!DOCTYPE HTML>
<html>
<head>
<title>#MaxThreadsBuffer</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>#MaxThreadsBuffer</h1>

<p>Bringt einige oder alle <a href="../Hotkeys.htm">Hotkeys</a> dazu, Tastatureingaben zwischenzuspeichern anstatt zu ignorieren, wenn ihr Grenzwert von <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> erreicht wurde.</p>

<pre class="Syntax"><span class="func">#MaxThreadsBuffer</span> On|Off</pre>
<h3>Parameter</h3>
<dl>

  <dt>On|Off</dt>
  <dd><p><strong>On</strong>: Alle Hotkey-Subroutinen, die sich zwischen hier und der nächsten Direktive <code>#MaxThreadsBuffer ON</code> befinden, werden die Tastatureingaben des Hotkeys zwischenspeichern anstatt ignorieren, wenn der Grenzwert von <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> erreicht wurde.</p>
    <p><strong>Off</strong>: Standardverhalten. Das Drücken eines Hotkeys wird ignoriert, wenn dieser Hotkey bereits seine maximale Anzahl an Threads ausführt (üblicherweise 1, kann aber mit <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> geändert werden).</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Diese Direktive wird kaum genutzt, weil ihre Art der Zwischenspeicherung (standardmäßig OFF) in der Regel mehr schadet als nützt. Wenn man beispielsweise ein Hotkey aus Versehen zweimal drückt, während diese Direktive aktiviert ist, würde die Subroutine des Hotkeys automatisch das zweite Mal ausgeführt werden, falls sein erster <a href="../misc/Threads.htm">Thread</a> in weniger als 1 Sekunde ausgeführt wird (diese Art der Zwischenspeicherung wird absichtlich nach einer Sekunde ablaufen). Beachte, dass AutoHotkey mehrere unterschiedliche Methoden hat, um Hotkeys zwischenzuspeichern (z. B. <code><a href="Thread.htm">Thread Interrupt</a></code> und <code><a href="Critical.htm">Critical</a></code>). Genau aus diesem Grund ist diese Direktive standardmäßig deaktiviert.</p>
<p>Der Hauptnutzen dieser Direktive ist es, die Reaktionsfähigkeit der Autowiederholungsfunktion der Tastatur zu erhöhen. Hält man beispielsweise ein Hotkey gedrückt, dessen <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>-Einstellung auf 1 (Standardwert) gesetzt ist, werden alle eingehenden Tastatureingaben ignoriert, während diese Hotkey-Subroutine läuft. Sobald die Subroutine endet, muss sie folglich auf die nächste eingehende Auto-Wiederholung der Tastatureingabe warten, das 50 ms oder länger dauern kann, weil sie zwischen den Tastatureingaben des Auto-Wiederholungs-Zyklus gefangen ist. Diese Verzögerung von 50 ms kann verhindert werden, wenn man diese Direktive für jeden Hotkey aktiviert, der die bestmögliche Reaktionszeit benötigt, während er automatisch wiederholt wird.</p>
<p>Diese Direktive sollte, wie jede andere auch, nicht wie ein Befehl im Skript positioniert werden (beispielsweise macht es keinen Sinn, die Direktive in eine Subroutine zu setzen). Positioniere diese Direktive stattdessen direkt vor dem Hotkey, der als erstes von ihr beeinflusst werden soll.</p>
<h3>Siehe auch</h3>
<p><a href="_MaxThreads.htm">#MaxThreads</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="Critical.htm">Critical</a>, <a href="Thread.htm">Thread (Befehl)</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="_MaxHotkeysPerInterval.htm">#MaxHotkeysPerInterval</a>, <a href="_HotkeyInterval.htm">#HotkeyInterval</a>, <a href="ListHotkeys.htm">ListHotkeys</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#MaxThreadsBuffer On
#x::MsgBox, Dieser Hotkey wird diese Art der Zwischenspeicherung verwenden.
#y::MsgBox, Dieser Hotkey auch.
#MaxThreadsBuffer Off
#z::MsgBox, Aber dieser nicht.</pre>

</body>
</html>
