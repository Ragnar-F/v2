<!DOCTYPE HTML>
<html>
<head>
<title>RegRead</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>RegRead</h1>

<p>Liest einen Wert aus der Registry.</p>

<pre class="Syntax">AusgabeVar := <span class="func">RegRead</span>(<span class="optional">KeyName, Wertname</span>)
</pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Variable, in der der abgerufene Wert gespeichert werden soll. Falls der Wert nicht abgerufen werden kann, wird die Variable leer gemacht und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt.</p></dd>

  <dt>KeyName</dt>
  <dd><p>Der vollständige Name des Registry-Keys.</p>
  <p>Dieser Parameter muss mit HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT oder HKEY_CURRENT_CONFIG beginnen (oder jeweils die Abkürzung, wie z. B. HKLM). Um den Zugriff auf eine <a href="LoopReg.htm#remote">Remote-Registry</a> zu ermöglichen, muss der Computername und ein Doppelpunkt wie folgt vorangestellt werden: \\workstation01\HKEY_LOCAL_MACHINE</p>
  <p><em>KeyName</em> kann nur weggelassen werden, wenn eine <a href="LoopReg.htm">Registry-Schleife</a> läuft - in diesem Fall gilt standardmäßig der Key des aktuellen Schleifenelements. Wenn das Element ein Subkey ist, wird standardmäßig der vollständige Name dieses Subkeys benutzt. Wenn das Element ein Wert ist, gilt für <em>Wertname</em> standardmäßig der Name dieses Wertes, was aber überschrieben werden kann.</p></dd>

  <dt>Wertname</dt>
  <dd><p>Der Name des Wertes, der abgerufen werden soll. Fehlt dieser Parameter ist er leer, wird der Standardwert des Keys abgerufen (außer wie oben erwähnt). Der Standardwert wird im RegEdit-Tool als "(Standard)" angezeigt. Wenn es keinen Standardwert gibt (also wenn das RegEdit-Tool "Wert nicht festgelegt" anzeigt), wird <em>AusgabeVar</em> leer gemacht und ErrorLevel auf 1 gesetzt.</p></dd>

</dl>
<h3>ErrorLevel</h3>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 (z. B. nicht-existierender Key oder Wert) oder bei Erfolg auf 0 gesetzt.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> wird auf das Ergebnis der Systemfunktion GetLastError() gesetzt.</p>
<h3>Bemerkungen</h3>
<p>Zurzeit werden nur die folgenden Werttypen unterstützt: REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD und REG_BINARY.</p>
<p>REG_DWORD-Werte werden immer als positive Dezimalzahlen ausgedrückt.</p>
<p>Beim Lesen eines REG_BINARY-Keys ist das Ergebnis eine Zeichenkette mit hexadezimalen Zeichen. Zum Beispiel würde ein REG_BINARY-Wert von 01,a9,ff,77 als Zeichenkette 01A9FF77 gelesen werden.</p>
<p>Beim Lesen eines REG_MULTI_SZ-Keys endet jede Komponente mit einem Zeilenumbruchszeichen (`n). Gibt es keine Komponenten, wird <em>AusgabeVar</em> leer gemacht. In <a href="FileSelect.htm">FileSelect</a> findest du ein Beispiel, wie einzelne Komponenten aus <em>AusgabeVar</em> extrahieren werden können.</p>
<p>Mit der <a href="LoopReg.htm">Registry-Schleife</a> können mehrere Registry-Keys und -Werte abgerufen und bearbeitet werden.</p>
<p>In den Bemerkungen zur <a href="LoopReg.htm#remote">Registry-Schleife</a> findest du Hinweise, wie man auf die Registry eines Remotecomputers zugreifen kann.</p>
<p>Mit <a href="SetRegView.htm">SetRegView</a> können Einträge von den 64-Bit-Bereichen der Registry in einem 32-Bit-Skript oder umgekehrt gelesen und geschrieben werden.</p>

<h3>Siehe auch</h3>
<p><a href="RegDelete.htm">RegDelete</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="LoopReg.htm">Registry-Schleife</a>, <a href="SetRegView.htm">SetRegView</a>, <a href="IniRead.htm">IniRead</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent"><em>; Beispiel: Ermittelt den Pfad des Programm-Ordners.

; Die nachfolgende Zeile stellt sicher, dass die 64-Bit-Version des Programm-Ordners zurückgegeben wird, wenn das Betriebssystem 64-Bit ist und das Skript nicht.</em>
<a href="SetRegView.htm">SetRegView</a> 64  <em>; Benötigt v1.1.08+</em>

RegRead, AusgabeVar, HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion, ProgramFilesDir
MsgBox, Programme sind in: %AusgabeVar%

<em>; Ein anderer Weg, um den Pfad des Programm-Ordners zu ermitteln:</em>
EnvGet AusgabeVar, % <a href="../Variables.htm#Is64bitOS">A_Is64bitOS</a> ? "ProgramW6432" : "ProgramFiles"
MsgBox, Programme sind in: %AusgabeVar%
</pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; Das folgende Beispiel ermittelt den TYP eines Registry-Wertes (z. B. REG_SZ oder REG_DWORD).</em>
MsgBox % RegKeyTyp("HKCU", "Environment", "TEMP")
return

RegKeyTyp(Rootkey, Subkey, Wertname)  <em>; Diese Funktion gibt den Typ des angegebenen Wertes zurück.</em>
{
    Loop, Reg, %Rootkey%\%Subkey%
        if (A_LoopRegName = Wertname)
            return A_LoopRegType
    return "Fehler"
}</pre>

</body>
</html>
