<!DOCTYPE HTML>
<html lang="de">
<head>
<title>SoundSet - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die SoundSet-Funktion ändert diverse Einstellungen eines Audiogeräts (Stummschalten, Gesamtlautstärke und so weiter)." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>SoundSet</h1>

<p>Ändert diverse Einstellungen eines Audiogeräts (Stummschalten, Gesamtlautstärke und so weiter).</p>

<pre class="Syntax"><span class="func">SoundSet</span> Einstellung <span class="optional">, Komponententyp, Kontrolltyp, Gerätenummer</span></pre>
<h2>Parameter</h2>
<dl>

  <dt>Einstellung</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#numbers">Float</a></p>
    <p>Eine Prozentzahl zwischen -100 und 100 (kann eine Floating-Point-Zahl sein). Wenn die Zahl mit einem Plus- oder Minuszeichen beginnt, wird die <strong>aktuelle Einstellung</strong> mit der angegebenen Menge nach oben oder nach unten reguliert. Andernfalls wird die <em>Einstellung</em> explizit gesetzt.</p>
    <p>Bei <em>Kontrolltypen</em> mit nur zwei möglichen Einstellungen (ONOFF, MUTE, MONO, LOUDNESS, STEREOENH und BASSBOOST) bewirkt eine positive Zahl, dass die Einstellung aktiviert wird, und eine 0, dass sie deaktiviert wird. Wenn die Zahl allerdings mit einem Plus- oder Minuszeichen beginnt, wird die Einstellung umgeschaltet (jeweils auf dem entgegengesetzten Zustand).</p>
  </dd>

  <dt>Komponententyp</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Wenn dieser Parameter weggelassen wird oder leer ist, wird standardmäßig das Wort MASTER verwendet. Ansonsten kann eines der folgenden Wörter angegeben werden: MASTER (gleichbedeutend mit SPEAKERS), DIGITAL, LINE, MICROPHONE, SYNTH, CD, TELEPHONE, PCSPEAKER, WAVE, AUX, ANALOG, HEADPHONES oder N/A. Wenn das Audiogerät den angegebenen <em>Komponententyp</em> nicht hat, wird ErrorLevel das Problem kennzeichnen.</p>
    <p>Die Komponente mit der Bezeichnung Auxiliary muss bei einigen Mixern eventuell via ANALOG statt AUX angesteuert werden.</p>
    <p>Wenn ein Gerät mehr als eine Instanz vom <em>Komponententyp</em> hat (zum Beispiel zwei vom Typ LINE), enthält der erste Typ für gewöhnlich die Wiedergabeeinstellungen und der zweite Typ die Aufnahmeeinstellungen. Um anstelle der ersten Instanz auf eine andere zuzugreifen, müssen Sie nach diesem Parameter ein Doppelpunkt und eine Nummer anfügen. Zum Beispiel: <code>Analog:2</code> ist die zweite Instanz der analogen Komponente.</p>
  </dd>

  <dt>Kontrolltyp</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Wenn dieser Parameter weggelassen wird oder leer ist, wird standardmäßig das Wort VOLUME verwendet. Ansonsten kann eines der folgenden Wörter angegeben werden: VOLUME (oder VOL), ONOFF, MUTE, MONO, LOUDNESS, STEREOENH, BASSBOOST, PAN, QSOUNDPAN, BASS, TREBLE, EQUALIZER oder die Nummer eines gültigen Kontrolltyps (siehe <a href="#Ex">Soundkartenanalyse-Skript</a>). Wenn der <em>Komponententyp</em> den angegebenen <em>Kontrolltyp</em> nicht hat, wird ErrorLevel das Problem kennzeichnen.</p>
    <p class="note"><strong>Hinweis</strong>: Soundgeräte unterstützen üblicherweise nur VOLUME (oder VOL) und MUTE, auch wenn andere je nach Windows-Version und dem Soundgerät verfügbar sein könnten.</p>
  </dd>

  <dt>Gerätenummer</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Eine Nummer zwischen 1 und Gesamtanzahl an unterstützten Geräten. Lässt man diesen Parameter weg, wird standardmäßig 1 verwendet (das erste Audiogerät), oder in Windows Vista oder höher das standardmäßig verwendete Wiedergabegerät des Systems. Das <a href="#Ex">Soundkartenanalyse-Skript</a> könnte dabei helfen, welche Nummer verwendet werden soll.</p>
  </dd>

</dl>
<h2>ErrorLevel</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 0 gesetzt, wenn die Funktion erfolgreich war. Ansonsten wird es auf einen der folgenden Sätze gesetzt:</p>
<ul>
    <li>Invalid Control Type or Component Type (ungültiger Kontrolltyp oder Komponententyp)</li>
    <li>Can't Open Specified Mixer (der angegebene Mixer konnte nicht geöffnet werden)</li>
    <li>Mixer Doesn't Support This Component Type (der Mixer unterstützt nicht diesen Komponententyp)</li>
    <li>Mixer Doesn't Have That Many of That Component Type (der Mixer hat nicht so viele Komponententypen)</li>
    <li>Component Doesn't Support This Control Type (die Komponente unterstützt nicht diesen Kontrolltyp)</li>
    <li>Can't Get Current Setting (aktuelle Einstellung konnte nicht ermittelt werden)</li>
    <li>Can't Change Setting (aktuelle Einstellung konnte nicht geändert werden)</li>
</ul>
<h2>Bemerkungen</h2>
<p>Für mehr Funktionalität und feinere Audio-Steuerung ist die <a href="http://www.autohotkey.com/board/topic/21984-vista-audio-control-functions/">VA-Bibliothek</a> besser geeignet.</p>
<p>Alternativ kann man sein Skript dazu bringen, lautstärke-spezifische Tastatureingaben zu senden, um die Gesamtlautstärke des Systems zu ändern. Zum Beispiel:</p>
<pre>Send "{Volume_Up}"  <em>; Erhöht die Gesamtlautstärke um 1 Stufe (normalerweise 5%).</em>
Send "{Volume_Down 3}"  <em>; Verringert die Gesamtlautstärke um 3 Stufen.</em>
Send "{Volume_Mute}"  <em>; Gesamtlautstärke stumm schalten bzw. Stummschaltung aufheben.</em></pre>
<p>Um den Leistungsumfang der installierten Audiogeräte (Mixer) zu ermitteln -- z. B. verfügbare Komponenten- und Kontrolltypen -- führt man das <a href="#Ex">Soundkartenanalyse-Skript</a> aus.</p>
<p>Windows 2000/XP/2003: Wenn SoundSet die Lautstärke einer Komponente ändert, werden alle Kanäle dieser Komponente (zum Beispiel der linke und rechte Kanal) auf die gleiche Stufe gesetzt. Das heißt, dass jede zuvor eingestellte außermittige "Balance" verloren geht.</p>
<p>Windows Vista und höher: SoundSet versucht, die vorhandene Balance beizubehalten, sobald sich die Lautstärke ändert.</p>
<p>Mit <a href="SoundGet.htm">SoundGet</a> kann der aktuelle Wert einer Einstellung abgerufen werden.</p>
<h2>Siehe auch</h2>
<p><a href="SoundGet.htm">SoundGet</a>, <a href="SoundPlay.htm">SoundPlay</a></p>
<h2>Beispiele</h2>
<pre class="NoIndent"><em>; EINFACHE BEISPIELE:</em>
SoundSet 50  <em>; Setzt die Gesamtlautstärke auf 50%</em>
SoundSet "+10"  <em>; Erhöht die Gesamtlautstärke um 10%</em>
SoundSet -10  <em>; Verringert die Gesamtlautstärke um 10%</em>
SoundSet 1, "Microphone", "Mute"  <em>; Schaltet das Mikrofon auf stumm</em>
SoundSet "+1", , "Mute"  <em>; Schaltet die Stummschaltung um (jeweils auf den entgegengesetzten Zustand)</em>
SoundSet "+20", "Master", "Bass"  <em>; Erhöht die Bassstärke um 20%.</em>
if ErrorLevel
    MsgBox "Die BASS-Einstellung wird nicht für MASTER unterstützt."</pre>
<h3 id="Ex">Soundkartenanalyse</h3>
<p>Das folgende Skript kann verwendet werden, um die Fähigkeiten Ihrer Soundkarte zu ermitteln (Komponententypen und Kontrolltypen). Es zeigt die Ergebnisse in einer einfachen ListView an. Alternativ kann man ein Skript für Windows Vista oder höher, das mehr Details bereitstellt (z. B. die Anzeigenamen der Geräte), im folgenden Forumsbeitrag herunterladen: <a href="http://www.autohotkey.com/board/topic/90877-/">http://www.autohotkey.com/board/topic/90877-/</a></p>
<pre class="NoIndent"><em>; Die meisten unten genannten reinen Zahlen gibt es wahrscheinlich nicht in jedem Mixer, allerdings werden sie der Vollständigkeit halber abgefragt.
; Die Zahlen beziehen sich auf folgende Elemente (in Reihenfolge): CUSTOM, BOOLEANMETER, SIGNEDMETER, PEAKMETER,
; UNSIGNEDMETER, BOOLEAN, BUTTON, DECIBELS, SIGNED, UNSIGNED, PERCENT, SLIDER, FADER, SINGLESELECT, MUX,
; MULTIPLESELECT, MIXER, MICROTIME, MILLITIME</em>
Kontrolltypen := "VOLUME,ONOFF,MUTE,MONO,LOUDNESS,STEREOENH,BASSBOOST,PAN,QSOUNDPAN,BASS,TREBLE,EQUALIZER,0x00000000,0x10010000,0x10020000,0x10020001,0x10030000,0x20010000,0x21010000,0x30040000,0x30020000,0x30030000,0x30050000,0x40020000,0x50030000,0x70010000,0x70010001,0x71010000,0x71010001,0x60030000,0x61030000"

Komponententypen := "MASTER,HEADPHONES,DIGITAL,LINE,MICROPHONE,SYNTH,CD,TELEPHONE,PCSPEAKER,WAVE,AUX,ANALOG,N/A"

<em>; Erstellt eine ListView und bereitet diese auf die Hauptschleife vor:</em>
Gui := GuiCreate()
InfoText := Gui.Add("Text", "w400 h400", "Soundkarteninfos werden ermittelt...")
LV := Gui.Add("ListView", "wp hp xp yp", "Komponententyp|Kontrolltyp|Einstellung|Mixer")
LV.Visible := false
LV.ModifyCol(4, "Integer")
Gui.Show

Loop  <em>; Ruft von jedem Mixer, der im System vorkommt, dessen Fähigkeiten ab.</em>
{
    Mixer := A_Index
    Einstellung := SoundGet(,, Mixer)
    if ErrorLevel = "Can't Open Specified Mixer"  <em>; Jeder anderer Fehler kennzeichnet, dass der Mixer vorhanden ist.</em>
        break
    <em>; Ruft von jedem Komponententyp, der in diesem Mixer vorkommt, dessen Instanzen und Kontrolltypen ab:</em>
    For i, Komponente in StrSplit(Komponententypen, ",")
    {
        <em>; Zuerst überprüfen, ob dieser Komponententyp auch im Mixer vorkommt:</em>
        Einstellung := SoundGet(Komponente,, Mixer)
        if ErrorLevel = "Mixer Doesn't Support This Component Type"
            continue  <em>; Startet für den nächsten Komponententyp eine neue Iteration.</em>
        Loop  <em>; Ruft von jeder Instanz dieses Komponententyps dessen Kontrolltypen ab.</em>
        {
            Instanz := A_Index
            <em>; Zuerst überprüfen, ob diese Instanz dieser Instanz auch im Mixer vorkommt:</em>
            Einstellung := SoundGet(Komponente ":" Instanz,, Mixer)
            <em>; Das Überprüfen beider folgenden Fehler erlaubt diesem Skript, auf ältere Betriebssysteme zu laufen:</em>
            if ErrorLevel = "Mixer Doesn't Have That Many of That Component Type"
            || ErrorLevel = "Invalid Control Type or Component Type"
                break  <em>; Keine weiteren Instanzen von diesem Komponententyp.</em>
            <em>; Ermittelt die aktuelle Einstellung von jedem Kontrolltyp, der in dieser Instanz von dieser Komponente vorkommt:</em>
            For i, Kontrolle in StrSplit(Kontrolltypen, ",")
            {
                Einstellung := SoundGet(Komponente ":" Instanz, Kontrolle, Mixer)
                <em>; Das Überprüfen beider folgenden Fehler erlaubt diesem Skript, auf ältere Betriebssysteme zu laufen:</em>
                if ErrorLevel = "Component Doesn't Support This Control Type"
                || ErrorLevel = "Invalid Control Type or Component Type"
                    continue
                if ErrorLevel  <em>; Irgendein unerwarteter Fehler, der demzufolge in den Ergebnissen angezeigt wird.</em>
                    Einstellung := ErrorLevel
                KomponentenZeichenkette := Komponente
                if Instanz &gt; 1
                    KomponentenZeichenkette .= ":" Instanz
                if Einstellung is "float"
                    Einstellung := Format("{:0.2f}", Einstellung)  <em>; Begrenzt die maximale Dezimalstellenanzahl eines Prozentwertes auf 2.</em>
                LV.Add(, KomponentenZeichenkette, Kontrolle, Einstellung, Mixer)
            }  <em>; Für jeden Kontrolltyp.</em>
        }  <em>; Für jede Komponenteninstanz.</em>
    }  <em>; Für jeden Komponententyp.</em>
}  <em>; Für jeden Mixer.</em>

Loop LV.GetCount("Col")  <em>; Passt die Breiten der Spalten an den Inhalt der Reihen an.</em>
    LV.ModifyCol(A_Index, "AutoHdr")

InfoText.Visible := false
LV.Visible := true
return</pre>

</body>
</html>
