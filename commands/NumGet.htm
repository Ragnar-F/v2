<!DOCTYPE HTML>
<html lang="de">
<head>
<title>NumGet - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die NumGet-Funktion gibt eine binäre Nummer zurück, die auf einer bestimmten Adresse + Offset zu finden ist." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>NumGet</h1>
<p>Gibt eine binäre Nummer zurück, die auf einer bestimmten Adresse + Offset zu finden ist.</p>
<pre class="Syntax">Nummer := <span class="func">NumGet</span>(Ziel <span class="optional">, Offset := 0</span><span class="optional">, Typ := "UPtr"</span>)</pre>

<h2>Parameter</h2>
<dl>

  <dt>Ziel</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#objects">Objekt</a>, <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#variables">Variable</a></p>
		<p>Ein <a href="../objects/Buffer.htm">Buffer</a>-ähnliches Objekt, eine Speicheradresse oder eine Variablenreferenz.</p>
    <p>Obwohl ein beliebiges Objekt mit einer <a href="../objects/Buffer.htm#Ptr">Ptr</a>- und <a href="../objects/Buffer.htm#Size">Size</a>-Eigenschaft verwendet werden kann, ist diese Funktion für das native <a href="../objects/Buffer.htm">Buffer</a>-Objekt optimiert. Das Übergeben eines Objekts mit diesen Eigenschaften stellt sicher, dass die Funktion keinen Speicher aus einem ungültigen Bereich liest, was zu Abstürzen oder anderem unvorhersehbaren Verhalten führen kann.</p>
    <p class="warning"><strong>Veraltet:</strong> Wenn <em>Ziel</em> eine Variable wie <code>MeineVar</code> ist und enthält sie eine Zeichenkette (keine reine Zahl), wird die Adresse und Größe des Zeichenkettenpuffers der Variable verwendet. Die Übergabe einer Variable, die eine Zeichenkette enthält, wird in einer zukünftigen Version möglicherweise als Fehler behandelt. <a href="../objects/Buffer.htm">Buffer</a>-Objekte sollten für Strukturen und andere binäre Daten verwendet werden.</p>
    <p>Wenn die Variable eine reine Zahl enthält, wird diese Zahl als Adresse behandelt.</p>
	</dd>

  <dt>Offset</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Eine Zahl (in Bytes), die mit <em>Ziel</em> addiert wird, um die Zieladresse zu bestimmen.</p>
  </dd>

  <dt>Typ</dt>
  <dd>
      <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
      <p>Eine der folgenden Zeichenketten (standardmäßig UPtr, wenn dieser Parameter fehlt):<br>
      UInt, Int, Int64, Short, UShort, Char, UChar, Double, Float, Ptr oder UPtr.</p>
    <p><em>Vorzeichenlose</em> 64-Bit-Integer werden nicht unterstützt, da AutoHotkey's nativer Integer-Typ Int64 ist. Um daher mit Zahlen zu hantieren, die größer gleich 0x8000000000000000 sind, lässt man das U-Präfix weg und interpretiert jeden negativen Wert als großen Integer. Zum Beispiel ist ein Wert von -1 als Int64 eigentlich 0xFFFFFFFFFFFFFFFF, wenn dieser als UInt64 gedacht ist. Bei 64-Bit-Versionen ist UPtr äquivalent zu Int64.</p>
      <p>Diese Typen müssen in Anführungszeichen gesetzt werden, wenn sie als direkt geschriebene Zeichenketten verwendet werden.</p>
      <p>Um mehr darüber zu erfahren, siehe <a href="DllCall.htm#types">DllCall-Typen</a>.</p>
    </dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#numbers">Float</a></p>
<p>Diese Funktion gibt die binäre Nummer auf der angegebenen Adresse + Offset zurück.</p>

<h2>Allgemeine Bemerkungen</h2>
<p>Sind nur zwei Parameter vorhanden, kann der zweite Parameter entweder <em>Offset</em> oder <em>Typ</em> sein. Zum Beispiel wäre <code>NumGet(var, "int")</code> zulässig.</p>
<p>Es wird eventuell eine Ausnahme ausgelöst, wenn die Zieladresse ungültig ist. Allerdings ist es möglich, dass einige ungültige Adressen nicht als solches erkannt werden, was zu unvorhersehbaren Verhalten führen könnte. Die Übergabe eines <a href="../objects/Buffer.htm">Buffer</a>-Objekts anstelle einer Adresse stellt sicher, dass die Zieladresse immer validiert werden kann.</p>

<h2>Siehe auch</h2>
<p><a href="NumPut.htm">NumPut</a>, <a href="DllCall.htm">DllCall</a>, <a href="VarSetCapacity.htm">VarSetCapacity</a></p>


</body>
</html>
