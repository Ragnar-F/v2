<!DOCTYPE HTML>
<html lang="de">
<head>
<title>WinWaitClose - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die WinWaitClose-Funktion wartet, bis keine passenden Fenster mehr gefunden werden." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>WinWaitClose</h1>

<p>Wartet, bis keine passenden Fenster mehr gefunden werden.</p>

<pre class="Syntax"><span class="func">WinWaitClose</span> <span class="optional">Fenstertitel, Fenstertext, Sekunden, Titelausnahme, Textausnahme</span></pre>
<h2>Parameter</h2>
<dl>

  <dt>Fenstertitel</dt>
  <dd><p>Der Titel oder andere Möglichkeiten zum Identifizieren des Zielfensters. Weitere Informationen finden Sie auf der Seite <a href="../misc/WinTitle.htm">Fenstertitel-Parameter &amp; Zuletzt Gefundenes Fenster</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>Eine Zeichenkette, die in einem der Textelemente des Zielfensters enthalten ist (eventuell vorhandene Textelemente können mit dem mitgelieferten Windows Spy Tool aufgedeckt werden). Versteckte Textelemente werden nur erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet ist.</p></dd>

  <dt>Sekunden</dt>
  <dd><p>Wie viele Sekunden gewartet werden sollen, bevor eine Zeitüberschreitung erfolgt und eine 0 zurückgegeben wird. Lassen Sie diesen Parameter weg oder leer, um unendlich lang zu warten. Die Angabe von 0 ist das gleiche wie, als würde man 0.5 angeben.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>Diese Funktion gibt 0 (false) zurück, wenn die Funktion das Zeitlimit überschritten hat, ansonsten 1 (true).</p>

<h2>Bemerkungen</h2>
<p>Wenn keine passenden Fenster vorhanden sind, wartet die Funktion nicht, bis <em>Sekunden</em> abgelaufen sind. Stattdessen wird sie sofort eine 1 zurückgeben und die Ausführung des Skripts fortgesetzt. Umgekehrt kann die Funktion auch nach dem Schließen eines passenden Fensters weiter warten, bis keine passenden Fenster mehr gefunden werden.</p>
<p>Da <code>"A"</code> mit dem jeweils aktiven Fenster übereinstimmt, wartet <code>WinWaitClose "A"</code> normalerweise unendlich lange. Um stattdessen auf das Schließen des aktuell aktiven Fensters zu warten, gibt man dessen Titel oder eindeutige ID wie im folgenden Beispiel an:</p>
<pre>WinWaitClose "ahk_id " WinExist("A")</pre>
<p>WinWaitClose aktualisiert das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a>, wenn es ein passendes Fenster findet. Dies kann zum Beispiel genutzt werden, um das Fenster zu identifizieren oder anzusteuern, nachdem die Funktion das Zeitlimit überschritten hat. Zum Beispiel:</p>
<pre>
GuiCreate("", "Testfenster " Random()).Show("w300 h50")  <em>; Zeigt ein Testfenster.</em>
if !WinWaitClose("Test",, 5)  <em>; Wartet 5 Sekunden, bis es jemand schließt.</em>
{
    MsgBox "Fenster noch nicht geschlossen: " WinGetTitle()
    WinClose  <em>; Schließt das gefundene Fenster von WinWaitClose.</em>
}
</pre>
<p>Während die Funktion in einem Wartezustand ist, können neue <a href="../misc/Threads.htm">Threads</a> via <a href="../Hotkeys.htm">Hotkey</a>, <a href="../objects/Menu.htm">benutzerdefinierte Menüeinträge</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
<p>Wenn ein anderer <a href="../misc/Threads.htm">Thread</a> die Inhalte der Variablen ändert, die als Parameter für diese Funktion verwenden wurden, wird die Funktion die Änderung nicht sehen -- sie wird weiter den Titel und Text verwenden, die ursprünglich in den Variablen vorhanden waren, als die Funktion anfing zu warten.</p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>

<h2>Siehe auch</h2>
<p><a href="WinClose.htm">WinClose</a>, <a href="WinWait.htm">WinWait</a>, <a href="WinWaitActive.htm">WinWaitActive</a>, <a href="WinExist.htm">WinExist</a>, <a href="WinActive.htm">WinActive</a>, <a href="ProcessWaitClose.htm">ProcessWaitClose</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a></p>
<h2>Beispiel</h2>
<pre class="NoIndent">Run "notepad.exe"
WinWait "Unbenannt - Editor"
WinWaitClose  <em>; Wartet, bis das gefundene Fenster von WinWait geschlossen wird.</em>
MsgBox "Editor wurde geschlossen."</pre>

</body>
</html>
