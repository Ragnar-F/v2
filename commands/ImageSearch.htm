<!DOCTYPE HTML>
<html lang="de">
<head>
<title>ImageSearch - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die ImageSearch-Funktion durchsucht einen Bereich des Bildschirms nach einem Bild." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>ImageSearch</h1>

<p>Durchsucht einen Bereich des Bildschirms nach einem Bild.</p>

<pre class="Syntax"><span class="func">ImageSearch</span> AusgabeX, AusgabeY, X1, Y1, X2, Y2, Bilddatei</pre>
<h2>Parameter</h2>
<dl>

  <dt>AusgabeX/Y</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variables">Variable</a></p>
    <p>Namen der Variablen, in denen die Koordinaten X und Y des oberen linken Pixels, wo das Bild auf dem Bildschirm gefunden wurde, gespeichert werden sollen (wenn das Bild nicht gefunden wird, werden diese Variablen leer gemacht). Koordinaten sind relativ zum aktiven Fenster, sofern das nicht mit <a href="CoordMode.htm">CoordMode</a> geändert wurde.</p>
  </dd>

  <dt>X1,Y1</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die X/Y-Koordinaten der oberen linken Ecke des zu durchsuchenden Rechtecks. <strong>Koordinaten sind relativ zum aktiven Fenster, sofern das nicht mit <a href="CoordMode.htm">CoordMode</a> geändert wurde.</strong></p>
  </dd>

  <dt>X2,Y2</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die X/Y-Koordinaten der unteren rechten Ecke des zu durchsuchenden Rechtecks. Koordinaten sind relativ zum aktiven Fenster, sofern das nicht mit <a href="CoordMode.htm">CoordMode</a> geändert wurde.</p>
  </dd>

  <dt>Bilddatei</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Der Dateiname des Bildes. Wenn kein absoluter Pfad angegeben ist, wird das Bild im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Alle Betriebssysteme unterstützen GIF-, JPG-, BMP-, ICO-, CUR- und ANI-Bilder (BMP-Bilder müssen 16-Bit oder höher sein). Folgende Dateitypen sind auch für Symbole geeignet: EXE, DLL, CPL, SCR und andere Typen, die Symbolressourcen enthalten. In Windows XP oder höher werden zusätzliche Bildformate wie PNG, TIF, Exif, WMF und EMF unterstützt. Um Betriebssysteme älter als XP zu unterstützen, kopieren Sie die frei verfügbare GDI+-DLL-Datei von Microsoft in den Ordner von AutoHotkey.exe (bei einem <a href="../Scripts.htm#ahk2exe">kompilierten Skript</a> muss die DLL in den Ordner des Skripts kopiert werden). Die DLL finden Sie auf <a href="http://www.microsoft.com">www.microsoft.com</a> mit Suchbegriffen wie: gdi redistributable</p>
      <p><strong>Optionen</strong>: Null oder mehr der folgenden Zeichenketten, die vor dem Dateinamen angegeben werden können. Die Optionen müssen jeweils mit einem Leer- oder Tabulatorzeichen voneinander getrennt werden. Zum Beispiel: <code>"*2 *w100 *h-1 C:\Hauptlogo.bmp"</code>.</p>
      <p><strong>*IconN</strong>: Um anstelle der ersten Symbolgruppe eine andere in der Datei zu nutzen, müssen Sie <code>*Icon</code> und direkt danach die Gruppennummer angeben. Zum Beispiel würde <code>*Icon2</code> das Standardsymbol aus der zweiten Symbolgruppe laden.</p>    
    <p><strong>*n</strong> (Variation): Geben Sie für <strong>n</strong> eine Nummer zwischen 0 und 255 an, um den Farbtontoleranzbereich von Rot-, Grün- und Blauanteilen einer Pixelfarbe zu bestimmen. Zum Beispiel würde <code>*2</code> zwei Farbtonvarianten erlauben. Dieser Parameter ist hilfreich, wenn sich die Färbung des Bildes leicht ändert oder wenn <em>Bilddatei</em> ein Format wie GIF oder JPG benutzt, das nicht genau mit einem Bild auf dem Bildschirm übereinstimmt. Wenn Sie 255 Farbtonvarianten angeben, werden alle Farben gefunden. Standardmäßig gelten 0 Farbtonvarianten.</p>
    <p><strong>*TransN</strong>: Diese Option erleichtert das Finden einer Übereinstimmung, weil man eine Farbe innerhalb des Bildes angeben kann, die mit jeder Farbe auf dem Bildschirm übereinstimmt. Am häufigsten wird diese Option verwendet, um PNG-, GIF- und TIF-Dateien mit transparenten Bereichen zu finden (Symbole benötigen diese Option nicht, weil ihre Transparenz automatisch unterstützt wird). Bei GIF-Dateien funktioniert meistens <code>*TransWhite</code>. Bei PNG- oder TIF-Dateien ist <code>*TransBlack</code> besser geeignet. Ansonsten können Sie für <strong>N</strong> einen beliebigen Farbnamen oder RGB-Wert angeben (verwenden Sie die <a href="../misc/Colors.htm">Farbentabelle</a> als Orientierungshilfe oder <a href="PixelGetColor.htm">PixelGetColor</a> im RGB-Modus). Beispiele: <code>*TransBlack</code>, <code>*TransFFFFAA</code>, <code>*Trans0xFFFFAA</code>.</p>    
    <p><strong>*wn</strong> und <strong>*hn</strong>: Breite und Höhe, auf die das Bild skaliert werden soll (diese Breite und Höhe bestimmen auch, welches Symbol aus einer mit mehreren Symbolen bestückten ICO-Datei geladen werden soll). Fehlen beide Optionen, werden Symbole, die aus einer ICO-, DLL- oder EXE-Datei geladen werden, auf die für kleine Symbole verwendete Standardgröße des Systems skaliert, was in der Regel 16x16 ist (Sie können die tatsächliche/interne Größe durch die Angabe von <code>*w0 *h0</code> erzwingen). Bilder, die keine Symbole sind, werden in ihrer aktuellen Größe geladen. Geben Sie -1 für eine der Abmessungen und eine positive Zahl für die jeweils andere an, um das Bild unter Beibehaltung des Seitenverhältnisses zu verkleinern oder zu vergrößern. <code>*w200 *h-1</code> beispielsweise macht das Bild 200 Pixel breit und bewirkt, dass dessen Höhe automatisch gesetzt wird.</p>
    <p>Anstelle eines Dateinamens kann auch ein <a href="../misc/ImageHandles.htm">Bitmap- oder Symbol-Handle</a> verwendet werden. Zum Beispiel <code>"HBITMAP:*" handle</code>.</p>
  </dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#boolean">Integer (boolescher Wert)</a></p>
<p>Diese Funktion gibt 1 (true) zurück, wenn das Bild im angegebenen Bereich gefunden wurde, oder 0 (false), wenn es nicht gefunden wurde.</p>

<h2>Fehlerbehandlung</h2>
<p>Es wird eine Ausnahme ausgelöst, wenn ein ungültiger Parameter erkannt wurde oder das Bild nicht geladen werden konnte.</p>

<h2>Bemerkungen</h2>
<p>Mit ImageSearch können grafische Objekte auf dem Bildschirm entdeckt werden, deren Texte entweder fehlen oder nur schwer abrufbar sind. ImageSearch kann beispielsweise genutzt werden, um die Position von Bild-Schaltflächen, Symbolen, Webseiten-Links, oder Spielobjekte abzurufen. Einmal lokalisiert, können diese Objekte via <a href="Click.htm">Click</a> angeklickt werden.</p>
<p>Manchmal ist es strategisch sinnvoll, nicht das ganze Bild, sondern nur einen kleinen Bereich des Bildes zu suchen. Diese Vorgehensweise kann die Zuverlässigkeit dort verbessern, wo sich das Bild als Ganzes ändert, aber bestimmte Bereiche darin immer gleich bleiben. Eine Möglichkeit zum Extrahieren eines Ausschnittes:</p>
<ol>
  <li>Drücken Sie <kbd>Alt</kbd>+<kbd>Druck</kbd>, während das Bild im aktiven Fenster sichtbar ist, um ein Screenshot in die Zwischenablage zu platzieren.</li>
  <li>Öffnen Sie ein Bildbearbeitungsprogramm wie Paint.</li>
  <li>Fügen Sie den Inhalt der Zwischenablage ein (in diesem Fall das Screenshot).</li>
  <li>Markieren Sie einen Bereich, der sich nicht ändert und nur einmal im Bild vorkommt.</li>
  <li>Kopieren und fügen Sie diesen Bereich in ein neues Bild-Dokument ein.</li>
  <li>Speichern Sie es als kleine Datei, um es mit ImageSearch zu verwenden.</li>
</ol>
<p>Um eine Übereinstimmung zu erreichen, muss das Bild auf dem Bildschirm die gleiche Größe haben wie das im <em>Bilddatei</em>-Parameter definierte Bild.</p>
<p>Der Suchbereich muss sichtbar sein; das heißt, dass es nicht möglich ist, einen Bereich in einem Fenster zu suchen, das hinter einem anderen Fenster liegt. Bilder unterhalb des Mauszeigers werden in der Regel erkannt. Spiele-Mauszeiger hingegen behindern die Sicht auf darunterliegende Bilder in den meisten Fällen.</p>
<p>Da die Suche zeilenweise von oben nach unten erfolgt, wird bei mehreren Übereinstimmungen der oberste Fund bevorzugt.</p>
<p>Die transparente Farbe eines Symbols (falls vorhanden) kann üblicherweise mit jeder Farbe auf dem Bildschirm übereinstimmen. Die Farbe des Hintergrunds spielt daher keine Rolle.</p>
<p>ImageSearch unterstützt Bildschirme mit 8-Bit-Farben (256 Farben) oder höher.</p>
<p>Das Suchverhalten kann variieren, je nachdem, welche Farbtiefe bei der Grafikkarte eingestellt ist (besonders bei GIF- und JPG-Dateien). Ein Skript sollte daher, wenn es unter mehreren Farbtiefen ausgeführt werden soll, zuvor mit jeder Tiefeneinstellung getestet werden. Mithilfe der Farbtontoleranz-Option (*n) können Sie das Verhalten über mehrere Farbtiefen konstant machen.</p>
<p>Wenn das Bild auf dem Bildschirm transparent ist, kann ImageSearch das Bild wahrscheinlich nicht finden. Um das zu umgehen, nutzt man die Farbtontoleranz-Option (*n) oder deaktiviert vorübergehend die Fenstertransparenz via <code><a href="WinSetTransparent.htm">WinSetTransparent</a>("Off")</code>.</p>
<h2>Siehe auch</h2>
<p><a href="PixelSearch.htm">PixelSearch</a>, <a href="PixelGetColor.htm">PixelGetColor</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h2>Beispiele</h2>
<pre class="NoIndent">ImageSearch XPos, YPos, 40, 40, 300, 300, "C:\Meine Bilder\test.bmp"</pre>
<pre class="NoIndent">
CoordMode "Pixel"  <em>; Macht die Koordinaten unten relativ zum Bildschirm, anstatt zum aktiven Fenster.</em>
try
{
    if ImageSearch(XPos, YPos, 0, 0, A_ScreenWidth, A_ScreenHeight, "*Icon3 " A_ProgramFiles "\BeliebigeApp\BeliebigeApp.exe")
        MsgBox "Das Symbol wurde bei " XPos "x" YPos " gefunden."
    else
        MsgBox "Symbol konnte nicht auf dem Bildschirm gefunden werden."
}
catch exc
    MsgBox "Die Suche konnte aufgrund des folgenden Fehlers nicht durchgeführt werden:`n" exc.Message
</pre>

</body>
</html>
