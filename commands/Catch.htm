<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Catch - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Catch-Anweisung bestimmt den Code, der ausgeführt werden soll, wenn eine Ausnahme während einer Try-Anweisung ausgelöst wird." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Catch</h1>

<p>Bestimmt den Code, der ausgeführt werden soll, wenn eine Ausnahme während einer <a href="Try.htm">Try</a>-Anweisung ausgelöst wird.</p>

<pre class="Syntax" style="line-height: 120%"><span class="func">Catch</span> <span class="optional">AusgabeVar</span>
    <i>Anweisung</i></pre>
<pre class="Syntax" style="line-height: 100%"><span class="func">Catch</span> <span class="optional">AusgabeVar</span>
{
    <i>Anweisungen</i>
}</pre>
<h2>Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variables">Variable</a></p>
    <p><em>(Optional)</em> Name einer Variable, in der der Ausnahmewert gespeichert werden soll.</p>
  </dd>

  <dt><i>Anweisung(en)</i></dt>
  <dd><p>Funktionen oder Ausdrücke, die ausgeführt werden sollen, wenn eine Ausnahme ausgelöst wird.</p></dd>

</dl>

<h2>Bemerkungen</h2>
<p><em>AusgabeVar</em> kann optional mit runden Klammern umschlossen werden - in diesem Fall ist das Leer- oder Tabulatorzeichen nach <code>Catch</code> optional.</p>
<p>Jedes <em>Catch</em> muss mit einer darüberliegenden <a href="Try.htm">Try</a>-Anweisung verbunden werden. Ein <em>Catch</em> bezieht sich immer auf die nächst darüberliegende noch nicht beanspruchte <em>Try</em>-Anweisung, sofern dieses Verhalten nicht mit einem <a href="Block.htm">Block</a> geändert wurde.</p>
<p>Der <a href="Block.htm#otb">One True Brace Style</a> (OTB) kann je nach Bedarf angewendet werden. Zum Beispiel:</p>
<pre>try {
    ...
} catch e {
    ...
}</pre>

<h2 id="RuntimeErrors">Laufzeitfehler</h2>
<p>Eine <em>Try-Catch</em>-Anweisung kann auch genutzt werden, um Laufzeitfehler zu behandeln, die während der Evaluation des Skripts oder durch eine interne Funktion auftreten. Wenn ein Laufzeitfehler oder eine Ausnahme nicht in Bearbeitung ist, wird eine Fehlermeldung angezeigt und der aktuelle Thread beendet. Ladezeitfehler können nicht behandelt werden, da sie vor dem Ausführen der <em>Try</em>-Anweisung auftreten.</p>
<p>Der in <em>AusgabeVar</em> gespeicherte Wert (falls vorhanden) ist ein <a href="Throw.htm#Exception">Exception-Objekt</a>.</p>

<h2>Siehe auch</h2>
<p><a href="Try.htm">Try</a>, <a href="Throw.htm">Throw</a>, <a href="Finally.htm">Finally</a>, <a href="Block.htm">Blöcke</a>, <a href="OnError.htm">OnError</a></p>

<h2>Beispiele</h2>
<p>Siehe <a href="Try.htm#Examples">Try</a>.</p>

</body>
</html>
