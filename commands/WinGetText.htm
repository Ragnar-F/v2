<!DOCTYPE HTML>
<html>
<head>
<title>WinGetText</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>WinGetText</h1>

<p>Ermittelt den Text des angegebenen Fensters.</p>

<pre class="Syntax">AusgabeVar := <span class="func">WinGetText</span>(<span class="optional">Fenstertitel, Fenstertext, Titelausnahme, Textausnahme</span>)</pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Variable, in der der ermittelte Text gespeichert werden soll.</p></dd>

  <dt>Fenstertitel</dt>
  <dd><p>Ein Fenstertitel oder sonstige Kriterien, die das Zielfenster ermitteln sollen. Siehe <a href="../misc/WinTitle.htm">Fenstertitel</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>In diesem Parameter kann eine Zeichenkette angegeben werden, die in einem Textelement des Zielfensters vorkommt (abrufbar mit Windows Spy). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h3>Bemerkungen</h3>
<p>Der ermittelte Text ist generell das gleiche, was Windows Spy für dieses Fenster anzeigt. Wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> ausgeschaltet wurde, werden versteckte Texte in <em>AusgabeVar</em> weggelassen.</p>
<p>Jedes Textelement endet mit einem CR- und LF-Zeilenumbruchszeichen, die im Skript als `r`n dargestellt werden können. Um bestimmte Zeilen oder Teilzeichenketten zu extrahieren, müssen Funktionen wie <a href="InStr.htm">InStr</a> und <a href="SubStr.htm">SubStr</a> benutzt werden. Eine <a href="LoopParse.htm">Parsende Schleife</a> kann auch verwendet werden, um Zeilen oder Worte einzeln zu überprüfen.</p>
<p>Falls der ermittelte Text gekürzt (unvollständig) erscheint, kann <code><a href="VarSetCapacity.htm">VarSetCapacity</a>(AusgabeVar, 55)</code> vor WinGetText ausprobiert werden [ersetze 55 mit einer Zahl, die wesentlich länger als der gekürzte Text ist]. Da einige Anwendungen nicht richtig auf die WM_GETTEXTLENGTH-Meldung reagieren, macht AutoHotkey die Ausgabevariable zu klein, wodurch der Text nicht mehr reinpasst.</p>
<p>Diese Funktion verbraucht sehr viel Arbeitsspeicher, falls das Zielfenster eine große Menge an Text beinhaltet (z. B. ein Editor, in dem ein großes Dokument offen ist). Um das zu verhindern, besteht die Möglichkeit, mithilfe von <a href="ControlGetText.htm">ControlGetText</a> stattdessen nur bestimmte Teile des Fenstertextes abzurufen. Auf jeden Fall kann der Speicher einer Variable später wieder zur Verfügung gestellt werden, indem ihr nichts zugewiesen wird, z. B. <code>AusgabeVar := ""</code>.</p>
<p>Um eine Liste mit allen Steuerelementen eines Fensters abzurufen, befolge dieses Beispiel: <code>AusgabeVar := <a href="WinGet.htm#Controls">WinGetControls</a>(<i>Fenstertitel</i>)</code></p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>

<h3>Siehe auch</h3>
<p><a href="ControlGetText.htm">ControlGetText</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetPos.htm">WinGetPos</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">Run "calc.exe"
WinWait "Rechner"
MsgBox "Der Text ist:`n" WinGetText()  <em>; Das oben gefundene Fenster wird verwendet.</em></pre>

</body>
</html>
