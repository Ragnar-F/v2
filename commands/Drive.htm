<!DOCTYPE HTML>
<html>
<head>
<title>Drive</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Drive</h1>

<p>Funktionen zum Öffnen/Schließen oder Sperren/Entsperren eines CD- oder DVD-Laufwerks, oder zum Setzen einer Datenträgerbezeichnung.</p>

<h3 id="SetLabel">DriveSetLabel</h3>
<p>Ändert <em>Laufwerk</em>'s Datenträgerbezeichnung zu <em>NeueBezeichnung</em>.</p>
<pre class="Syntax"><span class="func">DriveSetLabel</span> Laufwerk <span class="optional">, NeueBezeichnung</span></pre>
<dl>
  <dt>Laufwerk</dt>
  <dd><p>Der Laufwerksbuchstabe, gefolgt von einem Doppelpunkt und einem optionalen umgekehrten Schrägstrich (UNC-Netzwerkpfade und zugeordnete Laufwerke wären auch möglich).</p></dd>
  <dt>NeueBezeichnung</dt>
  <dd><p>Eine neue Bezeichnung, die gesetzt werden soll. Fehlt dieser Parameter, wird das Laufwerk keine neue Bezeichnung erhalten.</p></dd>
</dl>
<p>Zum Beispiel: <code>DriveSetLabel("C:", "Seagate200")</code>.</p>
<p>Die aktuelle Bezeichnung eines Laufwerks kann wie folgt abgerufen werden: <code>Bezeichnung := <a href="DriveGet.htm#Label">DriveGetLabel</a>("C:")</code>.</p>

<h3 id="Lock">DriveLock</h3>
<p>Verhindert, dass das angegebene Laufwerk ausgefahren werden kann.</p>
<pre class="Syntax"><span class="func">DriveLock</span> Laufwerk</pre>
<p>Zum Beispiel: <code>DriveLock("D:")</code>.</p>
<p>Die meisten Laufwerke können nicht im geöffneten Zustand gesperrt werden. Allerdings könnte die Sperrung immer noch erfolgen, nachdem das Laufwerk geschlossen wurde.</p>
<p>Diese Funktion hat keine Auswirkung auf Laufwerke, die keine Sperrung zulassen (trifft auf die meisten schreibgeschützten Laufwerke zu).</p>
<p>Mit <a href="#Unlock">DriveUnlock</a> kann ein Laufwerk entsperrt werden. Die Sperrung eines Laufwerks bleibt auch nach Beendigung des verantwortlichen Skripts bestehen. Andere Skripte, Programme oder ein Neustart des Systems können die Sperrung wieder aufheben.</p>
<p>Wenn das angegebene Laufwerk nicht vorhanden ist oder die Sperrfunktion nicht unterstützt, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt. Ansonsten wird es auf 0 gesetzt.</p>

<h3 id="Unlock">DriveUnlock</h3>
<p>Entsperrt ein Laufwerk, das zuvor mit DriveLock gesperrt wurde.</p>
<pre class="Syntax"><span class="func">DriveUnlock</span> Laufwerk</pre>
<p>Zum Beispiel: <code>DriveUnlock("D:")</code></p>
<p>Diese Funktion muss mehrmals aufgerufen werden, falls das Laufwerk mehrmals gesperrt wurde (zumindest bei einigen Laufwerken). Wenn man beispielsweise <code>DriveLock("D:")</code> dreimal aufrufen würde, wäre wiederum dreimal <code>DriveUnlock("D:")</code> notwendig, um die Sperrung aufzuheben. Genau aus diesem Grund und der Tatsache, dass der gesperrte Zustand eines Laufwerks nicht ermittelt werden kann, wäre es ratsam, diesen Zustand in eine <a href="../Variables.htm">Variable</a> zu speichern, um die Übersicht zu  behalten.</p>

<h3 id="Eject">DriveEject</h3>
<p>Öffnet oder schließt ein CD- oder DVD-Laufwerk.</p>
<pre class="Syntax"><span class="func">DriveEject</span> <span class="optional">Laufwerk, Schließen := false</span></pre>
<dl>
  <dt>Laufwerk</dt>
  <dd><p>Der Laufwerksbuchstabe, gefolgt von einem Doppelpunkt und einem optionalen umgekehrten Schrägstrich. Fehlt dieser Parameter, gilt das Standard-CD/DVD-Laufwerk.</p></dd>
  <dt>Schließen</dt>
  <dd><p>Geben Sie <em>True</em> an, um das Laufwerk zu schließen. Geben Sie <em>False</em> an oder lassen Sie diesen Parameter weg, um das Laufwerk zu öffnen.</p></dd>
</dl>
<p>Während <em>DriveEject</em> das Laufwerk ein- oder ausfährt, wartet das Skript. Befindet sich das Laufwerk bereits in richtiger Position (offen oder geschlossen), wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt (also "kein Fehler").</p>
<p><em>DriveEject</em> wird eventuell nicht funktionieren, wenn das angegebene Laufwerk ein Netzwerk- oder Nicht-CD/DVD-Laufwerk ist. Wenn es in solchen Fällen oder aus einem anderen Grund fehlschlägt, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt. Um andere Medien- oder Gerätetypen auszufahren, siehe das DllCall-Beispiel ganz unten.</p>
<p>Um den vorherigen Zustand des Laufwerks zu ermitteln, misst man einfach die Zeit, die die Funktion zum Ausführen benötigt. Der folgende Hotkey beispielsweise schaltet das Laufwerk jeweils in den entgegengesetzten Zustand (offen oder geschlossen):</p>
<pre>#c::
DriveEject()
<em>; Wenn die Funktion schnell ausgeführt wurde, war das Laufwerk wahrscheinlich schon ausgefahren.
; In diesem Fall kann es eingefahren werden:</em>
if A_TimeSinceThisHotkey &lt; 1000  <em>; Passen Sie diese Zeit an, falls notwendig.</em>
    DriveEject(, true)
return</pre>
<p>Mit <a href="DriveGet.htm#StatusCD">DriveGetStatusCD</a> kann der Medienstatus eines CD- oder DVD-Laufwerks (läuft, angehalten, offen, usw.) ermittelt werden.</p>

<h3>ErrorLevel</h3>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<p>Diese Funktionen geben bei Erfolg eine 1 und bei Misserfolg eine 0 zurück.</p>

<h3>Bemerkungen</h3>
<p>Das folgende Beispiel zeigt, wie außer CD/DVD noch andere Typen von Medien/Geräten ausgefahren werden können:</p>
<pre><em>; Fügen Sie in die erste Zeile den gewünschten Laufwerksbuchstaben ein (alle anderen Zeilen können ignoriert werden).</em>
Laufwerksbuchstabe := "I:"  <em>; ; Tragen Sie hier das Laufwerk ein, das ausgefahren werden soll.</em>

hVolume := DllCall("CreateFile"
    , Str, "\\.\" . Laufwerksbuchstabe
    , UInt, 0x80000000 | 0x40000000  <em>; GENERIC_READ | GENERIC_WRITE</em>
    , UInt, 0x1 | 0x2  <em>; FILE_SHARE_READ | FILE_SHARE_WRITE</em>
    , UInt, 0
    , UInt, 0x3  <em>; OPEN_EXISTING</em>
    , UInt, 0, UInt, 0)
if hVolume &lt;&gt; -1
{
    DllCall("DeviceIoControl"
        , UInt, hVolume
        , UInt, 0x2D4808   <em>; IOCTL_STORAGE_EJECT_MEDIA</em>
        , UInt, 0, UInt, 0, UInt, 0, UInt, 0
        , UIntP, dwBytesReturned  <em>; Unbenutzt.</em>
        , UInt, 0)
    DllCall("CloseHandle", UInt, hVolume)
}</pre>

<h3>Siehe auch</h3>
<p><a href="DriveGet.htm">DriveGet</a></p>

</body>
</html>
