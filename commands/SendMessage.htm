<!DOCTYPE HTML>
<html lang="de">
<head>
<title>SendMessage - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die SendMessage-Funktion sendet eine Meldung an ein Fenster oder Steuerelement und wartet zusätzlich auf eine Bestätigung." />
<meta name="ahk:equiv-v1" content="commands/PostMessage.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>SendMessage</h1>

<p>Sendet eine Meldung an ein Fenster oder Steuerelement und wartet zusätzlich auf eine Bestätigung.</p>

<pre class="Syntax">Ergebnis := <span class="func">SendMessage</span>(Meldung <span class="optional">, wParam, lParam, Steuerelement, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme, Zeitlimit</span>)</pre>
<h2>Parameter</h2>
<dl>

  <dt>Meldung</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Eine Meldungsnummer, die gesendet werden soll. Welche Nummern beispielsweise verwendet werden können, finden Sie in der <a href="../misc/SendMessageList.htm">Meldungsliste</a>.</p>
  </dd>

  <dt>wParam, lParam</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die Parameter der Meldung. Lässt man einen Parameter weg, wird standardmäßig 0 verwendet.</p>
    <p>Jeder Parameter muss ein <a href="../Concepts.htm#numbers">Integer</a> sein. Verwenden Sie für Meldungen, die einen Pointer zu einer Zeichenkette benötigen, den <a href="../Variables.htm#amp">Adressoperator</a>. Wenn die in einer Variable enthaltene Zeichenkette durch die Übergabe der Variablenadresse an SendMessage geändert wird, muss danach die Länge der Variable durch Aufrufen von <a href="VarSetCapacity.htm#neg1">VarSetCapacity(MeineVar, -1)</a> aktualisiert werden.</p>
    <p>Wenn AutoHotkey oder das Zielfenster 32-Bit ist, werden nur die niedrigen 32 Bits verwendet; das heißt, dass Werte gekürzt werden, wenn sie vorzeichenfähig sind und außerhalb des Bereichs von -2147483648 bis 4294967295 (-0x80000000 bis 0x7FFFFFFF) liegen oder wenn sie vorzeichenlos sind und außerhalb des Bereichs von 0 bis 4294967295 (0xFFFFFFFF) liegen. Wenn sowohl AutoHotkey als auch das Zielfenster 64-Bit sind, kann jeder Integer, <a href="../Concepts.htm#pure-numbers">der von AutoHotkey unterstützt wird</a>, verwendet werden.</p>
  </dd>

  <dt>Steuerelement</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a>, <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Objects.htm">Objekt</a></p>
    <p>Lässt man diesen Parameter weg, wird die Meldung direkt an das Zielfenster gesendet, anstatt an eines der darin enthaltenen Steuerelemente. Ansonsten kann dieser Parameter das ClassNN, der Text oder der Fenster-Handle (HWND) des Steuerelements, oder ein Objekt mit einer <code>Hwnd</code>-Eigenschaft sein. Einzelheiten finden Sie unter <a href="Control.htm#Parameter">Der Steuerelement-Parameter</a>.</p>
    <p>Der hier angegebene HWND (egal ob Integer oder Objekt) muss nicht unbedingt der HWND eines Steuerelements (bzw. eines untergeordneten Fensters) sein. Das heißt, dass es auch der HWND eines nicht-untergeordneten Fensters angegeben werden kann.</p>
  </dd>

  <dt>Fenstertitel</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Der Titel oder andere Möglichkeiten zum Identifizieren des Zielfensters. Weitere Informationen finden Sie unter <a href="../misc/WinTitle.htm">Fenstertitel-Parameter</a>.</p>
  </dd>

  <dt>Fenstertext</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Eine Zeichenkette, die in einem der Textelemente des Zielfensters enthalten ist (eventuell vorhandene Textelemente können mit dem internen Tool Window Spy aufgedeckt werden). Versteckte Textelemente werden nur erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet ist.</p>
  </dd>

  <dt>Titelausnahme</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Alle Fenster, die diesen Wert in ihren Titeln enthalten, werden ignoriert.</p>
  </dd>

  <dt>Textausnahme</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Alle Fenster, die diesen Wert in ihren Textelementen enthalten, werden ignoriert.</p>
  </dd>

  <dt>Zeitlimit</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die maximale Wartezeit in Millisekunden, in der das Zielfenster die Meldung verarbeiten kann. Lässt man diesen Parameter weg, wird standardmäßig 5000 (Millisekunden) verwendet; ältere Versionen von AutoHotkey, die diesen Parameter nicht unterstützen, verwenden auch diesen Standardwert. Wenn das Zielfenster die Meldung innerhalb dieser Zeit nicht verarbeitet, wird die Funktion beendet und ErrorLevel auf 1 gesetzt.</p>
  </dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>Diese Funktion gibt eine leere Zeichenkette zurück, wenn es ein Problem gab oder die Wartezeit für die Meldung abgelaufen ist. Ansonsten gibt sie das Ergebnis der Meldung zurück, das manchmal eine "Antwort" sein könnte, abhängig von der Art der Meldung und ihrem Zielfenster.</p>
<p>Der mögliche Wertebereich ist abhängig davon, welches Zielfenster verwendet wird und welche Version von AutoHotkey läuft. Bei einer 32-Bit-Version von AutoHotkey, oder wenn das Zielfenster 32-Bit ist, wird das Ergebnis ein vorzeichenloser 32-Bit-Integer zwischen 0 und 4294967295 sein. Bei einer 64-Bit-Version von AutoHotkey mit einem 64-Bit-Fenster wird das Ergebnis ein vorzeichenfähiger 64-Bit-Integer zwischen -9223372036854775808 und 9223372036854775807 sein.</p>
<p>Wenn das Ergebnis ein vorzeichenfähiger 32-Bit-Integer sein soll (ein Wert von -2147483648 bis 2147483648), kann es wie folgt auf 32-Bit gekürzt und in ein vorzeichenfähigen Wert umgewandelt werden:</p>
<pre>Meldeantwort := Meldeantwort &lt;&lt; 32 &gt;&gt; 32</pre>
<p>Diese Umwandlung könnte auch in der 64-Bit-Version von AutoHotkey notwendig sein, weil die Ergebnisse von 32-Bit-Fenstern mit Nullen erweitert sind. Zum Beispiel würde ein Ergebnis von -1, zurückgegeben von einem 32-Bit-Fenster, in einer beliebigen AutoHotkey-Version als 0xFFFFFFFF  gesehen werden, aber ein Ergebnis von -1, zurückgegeben von einem 64-Bit-Fenster, in der 32-Bit-Version als 0xFFFFFFFF und in der 64-Bit-Version als -1.</p>

<h2>ErrorLevel</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn es ein Problem gab - z. B. wenn das Zielfenster oder Steuerelement nicht vorhanden ist - oder wenn SendMessage die Wartezeit überschritten hat. Ansonsten wird es auf 0 gesetzt.</p>

<h2>Bemerkungen</h2>
<p>Seien Sie vorsichtig, wenn Sie diese Funktion verwenden - das Senden einer Meldung an das falsche Fenster (oder Senden einer ungültigen Meldung) kann dazu führen, dass die Zielanwendung sich falsch verhält oder abstürzt. Die meisten Anwendungen sind nicht darauf abgestimmt, bestimmte Arten von Meldungen aus externen Quellen zu erwarten.</p>
<p>SendMessage wartet, bis das Zielfenster die Meldung verarbeitet hat oder bis das Zeitlimit überschritten wurde. <a href="PostMessage.htm">PostMessage</a> hingegen setzt die Meldung in die Meldungswarteschlange des Zielfensters, ohne auf eine Bestätigung und Antwort zu warten.</p>
<p>Zeichenkettenparameter müssen via <a href="../Variables.htm#amp">Adresse</a> übergeben werden. Zum Beispiel:</p>
<pre>Run "Notepad"
WinWait "Unbenannt - Editor"
SendMessage 0xC, 0, <strong>&amp;"Neuer Editor-Titel"</strong>  <em>; 0XC ist WM_SETTEXT</em></pre>
<p>Um allen Fenstern im Betriebssystem eine Meldung zu senden - einschließlich solcher, die versteckt oder deaktiviert sind - fügt man <code>ahk_id 0xFFFF</code> in <em>Fenstertitel</em> ein (0xFFFF ist HWND_BROADCAST). Diese Technik sollte nur für Meldungen benutzt werden, die zum Broadcasten geeignet sind, wie z. B.:</p>
<pre>SendMessage 0x1A,,,, "ahk_id 0xFFFF"  <em>; 0x1A ist WM_SETTINGCHANGE</em></pre>
<p>Mit <a href="OnMessage.htm">OnMessage</a> kann ein Skript eine Meldung abfangen.</p>
<p>Um mehr über das Verwenden dieser Funktion zu erfahren, siehe <a href="../misc/SendMessage.htm">Tutorial zum Senden von Meldungen</a>.</p>
<p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>

<h2>Siehe auch</h2>
<p><a href="PostMessage.htm">PostMessage</a>, <a href="../misc/SendMessageList.htm">Liste mit Meldungen</a>, <a href="../misc/SendMessage.htm">Tutorial zum Senden von Meldungen</a>, <a href="OnMessage.htm">OnMessage</a>, <a href="../misc/Winamp.htm">Winamp automatisieren</a>, <a href="DllCall.htm">DllCall</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="MenuSelect.htm">MenuSelect</a></p>

<h2 id="Examples">Beispiele</h2>

<h3 id="ex1">Beispiel #1</h3>
<p>Schaltet den Bildschirm via Hotkey aus. Ersetzen Sie in der SendMessage-Zeile die Zahl 2 mit -1, um den Bildschirm einzuschalten, oder ersetzen Sie sie mit 1, um den Energiesparmodus des Bildschirms zu aktivieren.</p>
<pre class="NoIndent">#o::  <em>; Win+O-Hotkey</em>
Sleep 1000  <em>; Gibt dem Benutzer die Chance, die Tasten loszulassen (falls das Loslassen der Tasten den Bildschirm wieder aufwecken sollte).
; Schaltet den Bildschirm aus:</em>
SendMessage 0x112, 0xF170, 2,, "Program Manager"  <em>; 0x112 ist WM_SYSCOMMAND, 0xF170 ist SC_MONITORPOWER.</em>
return</pre>

<h3 id="ex2">Beispiel #2</h3>
<p>Startet den vom Benutzer festgelegten Bildschirmschoner:</p>
<pre class="NoIndent">SendMessage 0x112, 0xF140, 0,, "Program Manager"  <em>; 0x112 ist WM_SYSCOMMAND und 0xF140 ist SC_SCREENSAVE.</em></pre>

<h3 id="ex3">Beispiel #3</h3>
<pre class="NoIndent"><em>; Eine Zeile nach oben scrollen (bei einem Steuerelement mit vertikalem Scrollbalken):</em>
SendMessage 0x115, 0, 0, ControlGetFocus("A")

<em>; Eine Zeile nach unten scrollen:</em>
SendMessage 0x115, 1, 0, ControlGetFocus("A")</pre>

<h3 id="ex4">Beispiel #4</h3>
<p>Dieses Beispiel fragt Winamp, welche Track-Nummer zurzeit aktiv ist. Siehe <a href="../misc/Winamp.htm">Winamp automatisieren</a>, um mehr zu erfahren.</p>
<pre class="NoIndent">SetTitleMatchMode 2
track := SendMessage(1024, 0, 120,, "- Winamp")
if !ErrorLevel
{
    track++  <em>; Winamp's Zählung beginnt bei 0, also um 1 erhöhen.</em>
    MsgBox "Track #" track " ist aktiv oder wird abgespielt."
}</pre>

<h3 id="ex5">Beispiel #5</h3>
<p>Um die Prozess-ID eines AHK-Skripts zu finden (eine Alternative zu <a href="WinGetPID.htm">WinGetPID</a>):</p>
<pre class="NoIndent">SetTitleMatchMode 2
DetectHiddenWindows true
pid := SendMessage(0x44, 0x405, 0, , "BeliebigesSkript.ahk - AutoHotkey v")
MsgBox pid " ist die Prozess-ID."</pre>

</body>
</html>
