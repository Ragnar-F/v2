<!DOCTYPE HTML>
<html>
<head>
<title>WinKill</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>WinKill</h1>

<p>Zwingt das angegebene Fenster sich zu schließen.</p>

<pre class="Syntax">WinKill [, Fenstertitel, Fenstertext, Wartezeit, Titelausnahme, Textausnahme]</pre>
<h3>Parameter</h3>
<dl>

  <dt>Fenstertitel</dt>
  <dd><p>Ein Fenstertitel oder sonstige Kriterien, die das Zielfenster ermitteln sollen. Siehe <a href="../misc/WinTitle.htm">Fenstertitel</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>In diesem Parameter kann eine Zeichenkette angegeben werden, die in einem Textelement des Zielfensters vorkommt (abrufbar mit Windows Spy). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</p></dd>

  <dt>Wartezeit</dt>
  <dd><p>Fehlt dieser Parameter oder ist er leer, wartet der Befehl überhaupt nicht. Ist er 0, wartet der Befehl 500 ms. Ansonsten wartet der Befehl die angegebene Sekunden (auch mit Dezimalpunkt oder als <a href="../Variables.htm#Expressions">Ausdruck</a>), bis das Fenster sich schließt. Schließt sich das Fenster innerhalb dieser Zeit nicht, wird das Skript fortgesetzt. ErrorLevel wird <strong>nicht</strong> gesetzt, demzufolge kannst du <a href="WinExist.htm">WinExist</a> oder <a href="WinWaitClose.htm">WinWaitClose</a> verwenden, um ein eindeutiges Schließen eines Fensters festzustellen.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Zuerst versucht dieser Befehl, das Fenster auf normale Weise zu schließen. Funktioniert das nicht, wird der Befehl versuchen, das Fenster durch Beenden seines Prozesses zu schließen.</p>
<p>Ist ein übereinstimmendes Fenster aktiv, wird vorrangig dieses Fenster geschlossen, anstatt ein anderes übereinstimmende Fenster darunter. Im Falle mehrerer übereinstimmender Fenster wird generell das oberste (aktuell verwendete) Fenster geschlossen.</p>
<p>Dieser Befehl bezieht sich immer auf das oberste übereinstimmende Fenster; enthält <em>Fenstertitel</em> allerdings <a href="GroupAdd.htm">ahk_group Gruppenname</a>, sind alle Fenster in der Gruppe betroffen.</p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>

<h3>Siehe auch</h3>
<p><a href="WinClose.htm">WinClose</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="Process.htm">Process</a>, <a href="WinActivate.htm">WinActivate</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>, <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundenes Fenster</a>, <a href="WinExist.htm">WinExist</a>, <a href="WinActive.htm">WinActive</a>, <a href="WinWaitActive.htm">WinWaitActive</a>, <a href="WinWait.htm">WinWait</a>, <a href="GroupActivate.htm">GroupActivate</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">If WinExist("Unbenannt - Editor")
    WinKill <em>; verwendet das oben gefundene Fenster</em>
else
    WinKill, Rechner</pre>

</body>
</html>
