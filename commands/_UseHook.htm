<!DOCTYPE HTML>
<html>
<head>
<title>#UseHook</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>#UseHook</h1>

<p>Erzwingt die Verwendung des Hooks, um alle oder einige Tastatur-<a href="../Hotkeys.htm">Hotkeys</a> zu implementieren.</p>

<pre class="Syntax"><span class="func">#UseHook</span> <span class="optional">On|Off</span></pre>
<h3>Parameter</h3>
<dl>

  <dt>On|Off</dt>
  <dd><p>#UseHook, ohne eins der folgenden Wörter danach, ist das gleiche wie, als würde man <code>#UseHook On</code> angeben.</p>
      <p><strong>On</strong>: Der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> wird verwendet, um alle Tastatur-Hotkeys zwischen hier und der nächsten Direktive <code>#UseHook OFF</code> (falls vorhanden) zu implementieren.</p>
    <p><strong>Off</strong>: Hotkeys werden mit der Standardmethode implementiert (wenn möglich mit RegisterHotkey(), ansonsten per Tastatur-Hook).</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Ein Tastatur-Hotkey wird üblicherweise mit der Windows-API-Funktion RegisterHotkey() implementiert, wann immer es möglich ist. Unter bestimmten Bedingungen könnte sich die Reaktionsfähigkeit der Hotkeys erhöhen, wenn stattdessen der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> verwendet wird.</p>
<p>Das Aktivieren dieser Direktive ist das gleiche wie, als würde man bei den betroffenen Hotkeys den <a href="../Hotkeys.htm#prefixdollar">$-Präfix</a> angeben.</p>
<p><code>#UseHook</code> sollte, wie jede andere Direktive auch, nicht wie eine Funktion im Skript positioniert werden (beispielsweise macht es keinen Sinn, die Direktive in eine Subroutine zu setzen). Diese Direktive wird nur beim Starten des Skripts ausgeführt, danach nie wieder. Positioniere diese Direktive stattdessen direkt vor dem Hotkey, der als erstes von ihr beeinflusst werden soll.</p>
<p>Standardmäßig können Hotkeys, die den <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> verwenden, nicht durch die <a href="Send.htm">Send</a>-Funktion ausgelöst werden. Ebenso können Maus-Hotkeys nicht durch interne Funktionen wie <a href="Click.htm">Click</a> ausgelöst werden, weil alle Maus-Hotkeys den <a href="_InstallMouseHook.htm">Maus-Hook</a> verwenden. Verwende stattdessen <a href="Gosub.htm">Gosub</a>, um direkt zur Hotkey-Subroutine zu springen. Zum Beispiel: <code>Gosub #LButton</code>.</p>
<p><a href="_InputLevel.htm">#InputLevel</a> und <a href="SendLevel.htm">SendLevel</a> ermöglichen zusätzliche Kontrolle darüber, welche Hotkeys und Hotstrings durch die Send-Funktion ausgelöst werden sollen.</p>
<p>Ist diese Direktive im Skript nicht angegeben, gilt standardmäßig OFF.</p>

<h3>Siehe auch</h3>
<p><a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_InstallMouseHook.htm">#InstallMouseHook</a>, <a href="ListHotkeys.htm">ListHotkeys</a>, <a href="_InputLevel.htm">#InputLevel</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#UseHook  <em>; Erzwingt die Verwendung des Hooks bei nachfolgenden Hotkeys.</em>
#x::MsgBox "Dieser Hotkey wird mit dem Hook implementiert."
#y::MsgBox "Dieser auch."
#UseHook off
#z::MsgBox "Aber dieser nicht."</pre>

</body>
</html>
