<!DOCTYPE HTML>
<html>
<head>
<title>GuiControlGet</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>GuiControlGet</h1>

<p>Ruft verschiedene Arten von Informationen über ein Steuerelement innerhalb eines GUI-Fensters ab.</p>

<pre class="Syntax">GuiControlGet, AusgabeVar [, Unterbefehl, SteuerelementID, Param4]</pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Variable, in der das Ergebnis gespeichert werden soll. Wenn der Befehl nicht durchgeführt werden kann (siehe ErrorLevel unten), wird diese Variable leer gemacht.</p></dd>

  <dt>Unterbefehl</dt>
  <dd><p>Siehe <a href="#subcommands">untere Liste</a>.</p></dd>

  <dt>SteuerelementID</dt>
  <dd><p>Fehlt dieser Parameter oder ist er leer, verhält er sich so, als wurde der Name der Ausgabevariable angegeben. Zum Beispiel wäre <code>GuiControlGet, MeinEdit</code> das gleiche wie <code>GuiControlGet, MeinEdit,, MeinEdit</code>.</p>
      <p>Wenn das Ziel-Steuerelement eine zugeordnete Variable hat, kann der Name der Variable als <em>SteuerelementID</em> angegeben werden (diese Methode hat Vorrang vor der nächsten Methode). Aus diesem Grund empfiehlt es sich, jedes Steuerelement mit einer Variable zu verbinden, so dass es später via GuiControl oder GuiControlGet zugreifbar ist, selbst wenn es nicht eingabefähig ist (z. B. GroupBox oder Text).</p>
    <p>Ansonsten kann <em>SteuerelementID</em> entweder ClassNN (Klassenname und Instanznummer des Steuerelements) oder der Text des Steuerelements sein, die beide mit Windows Spy ermittelt werden können. Verwendet man Text, ist das Übereinstimmungsverhalten abhängig von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. Hinweis: Der Dateiname eines Picture-Steuerelements (der zum Zeitpunkt seiner Erstellung angegeben wurde) kann auch als <em>SteuerelementID</em> verwendet werden.</p>
    <p><em>SteuerelementID</em> kann das <a href="Gui.htm#HwndOutputVar">HWND</a> eines Steuerelements sein.</p>
    <p>Befindet sich das Steuerelement nicht auf dem Standard-GUI, <strong>muss der Name des GUI auch angegeben werden</strong> -- außer wenn <em>SteuerelementID</em> ein HWND ist, da jedes HWND einzigartig ist. Siehe <a href="#Remarks">Bemerkungen</a>, um mehr darüber zu erfahren.</p>
  </dd>

  <dt>Param4</dt>
  <dd><p>Dieser Parameter kann weggelassen werden, solange er nicht von einem Unterbefehl aus der unteren Liste benötigt wird.</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p>Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn das angegebene Fenster/Steuerelement nicht existiert oder ein anderes Problem die Ausführung des Befehls verhindert hat. Ansonsten wird es auf 0 gesetzt.</p>
<h3 id="subcommands">Unterbefehle</h3>
<p><strong>(Leer)</strong>: Lass <em>Unterbefehl</em> leer, um die Inhalte des Steuerelements abzurufen. Alle Steuerelementarten sind selbsterklärend, mit Ausnahme von:</p>
<p><a href="GuiControls.htm#Picture">Picture</a>: Ruft den Dateinamen des Bildes ab, das ursprünglich beim Erstellen des Steuerelements angegeben wurde. Dieser Name ändert sich auch dann nicht, wenn ein neuer Bilddateiname angegeben ist.</p>
<p><a href="GuiControls.htm#Edit">Edit</a>: Ruft die Inhalte ab, aber jeder Zeilenumbruch im Text wird als reines LF-Zeichen (`n) dargestellt, anstatt traditionell als CR+LF (`r`n), das von Nicht-GUI-Befehlen wie <a href="ControlGetText.htm">ControlGetText</a> und <a href="ControlSetText.htm">ControlSetText</a> verwendet wird.</p>
<p><a href="GuiControls.htm#Hotkey">Hotkey</a>: Ruft einen leeren Wert ab, wenn kein Hotkey im Steuerelement vorkommt. Ansonsten ruft er die Modifikatoren und Tastenname ab. Beispiele: <code>^!C</code>, <code>^Home</code>, <code>+^NumpadHome</code>.</p>
<p><a href="GuiControls.htm#Checkbox">Checkbox</a>/<a href="GuiControls.htm#Radio">Radio</a>: Ruft eine 1 ab, wenn das Steuerelement markiert ist, eine 0, wenn es demarkiert ist, oder -1, wenn es eine graue Markierung hat. Um stattdessen den Text/die Bezeichnung des Steuerelements abzurufen, muss das Wort Text bei <em>Param4</em> angegeben werden. Hinweis: Im Gegensatz zum Befehl <a href="Gui.htm#Submit">Gui Submit</a> werden Radio-Buttons immer einzeln abgerufen, egal ob sie in einer Gruppe sind oder nicht.</p>
<p><a href="GuiControls.htm#UpDown">UpDown</a>/<a href="GuiControls.htm#Slider">Slider</a>/<a href="GuiControls.htm#Progress">Progress</a>: Ruft die aktuelle Position des Steuerelements ab.</p>
<p><a href="GuiControls.htm#Tab">Tab</a>/<a href="GuiControls.htm#DropDownList">DropDownList</a>/<a href="GuiControls.htm#ComboBox">ComboBox</a>/<a href="GuiControls.htm#ListBox">ListBox</a>: Ruft den Text des aktuell ausgewählten Elements/Tabs ab (oder die Position des Steuerelements, wenn es die <a href="Gui.htm#AltSubmit">AltSubmit</a>-Eigenschaft hat). Bei einer ComboBox wird, wenn kein Element ausgewählt wurde, stattdessen der Text im Eingabefeld des Steuerelements abgerufen. Bei einer <a href="GuiControls.htm#ListBoxMulti">Mehrfachauswahl-ListBox</a> verwendet die Ausgabe das <a href="Gui.htm#Delimiter">aktuelle Trennzeichen</a> des Fensters.</p>
<p><a href="ListView.htm">ListView</a> und <a href="TreeView.htm">TreeView</a>: Diese Steuerelemente werden bei einem leeren <em>Unterbefehl</em>-Parameter nicht unterstützt. Verwende stattdessen die built-internen <a href="ListView.htm#BuiltIn">ListView</a>- und <a href="TreeView.htm#BuiltIn">TreeView</a>-Funktionen.</p>
<p><a href="GuiControls.htm#StatusBar">StatusBar</a>: Ruft nur den Text des ersten Bereichs ab.</p>
<p><a href="GuiControls.htm#ActiveX">ActiveX</a>: Ruft ein neues Wrapper-Objekt für die ActiveX-Komponente des Steuerelements ab.</p>
<p>Hinweis: Um den Text/die Bezeichnung des Steuerelements statt seine Inhalte abzurufen, muss das Wort Text in <em>Param4</em> angegeben werden.</p>
<p>&nbsp;</p>
<p><strong>GuiControlGet, AusgabeVar, Pos</strong>: Ruft die Position und Größe des Steuerelements ab. Die Position ist relativ zum Client-Bereich des GUI-Fensters, das der Bereich ohne Titelleiste, Menüleiste und Rahmen ist. Die Information wird in vier Variablen aufgeteilt, deren Namen alle mit <em>AusgabeVar</em> beginnen. Zum Beispiel:</p>
<pre>GuiControlGet, MeinEdit, Pos
MsgBox Die X-Koordinate ist %MeinEditX%. Die Y-Koordinate ist %MeinEditY%. Die Breite ist %MeinEditW%. Die Höhe ist %MeinEditH%.</pre>
<p>Um innerhalb einer <a href="../Functions.htm">Funktion</a> eine Reihe von Variablen zu erstellen, die global statt lokal sein sollen, muss <em>AusgabeVar</em> als globale Variable <a href="../Functions.htm#Global">deklariert</a> werden, bevor man diesen Befehl verwendet (das Gegenteil gilt bei <a href="../Functions.htm#AssumeGlobal">global-behandelnden</a> Funktionen). Oft ist es auch notwendig, jede Variable in dieser Reihe zu deklarieren, aufgrund der <a href="../Functions.htm#ArrayConfusion">oft auftretenden Verwechslungsgefahr</a>.</p>
<p>&nbsp;</p>
<p><strong>GuiControlGet, AusgabeVar, Focus</strong>: Ruft die Steuerelement-ID (ClassNN) des aktuell fokussierten Steuerelements ab. Das angegebene GUI-Fenster muss <a href="WinActivate.htm">aktiv</a> sein, damit eines seiner Steuerelemente den Fokus haben kann. Also wird <em>AusgabeVar</em> leer gemacht, wenn das Fenster nicht aktiv ist. Anwendungsbeispiel: <code>GuiControlGet, fokussiertes_Steuerelement, focus</code>.</p>
<p><strong>GuiControlGet, AusgabeVar, FocusV</strong>: Das gleiche wie <em>Focus</em> (siehe oben), außer dass dieser Unterbefehl den <a href="Gui.htm#Events">zugeordneten Variablennamen</a> des fokussierten Steuerelements abruft. Fehlt dem Steuerelement eine zugeordnete Variable, enthält A_GuiControl stattdessen die ersten 63 Zeichen des Textes/der Bezeichnung (wenn man verhindern möchte, jedem Button einen Variablennamen zuzuweisen).</p>
<p><strong>GuiControlGet, AusgabeVar, Enabled</strong>: Ruft eine 1 ab, wenn das Steuerelement aktiviert ist, oder eine 0, wenn es deaktiviert ist.</p>
<p><strong>GuiControlGet, AusgabeVar, Visible</strong>: Ruft eine 1 ab, wenn das Steuerelement sichtbar ist, oder eine 0, wenn es versteckt ist.</p>
<p id="Hwnd"><strong>GuiControlGet, AusgabeVar, Hwnd</strong>: Ruft das Window Handle (HWND) des Steuerelements ab. Das HWND eines Steuerelements wird oft in Verbindung mit <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall</a> verwendet. Hinweis: <a href="Gui.htm#HwndOutputVar">HwndAusgabeVar</a> ist in der Regel der kürzere Weg zum Abrufen des HWND.</p>
<p id="Name"><strong>GuiControlGet, AusgabeVar, Name</strong>: Ruft den <a href="Gui.htm#Events">zugeordneten Variablennamen</a> des Steuerelements ab, wenn es einen hat, ansonsten wird <em>AusgabeVar</em> leer gemacht.</p>
<h3 id="Remarks">Bemerkungen</h3>
<p>Um neben dem Standard-Fenster auch ein anderes Fenster einzubeziehen (siehe unten), muss dessen Name oder Nummer, gefolgt von einem Doppelpunkt, vor dem Unterbefehl wie folgt eingefügt werden:</p>
<pre>GuiControlGet, MeinEdit, MeinGui:
GuiControlGet, MeinEdit, MeinGui:Pos
GuiControlGet, AusgabeVar, MeinGui:Focus</pre>
<p>Diese Methode ist auch dann notwendig, wenn <em>SteuerelementID</em> die zugeordnete Variable eines Steuerelements ist, da jede Variable für mehrere GUI-Fenster verwendet werden kann. Der GUI-Name kann weggelassen werden, wenn <em>SteuerelementID</em> das HWND eines Steuerelements ist.</p>
<p>Ein GUI-<a href="../misc/Threads.htm">Thread</a> ist ein Thread, der aufgrund einer GUI-Aktion gestartet wurde. Zu den GUI-Aktionen gehört beispielsweise das Auswählen eines Menüpunkts oder das Ausführen eines <a href="Gui.htm#label">g-Labels</a> (z. B. beim Drücken eines Buttons).</p>
<p>Der <a href="Gui.htm#DefaultWin">Standardfenstername</a> für einen GUI-Thread ist der Name des Fensters, das diesen Thread gestartet hat. Nicht-GUI-Threads verwenden standardmäßig eine 1.</p>

<h3>Siehe auch</h3>
<p><a href="Gui.htm">Gui</a>, <a href="GuiControl.htm">GuiControl</a>, <a href="ControlGet.htm">ControlGet</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">GuiControlGet, MeinEdit
GuiControlGet, Inhalt,, MeinEdit  <em>;  Das gleiche wie oben, außer mit einer Nicht-Standard-Ausgabevariable.</em>
GuiControlGet, MeineCheckBox1 <em>; Ruft eine 1 ab, wenn es markiert ist, oder eine 0, wenn es demarkiert ist.</em>
GuiControlGet, MeineCheckBox1,,, Text  <em>; Ruft die Bezeichnung/den Text der CheckBox ab.</em>
GuiControlGet, Pic, Pos, Static4  <em>; Die Position/Größe wird in PicX, PicY, PicW, und PicH gespeichert.</em></pre>

</body>
</html>
