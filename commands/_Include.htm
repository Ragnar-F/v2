<!DOCTYPE HTML>
<html>
<head>
<title>#Include</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>#Include / #IncludeAgain</h1>

<p>Veranlasst das Skript, sich so zu verhalten, als wäre der Inhalt der angegebenen Datei an genau dieser Stelle vorhanden.</p>

<pre class="Syntax"><span class="func">#Include</span> DateiOderVerzName
<span class="func">#Include</span> &lt;BiblName&gt;
<span class="func">#IncludeAgain</span> DateiOderVerzName</pre>
<h3>Parameter</h3>
<dl>

  <dt>DateiOderVerzName</dt>
  <dd><p>Der Pfad einer Datei oder eines Verzeichnisses, wie unten beschrieben. Der Dateiname <strong>darf keine</strong> Anführungszeichen, Platzhalterzeichen oder <a href="../misc/EscapeChar.htm">Escapesequenzen</a> außer Semikolon (<strong>`;</strong>) enthalten. <a href="../Variables.htm#ScriptDir">%A_ScriptDir%</a>, <a href="../Variables.htm#AppData">%A_AppData%</a>, <a href="../Variables.htm#AppDataCommon">%A_AppDataCommon%</a> und <a href="../Variables.htm#LineFile">%A_LineFile%</a> können als Platzhalter benutzt werden.</p>
    <p><strong>Datei:</strong> Name der Datei, die inkludiert werden soll, und im Verzeichnis der aktuellen Datei vermutet wird, wenn kein absoluter Pfad angegeben ist. Hinweis: <a href="SetWorkingDir.htm">SetWorkingDir</a> hat keine Auswirkung auf #Include, weil die Direktive verarbeitet wird, bevor das Script ausgeführt wird.</p>
      <p><strong>Verzeichnis:</strong> Geben Sie ein Verzeichnis anstelle einer Datei an, um das Arbeitsverzeichnis für alle nachfolgenden Vorkommnisse von #Include und <a href="FileInstall.htm">FileInstall</a> in der aktuellen Datei zu ändern. Hinweis: Diese Änderung hat keinen Einfluss auf das anfänglich gesetzte Arbeitsverzeichnis des Skripts (<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>). Um das zu ändern, verwendet man <a href="SetWorkingDir.htm">SetWorkingDir</a> im obersten Bereich des Skripts.</p></dd>

  <dt>BiblName</dt>
  <dd><p>Der Name einer Bibliotheksdatei oder -funktion. Zum Beispiel würden sowohl <code>#Include &lt;Bibl&gt;</code> als auch <code>#Include &lt;Bibl_Funktion&gt;</code> Bibl.ahk aus einem der <a href="../Functions.htm#lib">Funktionsbibliotheksordner</a> inkludieren.</p></dd>

</dl>
<h3>Bemerkungen</h3>
<p>Ein Skript behandelt die #Include-Direktive, als wäre der Inhalt der Datei, die inkludiert werden soll, an genau dieser Stelle vorhanden (als wäre der Inhalt der Datei sozusagen vorher kopiert und dann dort eingefügt wurden). Diese Direktive ist daher nicht in der Lage, zwei einzelne Skripte zu einem funktionierenden Skript zusammenzufügen (um das zu erreichen, siehe <a href="http://www.autohotkey.com/forum/topic18545.html">www.autohotkey.com/forum/topic18545.html</a>).</p>
<p>#Include stellt sicher, dass <em>Dateiname</em> nur einmal inkludiert wird, falls es mehrmals im Skript zum Inkludieren angegeben ist. #IncludeAgain hingegen ermöglicht es, eine Datei mehrmals zu inkludieren, ansonsten ist sie in allen anderen Aspekten identisch zu #Include.</p>
<p>Vor dem <em>Dateiname</em>-Parameter kann optional *i und ein einzelnes Leerzeichen gesetzt werden, um alle Fehler zu ignorieren, die beim Lesen der zu inkludierenden Datei auftreten könnten. Zum Beispiel: <code>#Include *i Spezialoptionen.ahk</code>. Diese Option sollte nur verwenden werden, wenn der Inhalt der zu inkludierenden Datei nicht für die Ausführung des Hauptskripts relevant ist.</p>
<p>Zeilen, die im Hauptfenster via <a href="ListLines.htm">ListLines</a> oder Menüpunkt View-&gt;Lines angezeigt werden, sind immer in der Reihenfolge nummeriert, wie sie aktuell in der Datei angeordnet sind. Mit anderen Worten: Wenn eine neue Datei inkludiert wird, erhöht sich die Zeilennummerierung des Hauptskripts nur um eine Zeile (das ist die #Include-Zeile selbst). Dies gilt nicht für <a href="../Scripts.htm#ahk2exe">kompilierte Skripte</a>, weil dort die zu inkludierenden Dateien zu einem großen Skript zusammenfügt wurden.</p>
<p>#Include wird oft verwendet, um <a href="../Functions.htm">Funktionen</a> zu laden, die in einer externen Datei definiert sind. Im Gegensatz zu Subroutinen-Labels können <a href="../Functions.htm">Funktionen</a> ganz oben im Skript inkludiert werden, ohne dass der <a href="../Scripts.htm#auto">automatische Ausführungsbereich</a> beeinträchtigt wird.</p>
<p>#Include kann wie alle anderen Direktiven nicht bedingt ausgeführt werden. Das folgende Beispiel würde also nicht funktionieren:</p>
<pre>if x = 1
    #Include BeliebigeDatei.ahk  <em>; Diese Zeile wird ohne Beachtung des X-Wertes ausgeführt.</em>
    y := 2  <em>; Und diese Zeile würde sich auf das obere IF beziehen, weil Direktiven nicht mit IFs verbunden werden können.</em></pre>
<p>Sie können Dateien automatisch inkludieren lassen (ohne #Include verwenden zu müssen), indem Sie eine <a href="../Functions.htm#lib">Bibliotheksfunktion</a> via Name aufrufen.</p>

<h3>Siehe auch</h3>
<p><a href="../Functions.htm#lib">Funktionsbibliotheken</a>, <a href="../Functions.htm">Funktionen</a>, <a href="FileInstall.htm">FileInstall</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#Include C:\Meine Dokumente\Skripte\Hilfsprogramm-Subroutinen.ahk
#Include %A_ScriptDir%  <em>; Ändert das Arbeitsverzeichnis für nachfolgende #Includes und FileInstalls.</em>
#Include C:\Meine Skripte  <em>; Das gleiche wie oben, aber für ein explizit benanntes Verzeichnis.</em></pre>

</body>
</html>
