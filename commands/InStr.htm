<!DOCTYPE HTML>
<html lang="de">
<head>
<title>InStr - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die InStr-Funktion sucht nach einem bestimmten Vorkommen einer Zeichenkette, beginnend von links oder rechts." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>InStr</h1>

<p>Sucht nach einem bestimmten Vorkommen einer Zeichenkette, beginnend von links oder rechts.</p>

<pre class="Syntax">Fundposition := <span class="func">InStr</span>(Heuhaufen, Nadel <span class="optional">, GroßKleinSensitiv := false, Startposition := 1, Vorkommen := 1</span>)</pre>
<h2>Parameter</h2>
<dl>

  <dt>Heuhaufen</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Eine Zeichenkette, deren Inhalt durchsucht werden soll.</p>
  </dd>
  
  <dt>Nadel</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Der zu suchende Text.</p>
  </dd>
  
  <dt>GroßKleinSensitiv</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Geben Sie einen der folgenden Werte an (standardmäßig 0, wenn dieser Parameter weggelassen wird):</p>
    <p><code>"On"</code> oder <code>1</code> (<code>True</code>): Die Suche erfolgt Groß-/Kleinschreibung-sensitiv.</p>
    <p><code>"Off"</code> oder <code>0</code> (<code>False</code>): Die Großbuchstaben von A bis Z und die entsprechenden Kleinbuchstaben werden gleichwertig behandelt.</p>
    <p><code>"Locale"</code>: Die Suche erfolgt nicht Groß-/Kleinschreibung-sensitiv, gemäß den Regeln der aktuellen Sprach- und Regionseinstellungen des Benutzers. In den meisten englischen und westeuropäischen Regionen beispielsweise werden die Großbuchstaben A bis Z, einschließlich ASCII-fremde Zeichen wie Ä und Ü, und die entsprechenden Kleinbuchstaben gleichwertig behandelt. <em>Locale</em> ist 1- bis 8-mal langsamer als <em>Off</em>, abhängig von den zu vergleichenden Zeichenketten.</p>
  </dd>

  <dt>Startposition</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Lässt man <em>Startposition</em> weg, wird standardmäßig 1 verwendet (der Anfang von <em>Heuhaufen</em>). Ansonsten kann eine 2 angegeben werden, um beim zweiten Zeichen zu beginnen, eine 3, um beim dritten Zeichen zu beginnen, und so weiter.</p>
    <p>Wenn <em>Startposition</em> negativ ist, erfolgt die Suche in umgekehrter Reihenfolge (von rechts nach links), auf der rechten Seite beginnend. Zum Beispiel würde -1 beim letzten Zeichen beginnen. Wenn <em>Startposition</em> eine 0 ist oder die Länge von <em>Heuhaufen</em> überschreitet, wird eine 0 zurückgegeben.</p>
    <p>Egal welchen Wert man als <em>Startposition</em> verwendet - der Rückgabewert ist immer relativ zum ersten <em>Heuhaufen</em>-Zeichen. Zum Beispiel ist die Position von "abc" in "123abc789" immer 4.</p>
  </dd>

  <dt>Vorkommen</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Lässt man <em>Vorkommen</em> weg, wird standardmäßig die erste Übereinstimmung von <em>Nadel</em> in <em>Heuhaufen</em> verwendet. Fügen Sie eine 2 in <em>Vorkommen</em> ein, um die Position der zweiten Übereinstimmung zurückzugeben, eine 3 für die dritte Übereinstimmung und so weiter.</p>
  </dd>

  </dl>
  
<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>Diese Funktion gibt die Position der Zeichenkette <em>Nadel</em> zurück, die in der Zeichenkette <em>Heuhaufen</em> vorkommt. Position 1 ist das erste Zeichen; das liegt daran, dass 0 das Synonym für "falsch" ist, was sich gut als "nicht gefunden" eignet.</p>
<p>Traditionsgemäß kann das Vorkommen einer leeren Zeichenkette (<code>""</code>) an jeder Position gefunden werden. Allerdings übergibt man normalerweise keine leere <em>Nadel</em>, daher wird sie als Fehler behandelt (es wird eine Ausnahme ausgelöst).</p>

<h2>Bemerkungen</h2>
<p><a href="RegExMatch.htm">RegExMatch</a> ist flexibler als InStr, wenn es darum geht, ein bestimmtes Suchmuster (regulärer Ausdruck) innerhalb einer Zeichenkette zu suchen. Zum Suchen einer einfachen Zeichenkette ist InStr besser geeignet.</p>
<p>InStr stoppt die Suche, sobald eine binäre Null (Null-Terminator) gefunden wird, während RegExMatch die komplette <a href="StrLen.htm">Länge</a> der Zeichenkette durchsucht, egal ob sie binäre Nullen enthält.</p>

<h2>Siehe auch</h2>
<p><a href="RegExMatch.htm">RegExMatch</a>, <a href="Is.htm">Is-Funktionen</a></p>

<h2>Beispiele</h2>
<div class="ex" id="ExRetValue">
<p><a href="#ExRetValue">#1</a></p>
<pre>MsgBox InStr("123abc789", "abc") <em>; Gibt 4 zurück</em></pre>
</div>

<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#2</a></p>
<pre>Heuhaufen := "The Quick Brown Fox Jumps Over the Lazy Dog"
Nadel := "Fox"
If InStr(Heuhaufen, Nadel)
    MsgBox "Die Zeichenkette wurde gefunden."
Else
    MsgBox "Die Zeichenkette wurde nicht gefunden."</pre>
</div>

<div class="ex" id="ExCaseSens">
<p><a href="#ExCaseSens">#3</a></p>
<pre>Heuhaufen := "The Quick Brown Fox Jumps Over the Lazy Dog"
Nadel := "the"
MsgBox InStr(Heuhaufen, Nadel, false, 1, 2) <em>; nicht-Groß-/Kleinschreibung-sensitive Suche, gibt die Startposition des zweiten Vorkommens zurück</em>
MsgBox InStr(Heuhaufen, Nadel, true) <em>; Groß-/Kleinschreibung-sensitive Suche, gibt die Startposition des ersten Vorkommens zurück, das gleiche Ergebnis wie oben</em>
</pre>
</div>

</body>
</html>
