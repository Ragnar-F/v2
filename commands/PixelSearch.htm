<!DOCTYPE HTML>
<html lang="de">
<head>
<title>PixelSearch - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die PixelSearch-Funktion sucht innerhalb eines bestimmten Bildschirmbereichs nach einem Pixel, das eine bestimmte Farbe hat." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>PixelSearch</h1>

<p>Sucht innerhalb eines bestimmten Bildschirmbereichs nach einem Pixel, das eine bestimmte Farbe hat.</p>

<pre class="Syntax"><span class="func">PixelSearch</span> AusgabeX, AusgabeY, X1, Y1, X2, Y2, FarbeID <span class="optional">, Variation</span></pre>
<h2>Parameter</h2>
<dl>

  <dt>AusgabeVarX, AusgabeVarY</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variables">Variable</a></p>
    <p>Die Variablen, in denen die X- und Y-Koordinate des ersten Pixels, das die Farbe <em>FarbeID</em> hat, gespeichert werden sollen (wenn das Pixel nicht gefunden wird, werden diese Variablen leer gemacht). Standardmäßig sind Koordinaten relativ zum aktiven Fenster, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
  </dd>

  <dt>X1, Y1</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die X- und Y-Koordinate einer Ecke des rechteckigen Suchbereichs, die den Startpunkt der Suche kennzeichnet. Standardmäßig sind Koordinaten relativ zum <strong>aktiven Fenster</strong>, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
  </dd>

  <dt>X2, Y2</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die X- und Y-Koordinate einer Ecke des rechteckigen Suchbereichs, die den Endpunkt der Suche kennzeichnet. Standardmäßig sind Koordinaten relativ zum aktiven Fenster, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
  </dd>

  <dt>FarbeID</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Die ID einer Farbe, die gesucht werden soll, was üblicherweise eine hexadezimale Zahl im RGB-Format (Rot-Grün-Blau) ist. Zum Beispiel: <code>0x9d6346</code>. Farben-IDs können mithilfe des Tools Window Spy (das über das Tray-Menü erreichbar ist) oder via <a href="PixelGetColor.htm">PixelGetColor</a> ermittelt werden.</p>
  </dd>

  <dt>Variation</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Eine Zahl im Bereich von 0 bis 255, um die erlaubte Anzahl von Variationsnuancen in beiden Richtungen für die Intensität der Rot-, Grün- und Blaukomponenten der Farbe festzulegen. Dieser Parameter ist hilfreich, wenn die Farbe des Pixels leicht variiert. Wenn Sie 255 Variationsnuancen angeben, werden alle Farben übereinstimmen. Standardmäßig gelten 0 Variationsnuancen.</p>
  </dd>

</dl>

<h2>Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#boolean">Integer (boolescher Wert)</a></p>
<p>Diese Funktion gibt 1 (true) zurück, wenn die Farbe im angegeben Bereich gefunden wurde, oder 0 (false), wenn sie nicht gefunden wurde.</p>

<h2>Fehlerbehandlung</h2>
<p>Es wird eine Ausnahme ausgelöst, wenn ein Problem die Funktion daran gehindert hat, die Suche durchzuführen.</p>

<h2>Bemerkungen</h2>
<p>Der Suchbereich muss sichtbar sein; das heißt, dass es nicht möglich ist, einen Bereich in einem Fenster zu durchsuchen, das hinter einem anderen Fenster liegt. Pixel unterhalb des Mauszeigers werden in der Regel erkannt. Videospielmauszeiger hingegen verdecken meistens die Sicht auf darunterliegende Pixel.</p>
<p>Obwohl Farbtiefen bis runter zu 8-Bit (256 Farben) unterstützt werden, schneidet der Fast-Modus bei 24-Bit- oder 32-Bit-Farben wesentlich besser ab.</p>
<p>PixelSearch startet bei den Koordinaten <em>X1</em> und <em>Y1</em> und sucht in der Zeile von <em>X1</em> bis <em>X2</em> nach einer Übereinstimmung. Wenn es keine Übereinstimmung findet, wird PixelSearch zeilenweise in Richtung <em>Y2</em> weitersuchen, bis etwas gefunden wird.</p>
<p>Die Suchrichtung ist von der Anordnung der Parameter abhängig. Das heißt: Wenn <em>X1</em> größer als <em>X2</em> ist, wird die Suche von rechts nach links durchgeführt, beginnend bei Spalte <em>X1</em>. Entsprechend wird, wenn <em>Y1</em> größer als <em>Y2</em> ist, die Suche von unten nach oben durchgeführt.</p>
<p>Wenn der Suchbereich groß ist und die Suche mit hoher Frequenz durchgeführt wird, kann es passieren, dass PixelSearch sehr viel CPU-Zeit in Anspruch nimmt. Um dem entgegenzuwirken, sollte die Größe des Suchbereichs auf ein Minimum beschränkt werden.</p>

<h2>Siehe auch</h2>
<p><a href="PixelGetColor.htm">PixelGetColor</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h2>Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>if PixelSearch(Px, Py, 200, 200, 300, 300, 0x9d6346, 3)
    MsgBox "Eine Farbe innerhalb von 3 Variationsnuancen wurde auf X" Px " Y" Py " gefunden."
else
    MsgBox "Die Farbe wurde innerhalb des angegebenen Bereichs nicht gefunden."
</pre>
</div>

</body>
</html>
